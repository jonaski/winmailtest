name: C/C++ CI
on: [push, pull_request]

jobs:
  build-windows:
    name: Build Windows
    runs-on: ubuntu-latest
    container:
      image: jonaski/mxe-qt
    steps:
      - uses: actions/checkout@v1.2.0

      - name: Create Build Environment
        shell: bash
        run: cmake -E make_directory build

      - name: Link MXE directory
        shell: bash
        run: ln -s /usr/src/mxe-qt ~/mxe-static

      - name: Run CMake
        shell: bash
        env:
          PKG_CONFIG_PATH: /usr/src/mxe-qt/usr/x86_64-w64-mingw32.static/lib/pkgconfig
        working-directory: build
        run: >
          cmake ..
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-x86_64-w64-mingw32-static.cmake
          -DENABLE_WIN32_CONSOLE=OFF

      - name: Run Make
        working-directory: build
        run: make -j2

      - name: Strip executables
        working-directory: build
        run: /usr/src/mxe-qt/usr/bin/x86_64-w64-mingw32.static-strip *.exe

      - uses: actions/upload-artifact@v2
        with:
          name: release-windows
          path: build/winmailtest.exe

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build-windows
    steps:
      - uses: actions/checkout@v1.2.0
      - uses: actions/download-artifact@v2
        with:
          path: release_artifacts
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          version=$(git describe --tags --always)
          assets=()
          for asset in $(find release_artifacts -type f); do
            echo "Adding asset: ${asset}"
            assets+=("-a" "$asset")
          done
          hub release create "${assets[@]}" -m "WinMailTest $version" -t "$GITHUB_SHA" "$version"
