/****************************************************************************
**
** Namespace Outlook generated by dumpcpp v5.14.2 using
** dumpcpp.exe MSOUTL.OLB
** from the type library MSOUTL.OLB
**
****************************************************************************/

#ifndef QAX_DUMPCPP_OUTLOOK_H
#define QAX_DUMPCPP_OUTLOOK_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef OUTLOOK_EXPORT
#define OUTLOOK_EXPORT
#endif

#include <QAxObject>
#include <QAxWidget>
#include <QDateTime>
#include <QPixmap>

struct IDispatch;


// Referenced namespace
namespace Office {
    class Assistant;
    class COMAddIns;
    class LanguageSettings;
    class AnswerWizard;
#ifndef Q_CC_MINGW
    enum MsoFeatureInstall;
#else
    enum MsoFeatureInstall {};
#endif
    class IAssistance;
    class PickerDialog;
    class MsoDebugOptions;
    class DataPrivacyOptions;
    class ContactCard;
    class CommandBars;
    class CommandBar;
}

namespace stdole {
    class Font;
}

Q_DECLARE_OPAQUE_POINTER(Office::Assistant*)
Q_DECLARE_OPAQUE_POINTER(Office::COMAddIns*)
Q_DECLARE_OPAQUE_POINTER(Office::LanguageSettings*)
Q_DECLARE_OPAQUE_POINTER(Office::AnswerWizard*)
Q_DECLARE_OPAQUE_POINTER(Office::IAssistance*)
Q_DECLARE_OPAQUE_POINTER(Office::PickerDialog*)
Q_DECLARE_OPAQUE_POINTER(Office::MsoDebugOptions*)
Q_DECLARE_OPAQUE_POINTER(Office::DataPrivacyOptions*)
Q_DECLARE_OPAQUE_POINTER(Office::ContactCard*)
Q_DECLARE_OPAQUE_POINTER(Office::CommandBars*)
Q_DECLARE_OPAQUE_POINTER(Office::CommandBar*)
Q_DECLARE_OPAQUE_POINTER(stdole::Font*)

namespace Outlook {

    enum OlAccountType {
        olExchange              = 0,
        olImap                  = 1,
        olPop3                  = 2,
        olHttp                  = 3,
        olEas                   = 4,
        olOtherAccount          = 5,
        olGoogle                = 6
    };

    enum OlActionCopyLike {
        olReply                 = 0,
        olReplyAll              = 1,
        olForward               = 2,
        olReplyFolder           = 3,
        olRespond               = 4
    };

    enum OlActionReplyStyle {
        olOmitOriginalText      = 0,
        olEmbedOriginalItem     = 1,
        olIncludeOriginalText   = 2,
        olIndentOriginalText    = 3,
        olLinkOriginalItem      = 4,
        olUserPreference        = 5,
        olReplyTickOriginalText = 1000
    };

    enum OlActionResponseStyle {
        olOpen                  = 0,
        olSend                  = 1,
        olPrompt                = 2
    };

    enum OlActionShowOn {
        olDontShow              = 0,
        olMenu                  = 1,
        olMenuAndToolbar        = 2
    };

    enum OlAddressEntryUserType {
        olExchangeUserAddressEntry= 0,
        olExchangeDistributionListAddressEntry= 1,
        olExchangePublicFolderAddressEntry= 2,
        olExchangeAgentAddressEntry= 3,
        olExchangeOrganizationAddressEntry= 4,
        olExchangeRemoteUserAddressEntry= 5,
        olOutlookContactAddressEntry= 10,
        olOutlookDistributionListAddressEntry= 11,
        olLdapAddressEntry      = 20,
        olSmtpAddressEntry      = 30,
        olOtherAddressEntry     = 40
    };

    enum OlAddressListType {
        olExchangeGlobalAddressList= 0,
        olExchangeContainer     = 1,
        olOutlookAddressList    = 2,
        olOutlookLdapAddressList= 3,
        olCustomAddressList     = 4
    };

    enum OlAlign {
        olAlignLeft             = 0,
        olAlignCenter           = 1,
        olAlignRight            = 2
    };

    enum OlAlignment {
        olAlignmentLeft         = 0,
        olAlignmentRight        = 1
    };

    enum OlAlwaysDeleteConversation {
        olDoNotDelete           = 0,
        olAlwaysDelete          = 1,
        olAlwaysDeleteUnsupported= 2
    };

    enum OlAppointmentCopyOptions {
        olPromptUser            = 0,
        olCreateAppointment     = 1,
        olCopyAsAccept          = 2
    };

    enum OlAppointmentTimeField {
        olAppointmentTimeFieldNone= 1,
        olAppointmentTimeFieldStart= 2,
        olAppointmentTimeFieldEnd= 3
    };

    enum OlAttachmentBlockLevel {
        olAttachmentBlockLevelNone= 0,
        olAttachmentBlockLevelOpen= 1
    };

    enum OlAttachmentType {
        olByValue               = 1,
        olByReference           = 4,
        olEmbeddeditem          = 5,
        olOLE                   = 6
    };

    enum OlAutoDiscoverConnectionMode {
        olAutoDiscoverConnectionUnknown= 0,
        olAutoDiscoverConnectionExternal= 1,
        olAutoDiscoverConnectionInternal= 2,
        olAutoDiscoverConnectionInternalDomain= 3
    };

    enum OlAutoPreview {
        olAutoPreviewAll        = 0,
        olAutoPreviewUnread     = 1,
        olAutoPreviewNone       = 2
    };

    enum OlBackStyle {
        olBackStyleTransparent  = 0,
        olBackStyleOpaque       = 1
    };

    enum OlBodyFormat {
        olFormatUnspecified     = 0,
        olFormatPlain           = 1,
        olFormatHTML            = 2,
        olFormatRichText        = 3
    };

    enum OlBorderStyle {
        olBorderStyleNone       = 0,
        olBorderStyleSingle     = 1
    };

    enum OlBusinessCardType {
        olBusinessCardTypeOutlook= 0,
        olBusinessCardTypeInterConnect= 1
    };

    enum OlBusyStatus {
        olFree                  = 0,
        olTentative             = 1,
        olBusy                  = 2,
        olOutOfOffice           = 3,
        olWorkingElsewhere      = 4
    };

    enum OlCalendarDetail {
        olFreeBusyOnly          = 0,
        olFreeBusyAndSubject    = 1,
        olFullDetails           = 2
    };

    enum OlCalendarMailFormat {
        olCalendarMailFormatDailySchedule= 0,
        olCalendarMailFormatEventList= 1
    };

    enum OlCalendarViewMode {
        olCalendarViewDay       = 0,
        olCalendarViewWeek      = 1,
        olCalendarViewMonth     = 2,
        olCalendarViewMultiDay  = 3,
        olCalendarView5DayWeek  = 4
    };

    enum OlCategoryColor {
        olCategoryColorNone     = 0,
        olCategoryColorRed      = 1,
        olCategoryColorOrange   = 2,
        olCategoryColorPeach    = 3,
        olCategoryColorYellow   = 4,
        olCategoryColorGreen    = 5,
        olCategoryColorTeal     = 6,
        olCategoryColorOlive    = 7,
        olCategoryColorBlue     = 8,
        olCategoryColorPurple   = 9,
        olCategoryColorMaroon   = 10,
        olCategoryColorSteel    = 11,
        olCategoryColorDarkSteel= 12,
        olCategoryColorGray     = 13,
        olCategoryColorDarkGray = 14,
        olCategoryColorBlack    = 15,
        olCategoryColorDarkRed  = 16,
        olCategoryColorDarkOrange= 17,
        olCategoryColorDarkPeach= 18,
        olCategoryColorDarkYellow= 19,
        olCategoryColorDarkGreen= 20,
        olCategoryColorDarkTeal = 21,
        olCategoryColorDarkOlive= 22,
        olCategoryColorDarkBlue = 23,
        olCategoryColorDarkPurple= 24,
        olCategoryColorDarkMaroon= 25
    };

    enum OlCategoryShortcutKey {
        olCategoryShortcutKeyNone= 0,
        olCategoryShortcutKeyCtrlF2= 1,
        olCategoryShortcutKeyCtrlF3= 2,
        olCategoryShortcutKeyCtrlF4= 3,
        olCategoryShortcutKeyCtrlF5= 4,
        olCategoryShortcutKeyCtrlF6= 5,
        olCategoryShortcutKeyCtrlF7= 6,
        olCategoryShortcutKeyCtrlF8= 7,
        olCategoryShortcutKeyCtrlF9= 8,
        olCategoryShortcutKeyCtrlF10= 9,
        olCategoryShortcutKeyCtrlF11= 10,
        olCategoryShortcutKeyCtrlF12= 11
    };

    enum OlColor {
        olAutoColor             = 0,
        olColorBlack            = 1,
        olColorMaroon           = 2,
        olColorGreen            = 3,
        olColorOlive            = 4,
        olColorNavy             = 5,
        olColorPurple           = 6,
        olColorTeal             = 7,
        olColorGray             = 8,
        olColorSilver           = 9,
        olColorRed              = 10,
        olColorLime             = 11,
        olColorYellow           = 12,
        olColorBlue             = 13,
        olColorFuchsia          = 14,
        olColorAqua             = 15,
        olColorWhite            = 16
    };

    enum OlComboBoxStyle {
        olComboBoxStyleCombo    = 0,
        olComboBoxStyleList     = 2
    };

    enum OlContactPhoneNumber {
        olContactPhoneAssistant = 0,
        olContactPhoneBusiness  = 1,
        olContactPhoneBusiness2 = 2,
        olContactPhoneBusinessFax= 3,
        olContactPhoneCallback  = 4,
        olContactPhoneCar       = 5,
        olContactPhoneCompany   = 6,
        olContactPhoneHome      = 7,
        olContactPhoneHome2     = 8,
        olContactPhoneHomeFax   = 9,
        olContactPhoneISDN      = 10,
        olContactPhoneMobile    = 11,
        olContactPhoneOther     = 12,
        olContactPhoneOtherFax  = 13,
        olContactPhonePager     = 14,
        olContactPhonePrimary   = 15,
        olContactPhoneRadio     = 16,
        olContactPhoneTelex     = 17,
        olContactPhoneTTYTTD    = 18
    };

    enum OlContextMenu {
        olItemContextMenu       = 0,
        olViewContextMenu       = 1,
        olFolderContextMenu     = 2,
        olAttachmentContextMenu = 3,
        olStoreContextMenu      = 4,
        olShortcutContextMenu   = 5
    };

    enum OlDayWeekTimeScale {
        olTimeScale5Minutes     = 0,
        olTimeScale6Minutes     = 1,
        olTimeScale10Minutes    = 2,
        olTimeScale15Minutes    = 3,
        olTimeScale30Minutes    = 4,
        olTimeScale60Minutes    = 5
    };

    enum OlDaysOfWeek {
        olSunday                = 1,
        olMonday                = 2,
        olTuesday               = 4,
        olWednesday             = 8,
        olThursday              = 16,
        olFriday                = 32,
        olSaturday              = 64
    };

    enum OlDefaultExpandCollapseSetting {
        olAllExpanded           = 0,
        olAllCollapsed          = 1,
        olLastViewed            = 2
    };

    enum OlDefaultFolders {
        olFolderDeletedItems    = 3,
        olFolderOutbox          = 4,
        olFolderSentMail        = 5,
        olFolderInbox           = 6,
        olFolderCalendar        = 9,
        olFolderContacts        = 10,
        olFolderJournal         = 11,
        olFolderNotes           = 12,
        olFolderTasks           = 13,
        olFolderDrafts          = 16,
        olPublicFoldersAllPublicFolders= 18,
        olFolderConflicts       = 19,
        olFolderSyncIssues      = 20,
        olFolderLocalFailures   = 21,
        olFolderServerFailures  = 22,
        olFolderJunk            = 23,
        olFolderRssFeeds        = 25,
        olFolderToDo            = 28,
        olFolderManagedEmail    = 29,
        olFolderSuggestedContacts= 30
    };

    enum OlDefaultSelectNamesDisplayMode {
        olDefaultMail           = 1,
        olDefaultMeeting        = 2,
        olDefaultSharingRequest = 4,
        olDefaultTask           = 3,
        olDefaultMembers        = 5,
        olDefaultDelegates      = 6,
        olDefaultSingleName     = 7,
        olDefaultPickRooms      = 8
    };

    enum OlDisplayMode {
        olDisplayModeNormal     = 0,
        olDisplayModePortraitView= 1,
        olDisplayModePortraitReadingPane= 2
    };

    enum OlDisplayType {
        olUser                  = 0,
        olDistList              = 1,
        olForum                 = 2,
        olAgent                 = 3,
        olOrganization          = 4,
        olPrivateDistList       = 5,
        olRemoteUser            = 6
    };

    enum OlDownloadState {
        olHeaderOnly            = 0,
        olFullItem              = 1
    };

    enum OlDragBehavior {
        olDragBehaviorDisabled  = 0,
        olDragBehaviorEnabled   = 1
    };

    enum OlEditorType {
        olEditorText            = 1,
        olEditorHTML            = 2,
        olEditorRTF             = 3,
        olEditorWord            = 4
    };

    enum OlEnterFieldBehavior {
        olEnterFieldBehaviorSelectAll= 0,
        olEnterFieldBehaviorRecallSelection= 1
    };

    enum OlExchangeConnectionMode {
        olNoExchange            = 0,
        olOffline               = 100,
        olCachedOffline         = 200,
        olDisconnected          = 300,
        olCachedDisconnected    = 400,
        olCachedConnectedHeaders= 500,
        olCachedConnectedDrizzle= 600,
        olCachedConnectedFull   = 700,
        olOnline                = 800
    };

    enum OlExchangeStoreType {
        olPrimaryExchangeMailbox= 0,
        olExchangeMailbox       = 1,
        olExchangePublicFolder  = 2,
        olNotExchange           = 3,
        olAdditionalExchangeMailbox= 4
    };

    enum OlFlagIcon {
        olNoFlagIcon            = 0,
        olPurpleFlagIcon        = 1,
        olOrangeFlagIcon        = 2,
        olGreenFlagIcon         = 3,
        olYellowFlagIcon        = 4,
        olBlueFlagIcon          = 5,
        olRedFlagIcon           = 6
    };

    enum OlFlagStatus {
        olNoFlag                = 0,
        olFlagComplete          = 1,
        olFlagMarked            = 2
    };

    enum OlFolderDisplayMode {
        olFolderDisplayNormal   = 0,
        olFolderDisplayFolderOnly= 1,
        olFolderDisplayNoNavigation= 2
    };

    enum OlFormRegionIcon {
        olFormRegionIconDefault = 1,
        olFormRegionIconUnread  = 2,
        olFormRegionIconRead    = 3,
        olFormRegionIconReplied = 4,
        olFormRegionIconForwarded= 5,
        olFormRegionIconUnsent  = 6,
        olFormRegionIconSubmitted= 7,
        olFormRegionIconSigned  = 8,
        olFormRegionIconEncrypted= 9,
        olFormRegionIconWindow  = 10,
        olFormRegionIconPage    = 11,
        olFormRegionIconRecurring= 12
    };

    enum OlFormRegionMode {
        olFormRegionRead        = 0,
        olFormRegionCompose     = 1,
        olFormRegionPreview     = 2
    };

    enum OlFormRegionSize {
        olFormRegionTypeSeparate= 0,
        olFormRegionTypeAdjoining= 1
    };

    enum OlFormRegistry {
        olDefaultRegistry       = 0,
        olPersonalRegistry      = 2,
        olFolderRegistry        = 3,
        olOrganizationRegistry  = 4
    };

    enum OlFormatCurrency {
        olFormatCurrencyDecimal = 1,
        olFormatCurrencyNonDecimal= 2
    };

    enum OlFormatDateTime {
        olFormatDateTimeLongDayDateTime= 1,
        olFormatDateTimeShortDateTime= 2,
        olFormatDateTimeShortDayDateTime= 3,
        olFormatDateTimeShortDayMonthDateTime= 4,
        OlFormatDateTimeLongDayDate= 5,
        olFormatDateTimeLongDate= 6,
        olFormatDateTimeLongDateReversed= 7,
        olFormatDateTimeShortDate= 8,
        olFormatDateTimeShortDateNumOnly= 9,
        olFormatDateTimeShortDayMonth= 10,
        olFormatDateTimeShortMonthYear= 11,
        olFormatDateTimeShortMonthYearNumOnly= 12,
        olFormatDateTimeShortDayDate= 13,
        olFormatDateTimeLongTime= 15,
        olFormatDateTimeShortTime= 16,
        olFormatDateTimeBestFit = 17
    };

    enum OlFormatDuration {
        olFormatDurationShort   = 1,
        olFormatDurationLong    = 2,
        olFormatDurationShortBusiness= 3,
        olFormatDurationLongBusiness= 4
    };

    enum OlFormatEnumeration {
        olFormatEnumBitmap      = 1,
        olFormatEnumText        = 2
    };

    enum OlFormatInteger {
        olFormatIntegerPlain    = 1,
        olFormatIntegerComputer1= 2,
        olFormatIntegerComputer2= 3,
        olFormatIntegerComputer3= 4
    };

    enum OlFormatKeywords {
        olFormatKeywordsText    = 1
    };

    enum OlFormatNumber {
        olFormatNumberAllDigits = 1,
        olFormatNumberTruncated = 2,
        olFormatNumber1Decimal  = 3,
        olFormatNumber2Decimal  = 4,
        olFormatNumberScientific= 5,
        olFormatNumberComputer1 = 6,
        olFormatNumberComputer2 = 7,
        olFormatNumberComputer3 = 8,
        olFormatNumberRaw       = 9
    };

    enum OlFormatPercent {
        olFormatPercentRounded  = 1,
        olFormatPercent1Decimal = 2,
        olFormatPercent2Decimal = 3,
        olFormatPercentAllDigits= 4
    };

    enum OlFormatSmartFrom {
        olFormatSmartFromFromTo = 1,
        olFormatSmartFromFromOnly= 2
    };

    enum OlFormatText {
        olFormatTextText        = 1
    };

    enum OlFormatYesNo {
        olFormatYesNoYesNo      = 1,
        olFormatYesNoOnOff      = 2,
        olFormatYesNoTrueFalse  = 3,
        olFormatYesNoIcon       = 4
    };

    enum OlGender {
        olUnspecified           = 0,
        olFemale                = 1,
        olMale                  = 2
    };

    enum OlGridLineStyle {
        olGridLineNone          = 0,
        olGridLineSmallDots     = 1,
        olGridLineLargeDots     = 2,
        olGridLineDashes        = 3,
        olGridLineSolid         = 4
    };

    enum OlGroupType {
        olCustomFoldersGroup    = 0,
        olMyFoldersGroup        = 1,
        olPeopleFoldersGroup    = 2,
        olOtherFoldersGroup     = 3,
        olFavoriteFoldersGroup  = 4,
        olRoomsGroup            = 5,
        olReadOnlyGroup         = 6
    };

    enum OlHorizontalLayout {
        olHorizontalLayoutAlignLeft= 0,
        olHorizontalLayoutAlignCenter= 1,
        olHorizontalLayoutAlignRight= 2,
        olHorizontalLayoutGrow  = 3
    };

    enum OlIconViewPlacement {
        olIconDoNotArrange      = 0,
        olIconLineUp            = 1,
        olIconAutoArrange       = 2,
        olIconSortAndAutoArrange= 3
    };

    enum OlIconViewType {
        olIconViewLarge         = 0,
        olIconViewSmall         = 1,
        olIconViewList          = 2
    };

    enum OlImportance {
        olImportanceLow         = 0,
        olImportanceNormal      = 1,
        olImportanceHigh        = 2
    };

    enum OlInspectorClose {
        olSave                  = 0,
        olDiscard               = 1,
        olPromptForSave         = 2
    };

    enum OlItemType {
        olMailItem              = 0,
        olAppointmentItem       = 1,
        olContactItem           = 2,
        olTaskItem              = 3,
        olJournalItem           = 4,
        olNoteItem              = 5,
        olPostItem              = 6,
        olDistributionListItem  = 7,
        olMobileItemSMS         = 11,
        olMobileItemMMS         = 12
    };

    enum OlJournalRecipientType {
        olAssociatedContact     = 1
    };

    enum OlMailRecipientType {
        olOriginator            = 0,
        olTo                    = 1,
        olCC                    = 2,
        olBCC                   = 3
    };

    enum OlMailingAddress {
        olNone                  = 0,
        olHome                  = 1,
        olBusiness              = 2,
        olOther                 = 3
    };

    enum OlMarkInterval {
        olMarkToday             = 0,
        olMarkTomorrow          = 1,
        olMarkThisWeek          = 2,
        olMarkNextWeek          = 3,
        olMarkNoDate            = 4,
        olMarkComplete          = 5
    };

    enum OlMatchEntry {
        olMatchEntryFirstLetter = 0,
        olMatchEntryComplete    = 1,
        olMatchEntryNone        = 2
    };

    enum OlMeetingRecipientType {
        olOrganizer             = 0,
        olRequired              = 1,
        olOptional              = 2,
        olResource              = 3
    };

    enum OlMeetingResponse {
        olMeetingTentative      = 2,
        olMeetingAccepted       = 3,
        olMeetingDeclined       = 4
    };

    enum OlMeetingStatus {
        olNonMeeting            = 0,
        olMeeting               = 1,
        olMeetingReceived       = 3,
        olMeetingCanceled       = 5,
        olMeetingReceivedAndCanceled= 7
    };

    enum OlMobileFormat {
        olSMS                   = 0,
        olMMS                   = 1
    };

    enum OlMouseButton {
        olMouseButtonLeft       = 1,
        olMouseButtonRight      = 2,
        olMouseButtonMiddle     = 4
    };

    enum OlMousePointer {
        olMousePointerDefault   = 0,
        olMousePointerArrow     = 1,
        olMousePointerCross     = 2,
        olMousePointerIBeam     = 3,
        olMousePointerSizeNESW  = 6,
        olMousePointerSizeNS    = 7,
        olMousePointerSizeNWSE  = 8,
        olMousePointerSizeWE    = 9,
        olMousePointerUpArrow   = 10,
        olMousePointerHourGlass = 11,
        olMousePointerNoDrop    = 12,
        olMousePointerAppStarting= 13,
        olMousePointerHelp      = 14,
        olMousePointerSizeAll   = 15,
        olMousePointerCustom    = 99
    };

    enum OlMultiLine {
        olWidthMultiLine        = 0,
        olAlwaysSingleLine      = 1,
        olAlwaysMultiLine       = 2
    };

    enum OlMultiSelect {
        olMultiSelectSingle     = 0,
        olMultiSelectMulti      = 1,
        olMultiSelectExtended   = 2
    };

    enum OlNavigationModuleType {
        olModuleMail            = 0,
        olModuleCalendar        = 1,
        olModuleContacts        = 2,
        olModuleTasks           = 3,
        olModuleJournal         = 4,
        olModuleNotes           = 5,
        olModuleFolderList      = 6,
        olModuleShortcuts       = 7,
        olModuleSolutions       = 8
    };

    enum OlNetMeetingType {
        olNetMeeting            = 0,
        olNetShow               = 1,
        olExchangeConferencing  = 2
    };

    enum OlNoteColor {
        olBlue                  = 0,
        olGreen                 = 1,
        olPink                  = 2,
        olYellow                = 3,
        olWhite                 = 4
    };

    enum OlObjectClass {
        olApplication           = 0,
        olNamespace             = 1,
        olFolder                = 2,
        olRecipient             = 4,
        olAttachment            = 5,
        olAddressList           = 7,
        olAddressEntry          = 8,
        olFolders               = 15,
        olItems                 = 16,
        olRecipients            = 17,
        olAttachments           = 18,
        olAddressLists          = 20,
        olAddressEntries        = 21,
        olAppointment           = 26,
        olMeetingRequest        = 53,
        olMeetingCancellation   = 54,
        olMeetingResponseNegative= 55,
        olMeetingResponsePositive= 56,
        olMeetingResponseTentative= 57,
        olRecurrencePattern     = 28,
        olExceptions            = 29,
        olException             = 30,
        olAction                = 32,
        olActions               = 33,
        olExplorer              = 34,
        olInspector             = 35,
        olPages                 = 36,
        olFormDescription       = 37,
        olUserProperties        = 38,
        olUserProperty          = 39,
        olContact               = 40,
        olDocument              = 41,
        olJournal               = 42,
        olMail                  = 43,
        olNote                  = 44,
        olPost                  = 45,
        olReport                = 46,
        olRemote                = 47,
        olTask                  = 48,
        olTaskRequest           = 49,
        olTaskRequestUpdate     = 50,
        olTaskRequestAccept     = 51,
        olTaskRequestDecline    = 52,
        olExplorers             = 60,
        olInspectors            = 61,
        olPanes                 = 62,
        olOutlookBarPane        = 63,
        olOutlookBarStorage     = 64,
        olOutlookBarGroups      = 65,
        olOutlookBarGroup       = 66,
        olOutlookBarShortcuts   = 67,
        olOutlookBarShortcut    = 68,
        olDistributionList      = 69,
        olPropertyPageSite      = 70,
        olPropertyPages         = 71,
        olSyncObject            = 72,
        olSyncObjects           = 73,
        olSelection             = 74,
        olLink                  = 75,
        olLinks                 = 76,
        olSearch                = 77,
        olResults               = 78,
        olViews                 = 79,
        olView                  = 80,
        olItemProperties        = 98,
        olItemProperty          = 99,
        olReminders             = 100,
        olReminder              = 101,
        olConflict              = 102,
        olConflicts             = 103,
        olSharing               = 104,
        olAccount               = 105,
        olAccounts              = 106,
        olStore                 = 107,
        olStores                = 108,
        olSelectNamesDialog     = 109,
        olExchangeUser          = 110,
        olExchangeDistributionList= 111,
        olPropertyAccessor      = 112,
        olStorageItem           = 113,
        olRules                 = 114,
        olRule                  = 115,
        olRuleActions           = 116,
        olRuleAction            = 117,
        olMoveOrCopyRuleAction  = 118,
        olSendRuleAction        = 119,
        olTable                 = 120,
        olRow                   = 121,
        olAssignToCategoryRuleAction= 122,
        olPlaySoundRuleAction   = 123,
        olMarkAsTaskRuleAction  = 124,
        olNewItemAlertRuleAction= 125,
        olRuleConditions        = 126,
        olRuleCondition         = 127,
        olImportanceRuleCondition= 128,
        olFormRegion            = 129,
        olCategoryRuleCondition = 130,
        olFormNameRuleCondition = 131,
        olFromRuleCondition     = 132,
        olSenderInAddressListRuleCondition= 133,
        olTextRuleCondition     = 134,
        olAccountRuleCondition  = 135,
        olClassTableView        = 136,
        olClassIconView         = 137,
        olClassCardView         = 138,
        olClassCalendarView     = 139,
        olClassTimeLineView     = 140,
        olViewFields            = 141,
        olViewField             = 142,
        olOrderField            = 144,
        olOrderFields           = 145,
        olViewFont              = 146,
        olAutoFormatRule        = 147,
        olAutoFormatRules       = 148,
        olColumnFormat          = 149,
        olColumns               = 150,
        olCalendarSharing       = 151,
        olCategory              = 152,
        olCategories            = 153,
        olColumn                = 154,
        olClassNavigationPane   = 155,
        olNavigationModules     = 156,
        olNavigationModule      = 157,
        olMailModule            = 158,
        olCalendarModule        = 159,
        olContactsModule        = 160,
        olTasksModule           = 161,
        olJournalModule         = 162,
        olNotesModule           = 163,
        olNavigationGroups      = 164,
        olNavigationGroup       = 165,
        olNavigationFolders     = 166,
        olNavigationFolder      = 167,
        olClassBusinessCardView = 168,
        olAttachmentSelection   = 169,
        olAddressRuleCondition  = 170,
        olUserDefinedProperty   = 171,
        olUserDefinedProperties = 172,
        olFromRssFeedRuleCondition= 173,
        olClassTimeZone         = 174,
        olClassTimeZones        = 175,
        olMobile                = 176,
        olSolutionsModule       = 177,
        olConversation          = 178,
        olSimpleItems           = 179,
        olOutspace              = 180,
        olMeetingForwardNotification= 181,
        olConversationHeader    = 182,
        olClassPeopleView       = 183,
        olClassThreadView       = 184,
        olPreviewPane           = 185,
        olSensitivityRuleCondition= 186,
        olClassMessageListView  = 187
    };

    enum OlOfficeDocItemsType {
        olExcelWorkSheetItem    = 8,
        olWordDocumentItem      = 9,
        olPowerPointShowItem    = 10
    };

    enum OlOutlookBarViewType {
        olLargeIcon             = 0,
        olSmallIcon             = 1
    };

    enum OlPageType {
        olPageTypePlanner       = 0,
        olPageTypeTracker       = 1
    };

    enum OlPane {
        olOutlookBar            = 1,
        olFolderList            = 2,
        olPreview               = 3,
        olNavigationPane        = 4,
        olToDoBar               = 5
    };

    enum OlPermission {
        olUnrestricted          = 0,
        olDoNotForward          = 1,
        olPermissionTemplate    = 2
    };

    enum OlPermissionService {
        olUnknown               = 0,
        olWindows               = 1,
        olPassport              = 2
    };

    enum OlPictureAlignment {
        olPictureAlignmentLeft  = 0,
        olPictureAlignmentTop   = 1
    };

    enum OlRecipientSelectors {
        olShowNone              = 0,
        olShowTo                = 1,
        olShowToCc              = 2,
        olShowToCcBcc           = 3
    };

    enum OlRecurrenceState {
        olApptNotRecurring      = 0,
        olApptMaster            = 1,
        olApptOccurrence        = 2,
        olApptException         = 3
    };

    enum OlRecurrenceType {
        olRecursDaily           = 0,
        olRecursWeekly          = 1,
        olRecursMonthly         = 2,
        olRecursMonthNth        = 3,
        olRecursYearly          = 5,
        olRecursYearNth         = 6
    };

    enum OlReferenceType {
        olWeak                  = 0,
        olStrong                = 1
    };

    enum OlRemoteStatus {
        olRemoteStatusNone      = 0,
        olUnMarked              = 1,
        olMarkedForDownload     = 2,
        olMarkedForCopy         = 3,
        olMarkedForDelete       = 4
    };

    enum OlResponseStatus {
        olResponseNone          = 0,
        olResponseOrganized     = 1,
        olResponseTentative     = 2,
        olResponseAccepted      = 3,
        olResponseDeclined      = 4,
        olResponseNotResponded  = 5
    };

    enum OlRuleActionType {
        olRuleActionUnknown     = 0,
        olRuleActionMoveToFolder= 1,
        olRuleActionAssignToCategory= 2,
        olRuleActionDelete      = 3,
        olRuleActionDeletePermanently= 4,
        olRuleActionCopyToFolder= 5,
        olRuleActionForward     = 6,
        olRuleActionForwardAsAttachment= 7,
        olRuleActionRedirect    = 8,
        olRuleActionServerReply = 9,
        olRuleActionTemplate    = 10,
        olRuleActionFlagForActionInDays= 11,
        olRuleActionFlagColor   = 12,
        olRuleActionFlagClear   = 13,
        olRuleActionImportance  = 14,
        olRuleActionSensitivity = 15,
        olRuleActionPrint       = 16,
        olRuleActionPlaySound   = 17,
        olRuleActionStartApplication= 18,
        olRuleActionMarkRead    = 19,
        olRuleActionRunScript   = 20,
        olRuleActionStop        = 21,
        olRuleActionCustomAction= 22,
        olRuleActionNewItemAlert= 23,
        olRuleActionDesktopAlert= 24,
        olRuleActionNotifyRead  = 25,
        olRuleActionNotifyDelivery= 26,
        olRuleActionCcMessage   = 27,
        olRuleActionDefer       = 28,
        olRuleActionMarkAsTask  = 29,
        olRuleActionClearCategories= 30
    };

    enum OlRuleConditionType {
        olConditionUnknown      = 0,
        olConditionFrom         = 1,
        olConditionSubject      = 2,
        olConditionAccount      = 3,
        olConditionOnlyToMe     = 4,
        olConditionTo           = 5,
        olConditionImportance   = 6,
        olConditionSensitivity  = 7,
        olConditionFlaggedForAction= 8,
        olConditionCc           = 9,
        olConditionToOrCc       = 10,
        olConditionNotTo        = 11,
        olConditionSentTo       = 12,
        olConditionBody         = 13,
        olConditionBodyOrSubject= 14,
        olConditionMessageHeader= 15,
        olConditionRecipientAddress= 16,
        olConditionSenderAddress= 17,
        olConditionCategory     = 18,
        olConditionOOF          = 19,
        olConditionHasAttachment= 20,
        olConditionSizeRange    = 21,
        olConditionDateRange    = 22,
        olConditionFormName     = 23,
        olConditionProperty     = 24,
        olConditionSenderInAddressBook= 25,
        olConditionMeetingInviteOrUpdate= 26,
        olConditionLocalMachineOnly= 27,
        olConditionOtherMachine = 28,
        olConditionAnyCategory  = 29,
        olConditionFromRssFeed  = 30,
        olConditionFromAnyRssFeed= 31
    };

    enum OlRuleExecuteOption {
        olRuleExecuteAllMessages= 0,
        olRuleExecuteReadMessages= 1,
        olRuleExecuteUnreadMessages= 2
    };

    enum OlRuleType {
        olRuleReceive           = 0,
        olRuleSend              = 1
    };

    enum OlSaveAsType {
        olTXT                   = 0,
        olRTF                   = 1,
        olTemplate              = 2,
        olMSG                   = 3,
        olDoc                   = 4,
        olHTML                  = 5,
        olVCard                 = 6,
        olVCal                  = 7,
        olICal                  = 8,
        olMSGUnicode            = 9,
        olMHTML                 = 10
    };

    enum OlScrollBars {
        olScrollBarsNone        = 0,
        olScrollBarsHorizontal  = 1,
        olScrollBarsVertical    = 2,
        olScrollBarsBoth        = 3
    };

    enum OlSearchScope {
        olSearchScopeCurrentFolder= 0,
        olSearchScopeAllFolders = 1,
        olSearchScopeAllOutlookItems= 2,
        olSearchScopeSubfolders = 3,
        olSearchScopeCurrentStore= 4
    };

    enum OlSelectionContents {
        olConversationHeaders   = 1
    };

    enum OlSelectionLocation {
        olViewList              = 0,
        olToDoBarTaskList       = 1,
        olToDoBarAppointmentList= 2,
        olDailyTaskList         = 3,
        olAttachmentWell        = 4
    };

    enum OlSensitivity {
        olNormal                = 0,
        olPersonal              = 1,
        olPrivate               = 2,
        olConfidential          = 3
    };

    enum OlSharingMsgType {
        olSharingMsgTypeUnknown = 0,
        olSharingMsgTypeRequest = 1,
        olSharingMsgTypeInvite  = 2,
        olSharingMsgTypeInviteAndRequest= 3,
        olSharingMsgTypeResponseAllow= 4,
        olSharingMsgTypeResponseDeny= 5
    };

    enum OlSharingProvider {
        olProviderUnknown       = 0,
        olProviderExchange      = 1,
        olProviderWebCal        = 2,
        olProviderPubCal        = 3,
        olProviderICal          = 4,
        olProviderSharePoint    = 5,
        olProviderRSS           = 6,
        olProviderFederate      = 7
    };

    enum OlShiftState {
        olShiftStateShiftMask   = 1,
        olShiftStateCtrlMask    = 2,
        olShiftStateAltMask     = 4
    };

    enum OlShowItemCount {
        olNoItemCount           = 0,
        olShowUnreadItemCount   = 1,
        olShowTotalItemCount    = 2
    };

    enum OlSolutionScope {
        olHideInDefaultModules  = 0,
        olShowInDefaultModules  = 1
    };

    enum OlSortOrder {
        olSortNone              = 0,
        olAscending             = 1,
        olDescending            = 2
    };

    enum OlSpecialFolders {
        olSpecialFolderAllTasks = 0,
        olSpecialFolderReminders= 1
    };

    enum OlStorageIdentifierType {
        olIdentifyBySubject     = 0,
        olIdentifyByEntryID     = 1,
        olIdentifyByMessageClass= 2
    };

    enum OlStoreType {
        olStoreDefault          = 1,
        olStoreUnicode          = 2,
        olStoreANSI             = 3
    };

    enum OlSyncState {
        olSyncStopped           = 0,
        olSyncStarted           = 1
    };

    enum OlTableContents {
        olUserItems             = 0,
        olHiddenItems           = 1
    };

    enum OlTaskDelegationState {
        olTaskNotDelegated      = 0,
        olTaskDelegationUnknown = 1,
        olTaskDelegationAccepted= 2,
        olTaskDelegationDeclined= 3
    };

    enum OlTaskOwnership {
        olNewTask               = 0,
        olDelegatedTask         = 1,
        olOwnTask               = 2
    };

    enum OlTaskRecipientType {
        olUpdate                = 2,
        olFinalStatus           = 3
    };

    enum OlTaskResponse {
        olTaskSimple            = 0,
        olTaskAssign            = 1,
        olTaskAccept            = 2,
        olTaskDecline           = 3
    };

    enum OlTaskStatus {
        olTaskNotStarted        = 0,
        olTaskInProgress        = 1,
        olTaskComplete          = 2,
        olTaskWaiting           = 3,
        olTaskDeferred          = 4
    };

    enum OlTextAlign {
        olTextAlignLeft         = 1,
        olTextAlignCenter       = 2,
        olTextAlignRight        = 3
    };

    enum OlTimeStyle {
        olTimeStyleTimeOnly     = 0,
        olTimeStyleTimeDuration = 1,
        olTimeStyleShortDuration= 4
    };

    enum OlTimelineViewMode {
        olTimelineViewDay       = 0,
        olTimelineViewWeek      = 1,
        olTimelineViewMonth     = 2
    };

    enum OlTrackingStatus {
        olTrackingNone          = 0,
        olTrackingDelivered     = 1,
        olTrackingNotDelivered  = 2,
        olTrackingNotRead       = 3,
        olTrackingRecallFailure = 4,
        olTrackingRecallSuccess = 5,
        olTrackingRead          = 6,
        olTrackingReplied       = 7
    };

    enum OlUnifiedGroupFolderType {
        olGroupMailFolder       = 0,
        olGroupCalendarFolder   = 1
    };

    enum OlUnifiedGroupType {
        PrivateGroup            = 1,
        PublicGroup             = 2
    };

    enum OlUserPropertyType {
        olOutlookInternal       = 0,
        olText                  = 1,
        olNumber                = 3,
        olDateTime              = 5,
        olYesNo                 = 6,
        olDuration              = 7,
        olKeywords              = 11,
        olPercent               = 12,
        olCurrency              = 14,
        olFormula               = 18,
        olCombination           = 19,
        olInteger               = 20,
        olEnumeration           = 21,
        olSmartFrom             = 22
    };

    enum OlVerticalLayout {
        olVerticalLayoutAlignTop= 0,
        olVerticalLayoutAlignMiddle= 1,
        olVerticalLayoutAlignBottom= 2,
        olVerticalLayoutGrow    = 3
    };

    enum OlViewSaveOption {
        olViewSaveOptionThisFolderEveryone= 0,
        olViewSaveOptionThisFolderOnlyMe= 1,
        olViewSaveOptionAllFoldersOfType= 2
    };

    enum OlViewType {
        olTableView             = 0,
        olCardView              = 1,
        olCalendarView          = 2,
        olIconView              = 3,
        olTimelineView          = 4,
        olBusinessCardView      = 5,
        olDailyTaskListView     = 6,
        olPeopleView            = 7,
        olThreadView            = 8,
        olMessageListView       = 9
    };

    enum OlWindowState {
        olMaximized             = 0,
        olMinimized             = 1,
        olNormalWindow          = 2
    };

// forward declarations
    class _IRecipientControl;
    class _IDocSiteControl;
    enum OlMousePointer;
    enum OlScrollBars;
    enum OlBackStyle;
    enum OlBorderStyle;
    enum OlEnterFieldBehavior;
    enum OlDragBehavior;
    enum OlComboBoxStyle;
    enum OlAlignment;
    enum OlMultiSelect;
    enum OlTextAlign;
    enum OlMatchEntry;
    enum OlPageType;
    enum OlTimeStyle;
    enum OlShiftState;
    enum OlMouseButton;
    enum OlPictureAlignment;
    enum OlAppointmentTimeField;
    enum OlHorizontalLayout;
    enum OlVerticalLayout;
    enum OlObjectClass;
    enum OlDisplayType;
    enum OlActionCopyLike;
    enum OlActionReplyStyle;
    enum OlActionResponseStyle;
    enum OlActionShowOn;
    enum OlAttachmentType;
    enum OlAttachmentBlockLevel;
    enum OlFormRegistry;
    enum OlEditorType;
    enum OlInspectorClose;
    enum OlWindowState;
    enum OlSelectionLocation;
    enum OlSelectionContents;
    enum OlImportance;
    enum OlSensitivity;
    enum OlUserPropertyType;
    enum OlItemType;
    enum OlPane;
    enum OlNavigationModuleType;
    enum OlSearchScope;
    enum OlAccountType;
    enum OlAutoDiscoverConnectionMode;
    enum OlExchangeStoreType;
    enum OlRuleType;
    enum OlRuleActionType;
    enum OlMarkInterval;
    enum OlRuleConditionType;
    enum OlAddressListType;
    enum OlSpecialFolders;
    enum OlDefaultFolders;
    enum OlCategoryColor;
    enum OlCategoryShortcutKey;
    enum OlUnifiedGroupType;
    enum OlExchangeConnectionMode;
    enum OlDisplayMode;
    enum OlViewSaveOption;
    enum OlViewType;
    enum OlShowItemCount;
    enum OlStorageIdentifierType;
    enum OlCalendarMailFormat;
    enum OlFlagStatus;
    enum OlRemoteStatus;
    enum OlBodyFormat;
    enum OlDownloadState;
    enum OlFlagIcon;
    enum OlPermission;
    enum OlPermissionService;
    enum OlAlwaysDeleteConversation;
    enum OlCalendarDetail;
    enum OlGender;
    enum OlMailingAddress;
    enum OlContactPhoneNumber;
    enum OlBusinessCardType;
    enum OlAddressEntryUserType;
    enum OlUnifiedGroupFolderType;
    enum OlResponseStatus;
    enum OlTrackingStatus;
    enum OlSyncState;
    enum OlStoreType;
    enum OlRecipientSelectors;
    enum OlDefaultSelectNamesDisplayMode;
    enum OlSharingProvider;
    enum OlSharingMsgType;
    enum OlFolderDisplayMode;
    enum OlReferenceType;
    enum OlBusyStatus;
    enum OlDaysOfWeek;
    enum OlJournalRecipientType;
    enum OlMailRecipientType;
    enum OlMeetingRecipientType;
    enum OlMeetingResponse;
    enum OlMeetingStatus;
    enum OlNetMeetingType;
    enum OlNoteColor;
    enum OlOutlookBarViewType;
    enum OlRecurrenceState;
    enum OlRecurrenceType;
    enum OlSaveAsType;
    enum OlSortOrder;
    enum OlTaskDelegationState;
    enum OlTaskOwnership;
    enum OlTaskRecipientType;
    enum OlTaskResponse;
    enum OlTaskStatus;
    enum OlOfficeDocItemsType;
    enum OlFormRegionMode;
    enum OlFormRegionSize;
    enum OlRuleExecuteOption;
    enum OlDefaultExpandCollapseSetting;
    enum OlMultiLine;
    enum OlGridLineStyle;
    enum OlIconViewType;
    enum OlIconViewPlacement;
    enum OlCalendarViewMode;
    enum OlDayWeekTimeScale;
    enum OlTimelineViewMode;
    enum OlAutoPreview;
    enum OlColor;
    enum OlAlign;
    enum OlFormatCurrency;
    enum OlFormatDateTime;
    enum OlFormatDuration;
    enum OlFormatInteger;
    enum OlFormatKeywords;
    enum OlFormatNumber;
    enum OlFormatPercent;
    enum OlFormatYesNo;
    enum OlFormatEnumeration;
    enum OlFormatSmartFrom;
    enum OlContextMenu;
    enum OlFormatText;
    enum OlGroupType;
    enum OlTableContents;
    enum OlFormRegionIcon;
    enum OlSolutionScope;
    enum OlMobileFormat;
    enum OlAppointmentCopyOptions;
    class PropertyPage;
    class _IRecipientControl;
    class _IDocSiteControl;
    enum OlMousePointer;
    enum OlScrollBars;
    enum OlBackStyle;
    enum OlBorderStyle;
    enum OlEnterFieldBehavior;
    enum OlDragBehavior;
    enum OlComboBoxStyle;
    enum OlAlignment;
    enum OlMultiSelect;
    enum OlTextAlign;
    enum OlMatchEntry;
    enum OlPageType;
    enum OlTimeStyle;
    enum OlShiftState;
    enum OlMouseButton;
    enum OlPictureAlignment;
    enum OlAppointmentTimeField;
    enum OlHorizontalLayout;
    enum OlVerticalLayout;
    class _Application;
    class _NameSpace;
    class _Explorer;
    class _Inspector;
    class _Explorers;
    class _Inspectors;
    class Search;
    class _Reminders;
    class TimeZones;
    enum OlObjectClass;
    class Recipient;
    class _Folders;
    class AddressLists;
    class MAPIFolder;
    class SyncObjects;
    class Accounts;
    class Stores;
    class SelectNamesDialog;
    class Store;
    class AddressEntry;
    class AddressList;
    class Categories;
    class SharingItem;
    class PropertyAccessor;
    class AddressEntries;
    class _ContactItem;
    class ExchangeUser;
    class ExchangeDistributionList;
    enum OlDisplayType;
    class Actions;
    class Attachments;
    class FormDescription;
    class UserProperties;
    class MailItem;
    class Links;
    class ItemProperties;
    class Conflicts;
    class _Conversation;
    class Action;
    enum OlActionCopyLike;
    enum OlActionReplyStyle;
    enum OlActionResponseStyle;
    enum OlActionShowOn;
    class Attachment;
    enum OlAttachmentType;
    enum OlAttachmentBlockLevel;
    enum OlFormRegistry;
    class _AttachmentSelection;
    enum OlEditorType;
    enum OlInspectorClose;
    enum OlWindowState;
    class Selection;
    enum OlSelectionLocation;
    enum OlSelectionContents;
    enum OlImportance;
    enum OlSensitivity;
    class UserProperty;
    enum OlUserPropertyType;
    class _Items;
    class View;
    class _Views;
    class _StorageItem;
    class Table;
    class CalendarSharing;
    class UserDefinedProperties;
    enum OlItemType;
    class Panes;
    class _NavigationPane;
    class _AccountSelector;
    class _PreviewPane;
    enum OlPane;
    class NavigationModule;
    class NavigationModules;
    enum OlNavigationModuleType;
    class _NavigationModule;
    enum OlSearchScope;
    class _Account;
    enum OlAccountType;
    enum OlAutoDiscoverConnectionMode;
    class Rules;
    enum OlExchangeStoreType;
    class _Rule;
    class Rule;
    class RuleActions;
    class RuleConditions;
    enum OlRuleType;
    class _RuleAction;
    class MoveOrCopyRuleAction;
    class RuleAction;
    class SendRuleAction;
    class AssignToCategoryRuleAction;
    class PlaySoundRuleAction;
    class MarkAsTaskRuleAction;
    class NewItemAlertRuleAction;
    enum OlRuleActionType;
    class Recipients;
    enum OlMarkInterval;
    class _RuleCondition;
    class RuleCondition;
    class ImportanceRuleCondition;
    class AccountRuleCondition;
    class TextRuleCondition;
    class CategoryRuleCondition;
    class FormNameRuleCondition;
    class ToOrFromRuleCondition;
    class AddressRuleCondition;
    class SenderInAddressListRuleCondition;
    class FromRssFeedRuleCondition;
    class SensitivityRuleCondition;
    enum OlRuleConditionType;
    class Account;
    enum OlAddressListType;
    enum OlSpecialFolders;
    enum OlDefaultFolders;
    class _Category;
    class Category;
    enum OlCategoryColor;
    enum OlCategoryShortcutKey;
    enum OlUnifiedGroupType;
    enum OlExchangeConnectionMode;
    enum OlDisplayMode;
    enum OlViewSaveOption;
    enum OlViewType;
    enum OlShowItemCount;
    enum OlStorageIdentifierType;
    class Row;
    class Columns;
    class _Column;
    class Column;
    enum OlCalendarMailFormat;
    class ContactItem;
    enum OlFlagStatus;
    enum OlRemoteStatus;
    class Link;
    class ItemProperty;
    enum OlBodyFormat;
    enum OlDownloadState;
    enum OlFlagIcon;
    class Conflict;
    enum OlPermission;
    enum OlPermissionService;
    class SimpleItems;
    class _Store;
    enum OlAlwaysDeleteConversation;
    enum OlCalendarDetail;
    class _UserDefinedProperty;
    class UserDefinedProperty;
    enum OlGender;
    enum OlMailingAddress;
    enum OlContactPhoneNumber;
    enum OlBusinessCardType;
    enum OlAddressEntryUserType;
    enum OlUnifiedGroupFolderType;
    enum OlResponseStatus;
    enum OlTrackingStatus;
    class SyncObject;
    class _SyncObject;
    enum OlSyncState;
    enum OlStoreType;
    enum OlRecipientSelectors;
    enum OlDefaultSelectNamesDisplayMode;
    enum OlSharingProvider;
    enum OlSharingMsgType;
    class Explorer;
    enum OlFolderDisplayMode;
    class Inspector;
    class _Results;
    class _Reminder;
    enum OlReferenceType;
    class _TimeZone;
    enum OlBusyStatus;
    enum OlDaysOfWeek;
    enum OlJournalRecipientType;
    enum OlMailRecipientType;
    enum OlMeetingRecipientType;
    enum OlMeetingResponse;
    enum OlMeetingStatus;
    enum OlNetMeetingType;
    enum OlNoteColor;
    enum OlOutlookBarViewType;
    enum OlRecurrenceState;
    enum OlRecurrenceType;
    enum OlSaveAsType;
    enum OlSortOrder;
    enum OlTaskDelegationState;
    enum OlTaskOwnership;
    enum OlTaskRecipientType;
    enum OlTaskResponse;
    enum OlTaskStatus;
    enum OlOfficeDocItemsType;
    enum OlFormRegionMode;
    enum OlFormRegionSize;
    enum OlRuleExecuteOption;
    enum OlDefaultExpandCollapseSetting;
    enum OlMultiLine;
    enum OlGridLineStyle;
    enum OlIconViewType;
    enum OlIconViewPlacement;
    enum OlCalendarViewMode;
    enum OlDayWeekTimeScale;
    enum OlTimelineViewMode;
    enum OlAutoPreview;
    enum OlColor;
    enum OlAlign;
    enum OlFormatCurrency;
    enum OlFormatDateTime;
    enum OlFormatDuration;
    enum OlFormatInteger;
    enum OlFormatKeywords;
    enum OlFormatNumber;
    enum OlFormatPercent;
    enum OlFormatYesNo;
    enum OlFormatEnumeration;
    enum OlFormatSmartFrom;
    enum OlContextMenu;
    enum OlFormatText;
    enum OlGroupType;
    enum OlTableContents;
    enum OlFormRegionIcon;
    enum OlSolutionScope;
    enum OlMobileFormat;
    enum OlAppointmentCopyOptions;
    class PropertyPages;
    class Exceptions;
    class AppointmentItem;
    class Exception;
    class RecurrencePattern;
    class MeetingItem;
    class _AppointmentItem;
    class _OutlookBarShortcuts;
    class OutlookBarShortcut;
    class OutlookBarGroup;
    class OutlookBarStorage;
    class _OutlookBarGroups;
    class PropertyPage;
    class AttachmentSelection;
    class Folder;
    class ColumnFormat;
    class _ViewField;
    class ViewField;
    class OrderFields;
    class _OrderField;
    class OrderField;
    class ViewFields;
    class ViewFont;
    class AutoFormatRules;
    class AutoFormatRule;
    class _NavigationGroups;
    class _NavigationGroup;
    class NavigationGroup;
    class NavigationFolders;
    class _NavigationFolder;
    class NavigationFolder;
    class FormRegion;
    class MobileItem;
    class TaskItem;

// stub for vtable-only interface
class _IRecipientControl : public QAxObject { Q_DISABLE_COPY_MOVE(_IRecipientControl) };

class OUTLOOK_EXPORT _DRecipientControl : public QAxObject
{
public:
    explicit _DRecipientControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property BackColor

    For more information, see help context 1000003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(int value); //Sets the value of the BackColor property

    /*
    Property Enabled

    For more information, see help context 1000002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(int value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Font() const; //Returns the value of Font
    inline void SetFont(IDispatch* value); //Sets the value of the Font property

    /*
    Property ForeColor

    For more information, see help context 1000004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(int value); //Sets the value of the ForeColor property

    /*
    Property ReadOnly

    For more information, see help context 1000005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReadOnly() const; //Returns the value of ReadOnly
    inline void SetReadOnly(int value); //Sets the value of the ReadOnly property

    /*
    Property SpecialEffect

    For more information, see help context 1000007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SpecialEffect() const; //Returns the value of SpecialEffect
    inline void SetSpecialEffect(int value); //Sets the value of the SpecialEffect property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface _DRecipientControlEvents

// stub for vtable-only interface
class _IDocSiteControl : public QAxObject { Q_DISABLE_COPY_MOVE(_IDocSiteControl) };

class OUTLOOK_EXPORT _DDocSiteControl : public QAxObject
{
public:
    explicit _DDocSiteControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ReadOnly

    For more information, see help context 1000012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReadOnly() const; //Returns the value of ReadOnly
    inline void SetReadOnly(int value); //Sets the value of the ReadOnly property

    /*
    Property SuppressAttachments

    For more information, see help context 1000013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SuppressAttachments() const; //Returns the value of SuppressAttachments
    inline void SetSuppressAttachments(int value); //Sets the value of the SuppressAttachments property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface _DDocSiteControlEvents

class OUTLOOK_EXPORT OlkControl : public QAxObject
{
public:
    explicit OlkControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ControlProperty

    For more information, see help context 1000503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ControlProperty() const; //Returns the value of ControlProperty
    inline void SetControlProperty(const QString& value); //Sets the value of the ControlProperty property

    /*
    Property EnableAutoLayout

    For more information, see help context 1000543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableAutoLayout() const; //Returns the value of EnableAutoLayout
    inline void SetEnableAutoLayout(bool value); //Sets the value of the EnableAutoLayout property

    /*
    Property Format

    For more information, see help context 1000542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Format() const; //Returns the value of Format
    inline void SetFormat(int value); //Sets the value of the Format property

    /*
    Property HorizontalLayout

    For more information, see help context 1000540 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlHorizontalLayout HorizontalLayout() const; //Returns the value of HorizontalLayout
    inline void SetHorizontalLayout(Outlook::OlHorizontalLayout value); //Sets the value of the HorizontalLayout property

    /*
    Property ItemProperty

    For more information, see help context 1000502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ItemProperty() const; //Returns the value of ItemProperty
    inline void SetItemProperty(const QString& value); //Sets the value of the ItemProperty property

    /*
    Property MinimumHeight

    For more information, see help context 1000508 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MinimumHeight() const; //Returns the value of MinimumHeight
    inline void SetMinimumHeight(int value); //Sets the value of the MinimumHeight property

    /*
    Property MinimumWidth

    For more information, see help context 1000544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MinimumWidth() const; //Returns the value of MinimumWidth
    inline void SetMinimumWidth(int value); //Sets the value of the MinimumWidth property

    /*
    Property PossibleValues

    For more information, see help context 1000504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PossibleValues() const; //Returns the value of PossibleValues
    inline void SetPossibleValues(const QString& value); //Sets the value of the PossibleValues property

    /*
    Property VerticalLayout

    For more information, see help context 1000541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlVerticalLayout VerticalLayout() const; //Returns the value of VerticalLayout
    inline void SetVerticalLayout(Outlook::OlVerticalLayout value); //Sets the value of the VerticalLayout property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OlkTextBox : public QAxObject
{
public:
    explicit _OlkTextBox(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AutoSize

    For more information, see help context 1000035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoTab

    For more information, see help context 1000036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoTab() const; //Returns the value of AutoTab
    inline void SetAutoTab(bool value); //Sets the value of the AutoTab property

    /*
    Property AutoWordSelect

    For more information, see help context 1000037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property DragBehavior

    For more information, see help context 1000041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDragBehavior DragBehavior() const; //Returns the value of DragBehavior
    inline void SetDragBehavior(Outlook::OlDragBehavior value); //Sets the value of the DragBehavior property

    /*
    Property EnableRichText

    For more information, see help context 1000495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableRichText() const; //Returns the value of EnableRichText
    inline void SetEnableRichText(bool value); //Sets the value of the EnableRichText property

    /*
    Property Enabled

    For more information, see help context 1000042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property EnterKeyBehavior

    For more information, see help context 1000044 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnterKeyBehavior() const; //Returns the value of EnterKeyBehavior
    inline void SetEnterKeyBehavior(bool value); //Sets the value of the EnterKeyBehavior property

    /*
    Property Font

    For more information, see help context 1000045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property IntegralHeight

    For more information, see help context 1000048 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IntegralHeight() const; //Returns the value of IntegralHeight
    inline void SetIntegralHeight(bool value); //Sets the value of the IntegralHeight property

    /*
    Property Locked

    For more information, see help context 1000049 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MaxLength

    For more information, see help context 1000050 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLength() const; //Returns the value of MaxLength
    inline void SetMaxLength(int value); //Sets the value of the MaxLength property

    /*
    Property MouseIcon

    For more information, see help context 1000051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property MultiLine

    For more information, see help context 1000053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool MultiLine() const; //Returns the value of MultiLine
    inline void SetMultiLine(bool value); //Sets the value of the MultiLine property

    /*
    Property PasswordChar

    For more information, see help context 1000054 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PasswordChar() const; //Returns the value of PasswordChar
    inline void SetPasswordChar(const QString& value); //Sets the value of the PasswordChar property

    /*
    Property Scrollbars

    For more information, see help context 1000055 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlScrollBars Scrollbars() const; //Returns the value of Scrollbars
    inline void SetScrollbars(Outlook::OlScrollBars value); //Sets the value of the Scrollbars property

    /*
    Property SelLength

    For more information, see help context 1000063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelLength() const; //Returns the value of SelLength
    inline void SetSelLength(int value); //Sets the value of the SelLength property

    /*
    Property SelStart

    For more information, see help context 1000062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelStart() const; //Returns the value of SelStart
    inline void SetSelStart(int value); //Sets the value of the SelStart property

    /*
    Property SelText

    For more information, see help context 1000064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SelText() const; //Returns the value of SelText

    /*
    Property SelectionMargin

    For more information, see help context 1000056 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SelectionMargin() const; //Returns the value of SelectionMargin
    inline void SetSelectionMargin(bool value); //Sets the value of the SelectionMargin property

    /*
    Property TabKeyBehavior

    For more information, see help context 1000057 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TabKeyBehavior() const; //Returns the value of TabKeyBehavior
    inline void SetTabKeyBehavior(bool value); //Sets the value of the TabKeyBehavior property

    /*
    Property Text

    For more information, see help context 1000058 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000059 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Value

    For more information, see help context 1000060 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

    /*
    Method Clear

    For more information, see help context 1000068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method Cut

    For more information, see help context 1000065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Cut();

    /*
    Method Paste

    For more information, see help context 1000067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Paste();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkTextBoxEvents

class OUTLOOK_EXPORT _OlkLabel : public QAxObject
{
public:
    explicit _OlkLabel(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Accelerator

    For more information, see help context 1000086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property AutoSize

    For more information, see help context 1000087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property BackColor

    For more information, see help context 1000088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property BorderStyle

    For more information, see help context 1000090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Caption

    For more information, see help context 1000091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property TextAlign

    For more information, see help context 1000097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property UseHeaderColor

    For more information, see help context 1000497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UseHeaderColor() const; //Returns the value of UseHeaderColor
    inline void SetUseHeaderColor(bool value); //Sets the value of the UseHeaderColor property

    /*
    Property Value

    For more information, see help context 1000099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000098 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkLabelEvents

class OUTLOOK_EXPORT _OlkCommandButton : public QAxObject
{
public:
    explicit _OlkCommandButton(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Accelerator

    For more information, see help context 1000109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property AutoSize

    For more information, see help context 1000110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property Caption

    For more information, see help context 1000111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property DisplayDropArrow

    For more information, see help context 1000501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DisplayDropArrow() const; //Returns the value of DisplayDropArrow
    inline void SetDisplayDropArrow(bool value); //Sets the value of the DisplayDropArrow property

    /*
    Property Enabled

    For more information, see help context 1000112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property MouseIcon

    For more information, see help context 1000114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property Picture

    For more information, see help context 1000496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap Picture() const; //Returns the value of Picture
    inline void SetPicture(const QPixmap& value); //Sets the value of the Picture property

    /*
    Property PictureAlignment

    For more information, see help context 1000500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPictureAlignment PictureAlignment() const; //Returns the value of PictureAlignment
    inline void SetPictureAlignment(Outlook::OlPictureAlignment value); //Sets the value of the PictureAlignment property

    /*
    Property TextAlign

    For more information, see help context 1000117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property WordWrap

    For more information, see help context 1000116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkCommandButtonEvents

class OUTLOOK_EXPORT _OlkCheckBox : public QAxObject
{
public:
    explicit _OlkCheckBox(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Accelerator

    For more information, see help context 1000134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property Alignment

    For more information, see help context 1000135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property BackColor

    For more information, see help context 1000136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Caption

    For more information, see help context 1000138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000141 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property TripleState

    For more information, see help context 1000144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TripleState() const; //Returns the value of TripleState
    inline void SetTripleState(bool value); //Sets the value of the TripleState property

    /*
    Property Value

    For more information, see help context 1000145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkCheckBoxEvents

class OUTLOOK_EXPORT _OlkOptionButton : public QAxObject
{
public:
    explicit _OlkOptionButton(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Accelerator

    For more information, see help context 1000164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property Alignment

    For more information, see help context 1000165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property BackColor

    For more information, see help context 1000166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Caption

    For more information, see help context 1000168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property GroupName

    For more information, see help context 1000172 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GroupName() const; //Returns the value of GroupName
    inline void SetGroupName(const QString& value); //Sets the value of the GroupName property

    /*
    Property MouseIcon

    For more information, see help context 1000173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property Value

    For more information, see help context 1000175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkOptionButtonEvents

class OUTLOOK_EXPORT _OlkComboBox : public QAxObject
{
public:
    explicit _OlkComboBox(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AutoSize

    For more information, see help context 1000194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoTab

    For more information, see help context 1000195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoTab() const; //Returns the value of AutoTab
    inline void SetAutoTab(bool value); //Sets the value of the AutoTab property

    /*
    Property AutoWordSelect

    For more information, see help context 1000196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property DragBehavior

    For more information, see help context 1000199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDragBehavior DragBehavior() const; //Returns the value of DragBehavior
    inline void SetDragBehavior(Outlook::OlDragBehavior value); //Sets the value of the DragBehavior property

    /*
    Property Enabled

    For more information, see help context 1000200 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property ListCount

    For more information, see help context 1000220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListIndex

    For more information, see help context 1000219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property Locked

    For more information, see help context 1000207 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MaxLength

    For more information, see help context 1000210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLength() const; //Returns the value of MaxLength
    inline void SetMaxLength(int value); //Sets the value of the MaxLength property

    /*
    Property MouseIcon

    For more information, see help context 1000211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property SelLength

    For more information, see help context 1000222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelLength() const; //Returns the value of SelLength
    inline void SetSelLength(int value); //Sets the value of the SelLength property

    /*
    Property SelStart

    For more information, see help context 1000221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelStart() const; //Returns the value of SelStart
    inline void SetSelStart(int value); //Sets the value of the SelStart property

    /*
    Property SelText

    For more information, see help context 1000223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SelText() const; //Returns the value of SelText

    /*
    Property SelectionMargin

    For more information, see help context 1000213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SelectionMargin() const; //Returns the value of SelectionMargin
    inline void SetSelectionMargin(bool value); //Sets the value of the SelectionMargin property

    /*
    Property Style

    For more information, see help context 1000214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlComboBoxStyle Style() const; //Returns the value of Style
    inline void SetStyle(Outlook::OlComboBoxStyle value); //Sets the value of the Style property

    /*
    Property Text

    For more information, see help context 1000215 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property TopIndex

    For more information, see help context 1000217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TopIndex() const; //Returns the value of TopIndex
    inline void SetTopIndex(int value); //Sets the value of the TopIndex property

    /*
    Property Value

    For more information, see help context 1000218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method AddItem

    For more information, see help context 1000230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText);

    /*
    Method AddItem

    For more information, see help context 1000230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 1000229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method Cut

    For more information, see help context 1000226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Cut();

    /*
    Method DropDown

    For more information, see help context 1000232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

    /*
    Method GetItem

    For more information, see help context 1000224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetItem(int Index);

    /*
    Method Paste

    For more information, see help context 1000228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Paste();

    /*
    Method RemoveItem

    For more information, see help context 1000231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveItem(int Index);

    /*
    Method SetItem

    For more information, see help context 1000225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetItem(int Index, const QString& Item);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkComboBoxEvents

class OUTLOOK_EXPORT _OlkListBox : public QAxObject
{
public:
    explicit _OlkListBox(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property BackColor

    For more information, see help context 1000252 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Enabled

    For more information, see help context 1000253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property ListCount

    For more information, see help context 1000267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListIndex

    For more information, see help context 1000266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property Locked

    For more information, see help context 1000257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MatchEntry

    For more information, see help context 1000258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMatchEntry MatchEntry() const; //Returns the value of MatchEntry
    inline void SetMatchEntry(Outlook::OlMatchEntry value); //Sets the value of the MatchEntry property

    /*
    Property MouseIcon

    For more information, see help context 1000259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property MultiSelect

    For more information, see help context 1000261 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMultiSelect MultiSelect() const; //Returns the value of MultiSelect
    inline void SetMultiSelect(Outlook::OlMultiSelect value); //Sets the value of the MultiSelect property

    /*
    Property Text

    For more information, see help context 1000262 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property TopIndex

    For more information, see help context 1000264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TopIndex() const; //Returns the value of TopIndex
    inline void SetTopIndex(int value); //Sets the value of the TopIndex property

    /*
    Property Value

    For more information, see help context 1000265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method AddItem

    For more information, see help context 1000276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText);

    /*
    Method AddItem

    For more information, see help context 1000276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 1000275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method GetItem

    For more information, see help context 1000268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetItem(int Index);

    /*
    Method GetSelected

    For more information, see help context 1000270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool GetSelected(int Index);

    /*
    Method RemoveItem

    For more information, see help context 1000277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveItem(int Index);

    /*
    Method SetItem

    For more information, see help context 1000269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetItem(int Index, const QString& Item);

    /*
    Method SetSelected

    For more information, see help context 1000271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetSelected(int Index, bool Selected);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkListBoxEvents

class OUTLOOK_EXPORT _OlkInfoBar : public QAxObject
{
public:
    explicit _OlkInfoBar(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property MouseIcon

    For more information, see help context 1000295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkInfoBarEvents

class OUTLOOK_EXPORT _OlkContactPhoto : public QAxObject
{
public:
    explicit _OlkContactPhoto(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Enabled

    For more information, see help context 1000306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property MouseIcon

    For more information, see help context 1000307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkContactPhotoEvents

class OUTLOOK_EXPORT _OlkBusinessCardControl : public QAxObject
{
public:
    explicit _OlkBusinessCardControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property MouseIcon

    For more information, see help context 1000324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkBusinessCardControlEvents

class OUTLOOK_EXPORT _OlkPageControl : public QAxObject
{
public:
    explicit _OlkPageControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Page

    For more information, see help context 1000336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPageType Page() const; //Returns the value of Page
    inline void SetPage(Outlook::OlPageType value); //Sets the value of the Page property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkPageControlEvents

class OUTLOOK_EXPORT _OlkDateControl : public QAxObject
{
public:
    explicit _OlkDateControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AutoSize

    For more information, see help context 1000341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoWordSelect

    For more information, see help context 1000342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Date

    For more information, see help context 1000345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Date() const; //Returns the value of Date
    inline void SetDate(const QDateTime& value); //Sets the value of the Date property

    /*
    Property Enabled

    For more information, see help context 1000347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property Locked

    For more information, see help context 1000352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property ShowNoneButton

    For more information, see help context 1000355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowNoneButton() const; //Returns the value of ShowNoneButton
    inline void SetShowNoneButton(bool value); //Sets the value of the ShowNoneButton property

    /*
    Property Text

    For more information, see help context 1000356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Value

    For more information, see help context 1000358 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkDateControlEvents

class OUTLOOK_EXPORT _OlkTimeControl : public QAxObject
{
public:
    explicit _OlkTimeControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AutoSize

    For more information, see help context 1000378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoWordSelect

    For more information, see help context 1000379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Enabled

    For more information, see help context 1000383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property IntervalTime

    For more information, see help context 1000397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime IntervalTime() const; //Returns the value of IntervalTime
    inline void SetIntervalTime(const QDateTime& value); //Sets the value of the IntervalTime property

    /*
    Property Locked

    For more information, see help context 1000388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000390 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property ReferenceTime

    For more information, see help context 1000391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReferenceTime() const; //Returns the value of ReferenceTime
    inline void SetReferenceTime(const QDateTime& value); //Sets the value of the ReferenceTime property

    /*
    Property Style

    For more information, see help context 1000392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTimeStyle Style() const; //Returns the value of Style
    inline void SetStyle(Outlook::OlTimeStyle value); //Sets the value of the Style property

    /*
    Property Text

    For more information, see help context 1000394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Time

    For more information, see help context 1000393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Time() const; //Returns the value of Time
    inline void SetTime(const QDateTime& value); //Sets the value of the Time property

    /*
    Property Value

    For more information, see help context 1000396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkTimeControlEvents

class OUTLOOK_EXPORT _OlkCategory : public QAxObject
{
public:
    explicit _OlkCategory(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AutoSize

    For more information, see help context 1000439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property BackColor

    For more information, see help context 1000440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Enabled

    For more information, see help context 1000442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property ForeColor

    For more information, see help context 1000443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkCategoryEvents

class OUTLOOK_EXPORT _OlkFrameHeader : public QAxObject
{
public:
    explicit _OlkFrameHeader(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Alignment

    For more information, see help context 1000494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property Caption

    For more information, see help context 1000462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkFrameHeaderEvents

class OUTLOOK_EXPORT _OlkSenderPhoto : public QAxObject
{
public:
    explicit _OlkSenderPhoto(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Enabled

    For more information, see help context 1000478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property MouseIcon

    For more information, see help context 1000479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000480 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property PreferredHeight

    For more information, see help context 1000482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PreferredHeight() const; //Returns the value of PreferredHeight

    /*
    Property PreferredWidth

    For more information, see help context 1000481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PreferredWidth() const; //Returns the value of PreferredWidth

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkSenderPhotoEvents

class OUTLOOK_EXPORT _TimeZone : public QAxObject
{
public:
    explicit _TimeZone(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3278 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Bias

    For more information, see help context 3285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Bias() const; //Returns the value of Bias

    /*
    Property Class

    For more information, see help context 3279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DaylightBias

    For more information, see help context 3287 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DaylightBias() const; //Returns the value of DaylightBias

    /*
    Property DaylightDate

    For more information, see help context 3289 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DaylightDate() const; //Returns the value of DaylightDate

    /*
    Property DaylightDesignation

    For more information, see help context 3283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DaylightDesignation() const; //Returns the value of DaylightDesignation

    /*
    Property ID

    For more information, see help context 3304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property Name

    For more information, see help context 3282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 3281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StandardBias

    For more information, see help context 3286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int StandardBias() const; //Returns the value of StandardBias

    /*
    Property StandardDate

    For more information, see help context 3288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StandardDate() const; //Returns the value of StandardDate

    /*
    Property StandardDesignation

    For more information, see help context 3284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StandardDesignation() const; //Returns the value of StandardDesignation

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Application : public QAxObject
{
public:
    explicit _Application(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AnswerWizard

    For more information, see help context 724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::AnswerWizard* AnswerWizard() const; //Returns the value of AnswerWizard

    /*
    Property Application

    For more information, see help context 705 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Assistance

    For more information, see help context 3029 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::IAssistance* Assistance() const; //Returns the value of Assistance

    /*
    Property Assistant

    For more information, see help context 709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::Assistant* Assistant() const; //Returns the value of Assistant

    /*
    Property COMAddIns

    For more information, see help context 719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::COMAddIns* COMAddIns() const; //Returns the value of COMAddIns

    /*
    Property Class

    For more information, see help context 706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DataPrivacyOptions

    For more information, see help context 3678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::DataPrivacyOptions* DataPrivacyOptions() const; //Returns the value of DataPrivacyOptions

    /*
    Property DefaultProfileName

    For more information, see help context 732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DefaultProfileName() const; //Returns the value of DefaultProfileName

    /*
    Property Explorers

    For more information, see help context 720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorers* Explorers() const; //Returns the value of Explorers

    /*
    Property FeatureInstall

    For more information, see help context 725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::MsoFeatureInstall FeatureInstall() const; //Returns the value of FeatureInstall
    inline void SetFeatureInstall(Office::MsoFeatureInstall value); //Sets the value of the FeatureInstall property

    /*
    Property Inspectors

    For more information, see help context 721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspectors* Inspectors() const; //Returns the value of Inspectors

    /*
    Property IsTrusted

    For more information, see help context 733 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsTrusted() const; //Returns the value of IsTrusted

    /*
    Property LanguageSettings

    For more information, see help context 722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::LanguageSettings* LanguageSettings() const; //Returns the value of LanguageSettings

    /*
    Property MsoDebugOptions

    For more information, see help context 3641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::MsoDebugOptions* MsoDebugOptions() const; //Returns the value of MsoDebugOptions

    /*
    Property Name

    For more information, see help context 710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PickerDialog

    For more information, see help context 3475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::PickerDialog* PickerDialog() const; //Returns the value of PickerDialog

    /*
    Property ProductCode

    For more information, see help context 723 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ProductCode() const; //Returns the value of ProductCode

    /*
    Property Reminders

    For more information, see help context 731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Reminders* Reminders() const; //Returns the value of Reminders

    /*
    Property Session

    For more information, see help context 707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property TimeZones

    For more information, see help context 3270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TimeZones* TimeZones() const; //Returns the value of TimeZones

    /*
    Property Version

    For more information, see help context 711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Version() const; //Returns the value of Version

    /*
    Method ActiveExplorer

    For more information, see help context 712 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* ActiveExplorer();

    /*
    Method ActiveInspector

    For more information, see help context 713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* ActiveInspector();

    /*
    Method ActiveWindow

    For more information, see help context 726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveWindow();

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders, const QVariant& Tag);

    /*
    Method CopyFile

    For more information, see help context 727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CopyFile(const QString& FilePath, const QString& DestFolderPath);

    /*
    Method CreateItem

    For more information, see help context 714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItem(Outlook::OlItemType ItemType);

    /*
    Method CreateItemFromTemplate

    For more information, see help context 715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItemFromTemplate(const QString& TemplatePath);

    /*
    Method CreateItemFromTemplate

    For more information, see help context 715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItemFromTemplate(const QString& TemplatePath, const QVariant& InFolder);

    /*
    Method CreateObject

    For more information, see help context 716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateObject(const QString& ObjectName);

    /*
    Method GetNamespace

    For more information, see help context 717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* GetNamespace(const QString& Type);

    /*
    Method GetNewNickNames

    For more information, see help context 730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GetNewNickNames(QVariant& pvar);

    /*
    Method GetObjectReference

    For more information, see help context 734 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetObjectReference(IDispatch* Item, Outlook::OlReferenceType ReferenceType);

    /*
    Method IsSearchSynchronous

    For more information, see help context 729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSearchSynchronous(const QString& LookInFolders);

    /*
    Method Quit

    For more information, see help context 718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Quit();

    /*
    Method RefreshFormRegionDefinition

    For more information, see help context 3521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshFormRegionDefinition(const QString& RegionName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NameSpace : public QAxObject
{
public:
    explicit _NameSpace(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Accounts

    For more information, see help context 778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Accounts* Accounts() const; //Returns the value of Accounts

    /*
    Property AddressLists

    For more information, see help context 759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressLists* AddressLists() const; //Returns the value of AddressLists

    /*
    Property Application

    For more information, see help context 752 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoDiscoverConnectionMode

    For more information, see help context 3303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoDiscoverConnectionMode AutoDiscoverConnectionMode() const; //Returns the value of AutoDiscoverConnectionMode

    /*
    Property AutoDiscoverXml

    For more information, see help context 3263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AutoDiscoverXml() const; //Returns the value of AutoDiscoverXml

    /*
    Property Categories

    For more information, see help context 787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Categories* Categories() const; //Returns the value of Categories

    /*
    Property Class

    For more information, see help context 753 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentProfileName

    For more information, see help context 779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CurrentProfileName() const; //Returns the value of CurrentProfileName

    /*
    Property CurrentUser

    For more information, see help context 756 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CurrentUser() const; //Returns the value of CurrentUser

    /*
    Property DefaultStore

    For more information, see help context 783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* DefaultStore() const; //Returns the value of DefaultStore

    /*
    Property ExchangeConnectionMode

    For more information, see help context 776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeConnectionMode ExchangeConnectionMode() const; //Returns the value of ExchangeConnectionMode

    /*
    Property ExchangeMailboxServerName

    For more information, see help context 791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerName() const; //Returns the value of ExchangeMailboxServerName

    /*
    Property ExchangeMailboxServerVersion

    For more information, see help context 792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerVersion() const; //Returns the value of ExchangeMailboxServerVersion

    /*
    Property Folders

    For more information, see help context 757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* Folders() const; //Returns the value of Folders

    /*
    Property MAPIOBJECT

    For more information, see help context 775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Offline

    For more information, see help context 773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Offline() const; //Returns the value of Offline

    /*
    Property Parent

    For more information, see help context 755 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 754 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Stores

    For more information, see help context 780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Stores* Stores() const; //Returns the value of Stores

    /*
    Property SyncObjects

    For more information, see help context 770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SyncObjects* SyncObjects() const; //Returns the value of SyncObjects

    /*
    Property Type

    For more information, see help context 758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type

    /*
    Method AddStore

    For more information, see help context 771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddStore(const QVariant& Store);

    /*
    Method AddStoreEx

    For more information, see help context 777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddStoreEx(const QVariant& Store, Outlook::OlStoreType Type);

    /*
    Method CompareEntryIDs

    For more information, see help context 794 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool CompareEntryIDs(const QString& FirstEntryID, const QString& SecondEntryID);

    /*
    Method CreateContactCard

    For more information, see help context 3536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::ContactCard* CreateContactCard(Outlook::AddressEntry* AddressEntry);

    /*
    Method CreateRecipient

    For more information, see help context 760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CreateRecipient(const QString& RecipientName);

    /*
    Method CreateSharingItem

    For more information, see help context 790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* CreateSharingItem(const QVariant& Context);

    /*
    Method CreateSharingItem

    For more information, see help context 790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* CreateSharingItem(const QVariant& Context, const QVariant& Provider);

    /*
    Method Dial

    For more information, see help context 774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dial();

    /*
    Method Dial

    For more information, see help context 774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dial(const QVariant& ContactItem);

    /*
    Method GetAddressEntryFromID

    For more information, see help context 784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetAddressEntryFromID(const QString& ID);

    /*
    Method GetDefaultFolder

    For more information, see help context 761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetDefaultFolder(Outlook::OlDefaultFolders FolderType);

    /*
    Method GetFolderFromID

    For more information, see help context 762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFolderFromID(const QString& EntryIDFolder);

    /*
    Method GetFolderFromID

    For more information, see help context 762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFolderFromID(const QString& EntryIDFolder, const QVariant& EntryIDStore);

    /*
    Method GetGlobalAddressList

    For more information, see help context 785 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* GetGlobalAddressList();

    /*
    Method GetItemFromID

    For more information, see help context 763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetItemFromID(const QString& EntryIDItem);

    /*
    Method GetItemFromID

    For more information, see help context 763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetItemFromID(const QString& EntryIDItem, const QVariant& EntryIDStore);

    /*
    Method GetRecipientFromID

    For more information, see help context 764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetRecipientFromID(const QString& EntryID);

    /*
    Method GetSelectNamesDialog

    For more information, see help context 781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SelectNamesDialog* GetSelectNamesDialog();

    /*
    Method GetSharedDefaultFolder

    For more information, see help context 765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetSharedDefaultFolder(Outlook::Recipient* Recipient, Outlook::OlDefaultFolders FolderType);

    /*
    Method GetStoreFromID

    For more information, see help context 786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* GetStoreFromID(const QString& ID);

    /*
    Method Logoff

    For more information, see help context 766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logoff();

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon();

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog, const QVariant& NewSession);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments, const QVariant& UseTTL);

    /*
    Method OpenSharedItem

    For more information, see help context 789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* OpenSharedItem(const QString& Path);

    /*
    Method PickFolder

    For more information, see help context 768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* PickFolder();

    /*
    Method RefreshRemoteHeaders

    For more information, see help context 769 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshRemoteHeaders();

    /*
    Method RemoveStore

    For more information, see help context 772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveStore(Outlook::MAPIFolder* Folder);

    /*
    Method SendAndReceive

    For more information, see help context 782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SendAndReceive(bool showProgressDialog);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Recipient : public QAxObject
{
public:
    explicit Recipient(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Address

    For more information, see help context 2344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address

    /*
    Property AddressEntry

    For more information, see help context 2345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* AddressEntry() const; //Returns the value of AddressEntry
    inline void SetAddressEntry(Outlook::AddressEntry* value); //Sets the value of the AddressEntry property

    /*
    Property Application

    For more information, see help context 2340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoResponse

    For more information, see help context 2346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AutoResponse() const; //Returns the value of AutoResponse
    inline void SetAutoResponse(const QString& value); //Sets the value of the AutoResponse property

    /*
    Property Class

    For more information, see help context 2341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayType

    For more information, see help context 2347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property EntryID

    For more information, see help context 2348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property Index

    For more information, see help context 2349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property MeetingResponseStatus

    For more information, see help context 2350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlResponseStatus MeetingResponseStatus() const; //Returns the value of MeetingResponseStatus

    /*
    Property Name

    For more information, see help context 2351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 2343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Resolved

    For more information, see help context 2352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Resolved() const; //Returns the value of Resolved

    /*
    Property Sendable

    For more information, see help context 3476 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sendable() const; //Returns the value of Sendable
    inline void SetSendable(bool value); //Sets the value of the Sendable property

    /*
    Property Session

    For more information, see help context 2342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property TrackingStatus

    For more information, see help context 2353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTrackingStatus TrackingStatus() const; //Returns the value of TrackingStatus
    inline void SetTrackingStatus(Outlook::OlTrackingStatus value); //Sets the value of the TrackingStatus property

    /*
    Property TrackingStatusTime

    For more information, see help context 2354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TrackingStatusTime() const; //Returns the value of TrackingStatusTime
    inline void SetTrackingStatusTime(const QDateTime& value); //Sets the value of the TrackingStatusTime property

    /*
    Property Type

    For more information, see help context 2355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Type() const; //Returns the value of Type
    inline void SetType(int value); //Sets the value of the Type property

    /*
    Method Delete

    For more information, see help context 2356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method FreeBusy

    For more information, see help context 2357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method FreeBusy

    For more information, see help context 2357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method Resolve

    For more information, see help context 2358 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Resolve();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AddressEntry : public QAxObject
{
public:
    explicit AddressEntry(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Address

    For more information, see help context 2042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property AddressEntryUserType

    For more information, see help context 2057 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressEntryUserType AddressEntryUserType() const; //Returns the value of AddressEntryUserType

    /*
    Property Application

    For more information, see help context 2038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2039 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayType

    For more information, see help context 2043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property ID

    For more information, see help context 2044 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property MAPIOBJECT

    For more information, see help context 2046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT
    inline void SetMAPIOBJECT(IUnknown* value); //Sets the value of the MAPIOBJECT property

    /*
    Property Manager

    For more information, see help context 2045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Manager() const; //Returns the value of Manager

    /*
    Property Members

    For more information, see help context 2047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* Members() const; //Returns the value of Members

    /*
    Property Name

    For more information, see help context 2048 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2059 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 2049 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Method Delete

    For more information, see help context 2050 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Details

    For more information, see help context 2051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details();

    /*
    Method Details

    For more information, see help context 2051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details(const QVariant& HWnd);

    /*
    Method GetContact

    For more information, see help context 2055 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ContactItem* GetContact();

    /*
    Method GetExchangeDistributionList

    For more information, see help context 2058 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeDistributionList* GetExchangeDistributionList();

    /*
    Method GetExchangeUser

    For more information, see help context 2056 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUser();

    /*
    Method GetFreeBusy

    For more information, see help context 2052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method GetFreeBusy

    For more information, see help context 2052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method Update

    For more information, see help context 2053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update();

    /*
    Method Update

    For more information, see help context 2053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent);

    /*
    Method Update

    For more information, see help context 2053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent, const QVariant& Refresh);

    /*
    Method UpdateFreeBusy

    For more information, see help context 2054 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void UpdateFreeBusy();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AddressEntries : public QAxObject
{
public:
    explicit AddressEntries(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 25 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 26 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 29 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 28 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 31 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 27 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 32 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Add(const QString& Type);

    /*
    Method Add

    For more information, see help context 32 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Add(const QString& Type, const QVariant& Name);

    /*
    Method Add

    For more information, see help context 32 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Add(const QString& Type, const QVariant& Name, const QVariant& Address);

    /*
    Method GetFirst

    For more information, see help context 33 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetFirst();

    /*
    Method GetLast

    For more information, see help context 34 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetLast();

    /*
    Method GetNext

    For more information, see help context 35 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 36 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetPrevious();

    /*
    Method Item

    For more information, see help context 30 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Item(const QVariant& Index);

    /*
    Method Sort

    For more information, see help context 37 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort();

    /*
    Method Sort

    For more information, see help context 37 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QVariant& Property);

    /*
    Method Sort

    For more information, see help context 37 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QVariant& Property, const QVariant& Order);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ContactItem : public QAxObject
{
public:
    explicit _ContactItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Account

    For more information, see help context 964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Account() const; //Returns the value of Account
    inline void SetAccount(const QString& value); //Sets the value of the Account property

    /*
    Property Actions

    For more information, see help context 930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Anniversary

    For more information, see help context 965 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Anniversary() const; //Returns the value of Anniversary
    inline void SetAnniversary(const QDateTime& value); //Sets the value of the Anniversary property

    /*
    Property Application

    For more information, see help context 926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssistantName

    For more information, see help context 966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantName() const; //Returns the value of AssistantName
    inline void SetAssistantName(const QString& value); //Sets the value of the AssistantName property

    /*
    Property AssistantTelephoneNumber

    For more information, see help context 967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantTelephoneNumber() const; //Returns the value of AssistantTelephoneNumber
    inline void SetAssistantTelephoneNumber(const QString& value); //Sets the value of the AssistantTelephoneNumber property

    /*
    Property Attachments

    For more information, see help context 931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Birthday

    For more information, see help context 968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Birthday() const; //Returns the value of Birthday
    inline void SetBirthday(const QDateTime& value); //Sets the value of the Birthday property

    /*
    Property Body

    For more information, see help context 933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Business2TelephoneNumber

    For more information, see help context 969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Business2TelephoneNumber() const; //Returns the value of Business2TelephoneNumber
    inline void SetBusiness2TelephoneNumber(const QString& value); //Sets the value of the Business2TelephoneNumber property

    /*
    Property BusinessAddress

    For more information, see help context 970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddress() const; //Returns the value of BusinessAddress
    inline void SetBusinessAddress(const QString& value); //Sets the value of the BusinessAddress property

    /*
    Property BusinessAddressCity

    For more information, see help context 971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressCity() const; //Returns the value of BusinessAddressCity
    inline void SetBusinessAddressCity(const QString& value); //Sets the value of the BusinessAddressCity property

    /*
    Property BusinessAddressCountry

    For more information, see help context 972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressCountry() const; //Returns the value of BusinessAddressCountry
    inline void SetBusinessAddressCountry(const QString& value); //Sets the value of the BusinessAddressCountry property

    /*
    Property BusinessAddressPostOfficeBox

    For more information, see help context 974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressPostOfficeBox() const; //Returns the value of BusinessAddressPostOfficeBox
    inline void SetBusinessAddressPostOfficeBox(const QString& value); //Sets the value of the BusinessAddressPostOfficeBox property

    /*
    Property BusinessAddressPostalCode

    For more information, see help context 973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressPostalCode() const; //Returns the value of BusinessAddressPostalCode
    inline void SetBusinessAddressPostalCode(const QString& value); //Sets the value of the BusinessAddressPostalCode property

    /*
    Property BusinessAddressState

    For more information, see help context 975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressState() const; //Returns the value of BusinessAddressState
    inline void SetBusinessAddressState(const QString& value); //Sets the value of the BusinessAddressState property

    /*
    Property BusinessAddressStreet

    For more information, see help context 976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressStreet() const; //Returns the value of BusinessAddressStreet
    inline void SetBusinessAddressStreet(const QString& value); //Sets the value of the BusinessAddressStreet property

    /*
    Property BusinessCardLayoutXml

    For more information, see help context 3227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessCardLayoutXml() const; //Returns the value of BusinessCardLayoutXml
    inline void SetBusinessCardLayoutXml(const QString& value); //Sets the value of the BusinessCardLayoutXml property

    /*
    Property BusinessCardType

    For more information, see help context 3230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBusinessCardType BusinessCardType() const; //Returns the value of BusinessCardType

    /*
    Property BusinessFaxNumber

    For more information, see help context 977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessFaxNumber() const; //Returns the value of BusinessFaxNumber
    inline void SetBusinessFaxNumber(const QString& value); //Sets the value of the BusinessFaxNumber property

    /*
    Property BusinessHomePage

    For more information, see help context 978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessHomePage() const; //Returns the value of BusinessHomePage
    inline void SetBusinessHomePage(const QString& value); //Sets the value of the BusinessHomePage property

    /*
    Property BusinessTelephoneNumber

    For more information, see help context 979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessTelephoneNumber() const; //Returns the value of BusinessTelephoneNumber
    inline void SetBusinessTelephoneNumber(const QString& value); //Sets the value of the BusinessTelephoneNumber property

    /*
    Property CallbackTelephoneNumber

    For more information, see help context 980 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CallbackTelephoneNumber() const; //Returns the value of CallbackTelephoneNumber
    inline void SetCallbackTelephoneNumber(const QString& value); //Sets the value of the CallbackTelephoneNumber property

    /*
    Property CarTelephoneNumber

    For more information, see help context 981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CarTelephoneNumber() const; //Returns the value of CarTelephoneNumber
    inline void SetCarTelephoneNumber(const QString& value); //Sets the value of the CarTelephoneNumber property

    /*
    Property Categories

    For more information, see help context 934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Children

    For more information, see help context 982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Children() const; //Returns the value of Children
    inline void SetChildren(const QString& value); //Sets the value of the Children property

    /*
    Property Class

    For more information, see help context 927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property CompanyAndFullName

    For more information, see help context 983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyAndFullName() const; //Returns the value of CompanyAndFullName

    /*
    Property CompanyLastFirstNoSpace

    For more information, see help context 984 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyLastFirstNoSpace() const; //Returns the value of CompanyLastFirstNoSpace

    /*
    Property CompanyLastFirstSpaceOnly

    For more information, see help context 985 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyLastFirstSpaceOnly() const; //Returns the value of CompanyLastFirstSpaceOnly

    /*
    Property CompanyMainTelephoneNumber

    For more information, see help context 986 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyMainTelephoneNumber() const; //Returns the value of CompanyMainTelephoneNumber
    inline void SetCompanyMainTelephoneNumber(const QString& value); //Sets the value of the CompanyMainTelephoneNumber property

    /*
    Property CompanyName

    For more information, see help context 987 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyName() const; //Returns the value of CompanyName
    inline void SetCompanyName(const QString& value); //Sets the value of the CompanyName property

    /*
    Property ComputerNetworkName

    For more information, see help context 988 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ComputerNetworkName() const; //Returns the value of ComputerNetworkName
    inline void SetComputerNetworkName(const QString& value); //Sets the value of the ComputerNetworkName property

    /*
    Property Conflicts

    For more information, see help context 1089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 938 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property CustomerID

    For more information, see help context 989 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CustomerID() const; //Returns the value of CustomerID
    inline void SetCustomerID(const QString& value); //Sets the value of the CustomerID property

    /*
    Property Department

    For more information, see help context 990 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Department() const; //Returns the value of Department
    inline void SetDepartment(const QString& value); //Sets the value of the Department property

    /*
    Property DownloadState

    For more information, see help context 1083 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Email1Address

    For more information, see help context 991 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1Address() const; //Returns the value of Email1Address
    inline void SetEmail1Address(const QString& value); //Sets the value of the Email1Address property

    /*
    Property Email1AddressType

    For more information, see help context 992 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1AddressType() const; //Returns the value of Email1AddressType
    inline void SetEmail1AddressType(const QString& value); //Sets the value of the Email1AddressType property

    /*
    Property Email1DisplayName

    For more information, see help context 993 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1DisplayName() const; //Returns the value of Email1DisplayName
    inline void SetEmail1DisplayName(const QString& value); //Sets the value of the Email1DisplayName property

    /*
    Property Email1EntryID

    For more information, see help context 994 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1EntryID() const; //Returns the value of Email1EntryID

    /*
    Property Email2Address

    For more information, see help context 995 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2Address() const; //Returns the value of Email2Address
    inline void SetEmail2Address(const QString& value); //Sets the value of the Email2Address property

    /*
    Property Email2AddressType

    For more information, see help context 996 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2AddressType() const; //Returns the value of Email2AddressType
    inline void SetEmail2AddressType(const QString& value); //Sets the value of the Email2AddressType property

    /*
    Property Email2DisplayName

    For more information, see help context 997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2DisplayName() const; //Returns the value of Email2DisplayName
    inline void SetEmail2DisplayName(const QString& value); //Sets the value of the Email2DisplayName property

    /*
    Property Email2EntryID

    For more information, see help context 998 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2EntryID() const; //Returns the value of Email2EntryID

    /*
    Property Email3Address

    For more information, see help context 999 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3Address() const; //Returns the value of Email3Address
    inline void SetEmail3Address(const QString& value); //Sets the value of the Email3Address property

    /*
    Property Email3AddressType

    For more information, see help context 1000 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3AddressType() const; //Returns the value of Email3AddressType
    inline void SetEmail3AddressType(const QString& value); //Sets the value of the Email3AddressType property

    /*
    Property Email3DisplayName

    For more information, see help context 1001 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3DisplayName() const; //Returns the value of Email3DisplayName
    inline void SetEmail3DisplayName(const QString& value); //Sets the value of the Email3DisplayName property

    /*
    Property Email3EntryID

    For more information, see help context 1002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3EntryID() const; //Returns the value of Email3EntryID

    /*
    Property EntryID

    For more information, see help context 939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FTPSite

    For more information, see help context 1005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FTPSite() const; //Returns the value of FTPSite
    inline void SetFTPSite(const QString& value); //Sets the value of the FTPSite property

    /*
    Property FileAs

    For more information, see help context 1003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FileAs() const; //Returns the value of FileAs
    inline void SetFileAs(const QString& value); //Sets the value of the FileAs property

    /*
    Property FirstName

    For more information, see help context 1004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FirstName() const; //Returns the value of FirstName
    inline void SetFirstName(const QString& value); //Sets the value of the FirstName property

    /*
    Property FormDescription

    For more information, see help context 940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property FullName

    For more information, see help context 1006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullName() const; //Returns the value of FullName
    inline void SetFullName(const QString& value); //Sets the value of the FullName property

    /*
    Property FullNameAndCompany

    For more information, see help context 1007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullNameAndCompany() const; //Returns the value of FullNameAndCompany

    /*
    Property Gender

    For more information, see help context 1008 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGender Gender() const; //Returns the value of Gender
    inline void SetGender(Outlook::OlGender value); //Sets the value of the Gender property

    /*
    Property GetInspector

    For more information, see help context 941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property GovernmentIDNumber

    For more information, see help context 1009 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GovernmentIDNumber() const; //Returns the value of GovernmentIDNumber
    inline void SetGovernmentIDNumber(const QString& value); //Sets the value of the GovernmentIDNumber property

    /*
    Property HasPicture

    For more information, see help context 1092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasPicture() const; //Returns the value of HasPicture

    /*
    Property Hobby

    For more information, see help context 1010 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Hobby() const; //Returns the value of Hobby
    inline void SetHobby(const QString& value); //Sets the value of the Hobby property

    /*
    Property Home2TelephoneNumber

    For more information, see help context 1011 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Home2TelephoneNumber() const; //Returns the value of Home2TelephoneNumber
    inline void SetHome2TelephoneNumber(const QString& value); //Sets the value of the Home2TelephoneNumber property

    /*
    Property HomeAddress

    For more information, see help context 1012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddress() const; //Returns the value of HomeAddress
    inline void SetHomeAddress(const QString& value); //Sets the value of the HomeAddress property

    /*
    Property HomeAddressCity

    For more information, see help context 1013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressCity() const; //Returns the value of HomeAddressCity
    inline void SetHomeAddressCity(const QString& value); //Sets the value of the HomeAddressCity property

    /*
    Property HomeAddressCountry

    For more information, see help context 1014 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressCountry() const; //Returns the value of HomeAddressCountry
    inline void SetHomeAddressCountry(const QString& value); //Sets the value of the HomeAddressCountry property

    /*
    Property HomeAddressPostOfficeBox

    For more information, see help context 1016 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressPostOfficeBox() const; //Returns the value of HomeAddressPostOfficeBox
    inline void SetHomeAddressPostOfficeBox(const QString& value); //Sets the value of the HomeAddressPostOfficeBox property

    /*
    Property HomeAddressPostalCode

    For more information, see help context 1015 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressPostalCode() const; //Returns the value of HomeAddressPostalCode
    inline void SetHomeAddressPostalCode(const QString& value); //Sets the value of the HomeAddressPostalCode property

    /*
    Property HomeAddressState

    For more information, see help context 1017 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressState() const; //Returns the value of HomeAddressState
    inline void SetHomeAddressState(const QString& value); //Sets the value of the HomeAddressState property

    /*
    Property HomeAddressStreet

    For more information, see help context 1018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressStreet() const; //Returns the value of HomeAddressStreet
    inline void SetHomeAddressStreet(const QString& value); //Sets the value of the HomeAddressStreet property

    /*
    Property HomeFaxNumber

    For more information, see help context 1019 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeFaxNumber() const; //Returns the value of HomeFaxNumber
    inline void SetHomeFaxNumber(const QString& value); //Sets the value of the HomeFaxNumber property

    /*
    Property HomeTelephoneNumber

    For more information, see help context 1020 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeTelephoneNumber() const; //Returns the value of HomeTelephoneNumber
    inline void SetHomeTelephoneNumber(const QString& value); //Sets the value of the HomeTelephoneNumber property

    /*
    Property IMAddress

    For more information, see help context 1085 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString IMAddress() const; //Returns the value of IMAddress
    inline void SetIMAddress(const QString& value); //Sets the value of the IMAddress property

    /*
    Property ISDNNumber

    For more information, see help context 1023 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ISDNNumber() const; //Returns the value of ISDNNumber
    inline void SetISDNNumber(const QString& value); //Sets the value of the ISDNNumber property

    /*
    Property Importance

    For more information, see help context 942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property Initials

    For more information, see help context 1021 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Initials() const; //Returns the value of Initials
    inline void SetInitials(const QString& value); //Sets the value of the Initials property

    /*
    Property InternetFreeBusyAddress

    For more information, see help context 1022 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString InternetFreeBusyAddress() const; //Returns the value of InternetFreeBusyAddress
    inline void SetInternetFreeBusyAddress(const QString& value); //Sets the value of the InternetFreeBusyAddress property

    /*
    Property IsConflict

    For more information, see help context 1087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3033 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1081 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property JobTitle

    For more information, see help context 1024 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString JobTitle() const; //Returns the value of JobTitle
    inline void SetJobTitle(const QString& value); //Sets the value of the JobTitle property

    /*
    Property Journal

    For more information, see help context 1025 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Journal() const; //Returns the value of Journal
    inline void SetJournal(bool value); //Sets the value of the Journal property

    /*
    Property Language

    For more information, see help context 1026 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LastFirstAndSuffix

    For more information, see help context 1027 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstAndSuffix() const; //Returns the value of LastFirstAndSuffix

    /*
    Property LastFirstNoSpace

    For more information, see help context 1028 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpace() const; //Returns the value of LastFirstNoSpace

    /*
    Property LastFirstNoSpaceAndSuffix

    For more information, see help context 1082 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpaceAndSuffix() const; //Returns the value of LastFirstNoSpaceAndSuffix

    /*
    Property LastFirstNoSpaceCompany

    For more information, see help context 1029 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpaceCompany() const; //Returns the value of LastFirstNoSpaceCompany

    /*
    Property LastFirstSpaceOnly

    For more information, see help context 1030 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstSpaceOnly() const; //Returns the value of LastFirstSpaceOnly

    /*
    Property LastFirstSpaceOnlyCompany

    For more information, see help context 1031 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstSpaceOnlyCompany() const; //Returns the value of LastFirstSpaceOnlyCompany

    /*
    Property LastModificationTime

    For more information, see help context 943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property LastName

    For more information, see help context 1032 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastName() const; //Returns the value of LastName
    inline void SetLastName(const QString& value); //Sets the value of the LastName property

    /*
    Property LastNameAndFirstName

    For more information, see help context 1033 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastNameAndFirstName() const; //Returns the value of LastNameAndFirstName

    /*
    Property Links

    For more information, see help context 1080 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MailingAddress

    For more information, see help context 1034 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddress() const; //Returns the value of MailingAddress
    inline void SetMailingAddress(const QString& value); //Sets the value of the MailingAddress property

    /*
    Property MailingAddressCity

    For more information, see help context 1035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressCity() const; //Returns the value of MailingAddressCity
    inline void SetMailingAddressCity(const QString& value); //Sets the value of the MailingAddressCity property

    /*
    Property MailingAddressCountry

    For more information, see help context 1036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressCountry() const; //Returns the value of MailingAddressCountry
    inline void SetMailingAddressCountry(const QString& value); //Sets the value of the MailingAddressCountry property

    /*
    Property MailingAddressPostOfficeBox

    For more information, see help context 1038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressPostOfficeBox() const; //Returns the value of MailingAddressPostOfficeBox
    inline void SetMailingAddressPostOfficeBox(const QString& value); //Sets the value of the MailingAddressPostOfficeBox property

    /*
    Property MailingAddressPostalCode

    For more information, see help context 1037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressPostalCode() const; //Returns the value of MailingAddressPostalCode
    inline void SetMailingAddressPostalCode(const QString& value); //Sets the value of the MailingAddressPostalCode property

    /*
    Property MailingAddressState

    For more information, see help context 1039 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressState() const; //Returns the value of MailingAddressState
    inline void SetMailingAddressState(const QString& value); //Sets the value of the MailingAddressState property

    /*
    Property MailingAddressStreet

    For more information, see help context 1040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressStreet() const; //Returns the value of MailingAddressStreet
    inline void SetMailingAddressStreet(const QString& value); //Sets the value of the MailingAddressStreet property

    /*
    Property ManagerName

    For more information, see help context 1041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ManagerName() const; //Returns the value of ManagerName
    inline void SetManagerName(const QString& value); //Sets the value of the ManagerName property

    /*
    Property MarkForDownload

    For more information, see help context 1086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 945 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property MiddleName

    For more information, see help context 1042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MiddleName() const; //Returns the value of MiddleName
    inline void SetMiddleName(const QString& value); //Sets the value of the MiddleName property

    /*
    Property Mileage

    For more information, see help context 946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property MobileTelephoneNumber

    For more information, see help context 1043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MobileTelephoneNumber() const; //Returns the value of MobileTelephoneNumber
    inline void SetMobileTelephoneNumber(const QString& value); //Sets the value of the MobileTelephoneNumber property

    /*
    Property NetMeetingAlias

    For more information, see help context 1044 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingAlias() const; //Returns the value of NetMeetingAlias
    inline void SetNetMeetingAlias(const QString& value); //Sets the value of the NetMeetingAlias property

    /*
    Property NetMeetingServer

    For more information, see help context 1045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingServer() const; //Returns the value of NetMeetingServer
    inline void SetNetMeetingServer(const QString& value); //Sets the value of the NetMeetingServer property

    /*
    Property NickName

    For more information, see help context 1046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NickName() const; //Returns the value of NickName
    inline void SetNickName(const QString& value); //Sets the value of the NickName property

    /*
    Property NoAging

    For more information, see help context 947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OfficeLocation

    For more information, see help context 1047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OfficeLocation() const; //Returns the value of OfficeLocation
    inline void SetOfficeLocation(const QString& value); //Sets the value of the OfficeLocation property

    /*
    Property OrganizationalIDNumber

    For more information, see help context 1048 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OrganizationalIDNumber() const; //Returns the value of OrganizationalIDNumber
    inline void SetOrganizationalIDNumber(const QString& value); //Sets the value of the OrganizationalIDNumber property

    /*
    Property OtherAddress

    For more information, see help context 1049 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddress() const; //Returns the value of OtherAddress
    inline void SetOtherAddress(const QString& value); //Sets the value of the OtherAddress property

    /*
    Property OtherAddressCity

    For more information, see help context 1050 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressCity() const; //Returns the value of OtherAddressCity
    inline void SetOtherAddressCity(const QString& value); //Sets the value of the OtherAddressCity property

    /*
    Property OtherAddressCountry

    For more information, see help context 1051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressCountry() const; //Returns the value of OtherAddressCountry
    inline void SetOtherAddressCountry(const QString& value); //Sets the value of the OtherAddressCountry property

    /*
    Property OtherAddressPostOfficeBox

    For more information, see help context 1053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressPostOfficeBox() const; //Returns the value of OtherAddressPostOfficeBox
    inline void SetOtherAddressPostOfficeBox(const QString& value); //Sets the value of the OtherAddressPostOfficeBox property

    /*
    Property OtherAddressPostalCode

    For more information, see help context 1052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressPostalCode() const; //Returns the value of OtherAddressPostalCode
    inline void SetOtherAddressPostalCode(const QString& value); //Sets the value of the OtherAddressPostalCode property

    /*
    Property OtherAddressState

    For more information, see help context 1054 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressState() const; //Returns the value of OtherAddressState
    inline void SetOtherAddressState(const QString& value); //Sets the value of the OtherAddressState property

    /*
    Property OtherAddressStreet

    For more information, see help context 1055 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressStreet() const; //Returns the value of OtherAddressStreet
    inline void SetOtherAddressStreet(const QString& value); //Sets the value of the OtherAddressStreet property

    /*
    Property OtherFaxNumber

    For more information, see help context 1056 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherFaxNumber() const; //Returns the value of OtherFaxNumber
    inline void SetOtherFaxNumber(const QString& value); //Sets the value of the OtherFaxNumber property

    /*
    Property OtherTelephoneNumber

    For more information, see help context 1057 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherTelephoneNumber() const; //Returns the value of OtherTelephoneNumber
    inline void SetOtherTelephoneNumber(const QString& value); //Sets the value of the OtherTelephoneNumber property

    /*
    Property OutlookInternalVersion

    For more information, see help context 948 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property PagerNumber

    For more information, see help context 1058 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PagerNumber() const; //Returns the value of PagerNumber
    inline void SetPagerNumber(const QString& value); //Sets the value of the PagerNumber property

    /*
    Property Parent

    For more information, see help context 929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PersonalHomePage

    For more information, see help context 1059 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PersonalHomePage() const; //Returns the value of PersonalHomePage
    inline void SetPersonalHomePage(const QString& value); //Sets the value of the PersonalHomePage property

    /*
    Property PrimaryTelephoneNumber

    For more information, see help context 1060 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimaryTelephoneNumber() const; //Returns the value of PrimaryTelephoneNumber
    inline void SetPrimaryTelephoneNumber(const QString& value); //Sets the value of the PrimaryTelephoneNumber property

    /*
    Property Profession

    For more information, see help context 1061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Profession() const; //Returns the value of Profession
    inline void SetProfession(const QString& value); //Sets the value of the Profession property

    /*
    Property PropertyAccessor

    For more information, see help context 1093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property RadioTelephoneNumber

    For more information, see help context 1062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RadioTelephoneNumber() const; //Returns the value of RadioTelephoneNumber
    inline void SetRadioTelephoneNumber(const QString& value); //Sets the value of the RadioTelephoneNumber property

    /*
    Property ReferredBy

    For more information, see help context 1063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReferredBy() const; //Returns the value of ReferredBy
    inline void SetReferredBy(const QString& value); //Sets the value of the ReferredBy property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1107 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SelectedMailingAddress

    For more information, see help context 1064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMailingAddress SelectedMailingAddress() const; //Returns the value of SelectedMailingAddress
    inline void SetSelectedMailingAddress(Outlook::OlMailingAddress value); //Sets the value of the SelectedMailingAddress property

    /*
    Property Sensitivity

    For more information, see help context 951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Spouse

    For more information, see help context 1065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Spouse() const; //Returns the value of Spouse
    inline void SetSpouse(const QString& value); //Sets the value of the Spouse property

    /*
    Property Subject

    For more information, see help context 953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Suffix

    For more information, see help context 1066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Suffix() const; //Returns the value of Suffix
    inline void SetSuffix(const QString& value); //Sets the value of the Suffix property

    /*
    Property TTYTDDTelephoneNumber

    For more information, see help context 1069 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TTYTDDTelephoneNumber() const; //Returns the value of TTYTDDTelephoneNumber
    inline void SetTTYTDDTelephoneNumber(const QString& value); //Sets the value of the TTYTDDTelephoneNumber property

    /*
    Property TaskCompletedDate

    For more information, see help context 1102 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1100 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1101 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property TelexNumber

    For more information, see help context 1067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TelexNumber() const; //Returns the value of TelexNumber
    inline void SetTelexNumber(const QString& value); //Sets the value of the TelexNumber property

    /*
    Property Title

    For more information, see help context 1068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Title() const; //Returns the value of Title
    inline void SetTitle(const QString& value); //Sets the value of the Title property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3030 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property User1

    For more information, see help context 1070 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User1() const; //Returns the value of User1
    inline void SetUser1(const QString& value); //Sets the value of the User1 property

    /*
    Property User2

    For more information, see help context 1071 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User2() const; //Returns the value of User2
    inline void SetUser2(const QString& value); //Sets the value of the User2 property

    /*
    Property User3

    For more information, see help context 1072 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User3() const; //Returns the value of User3
    inline void SetUser3(const QString& value); //Sets the value of the User3 property

    /*
    Property User4

    For more information, see help context 1073 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User4() const; //Returns the value of User4
    inline void SetUser4(const QString& value); //Sets the value of the User4 property

    /*
    Property UserCertificate

    For more information, see help context 1074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString UserCertificate() const; //Returns the value of UserCertificate
    inline void SetUserCertificate(const QString& value); //Sets the value of the UserCertificate property

    /*
    Property UserProperties

    For more information, see help context 955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Property WebPage

    For more information, see help context 1075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString WebPage() const; //Returns the value of WebPage
    inline void SetWebPage(const QString& value); //Sets the value of the WebPage property

    /*
    Property YomiCompanyName

    For more information, see help context 1076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiCompanyName() const; //Returns the value of YomiCompanyName
    inline void SetYomiCompanyName(const QString& value); //Sets the value of the YomiCompanyName property

    /*
    Property YomiFirstName

    For more information, see help context 1077 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiFirstName() const; //Returns the value of YomiFirstName
    inline void SetYomiFirstName(const QString& value); //Sets the value of the YomiFirstName property

    /*
    Property YomiLastName

    For more information, see help context 1078 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiLastName() const; //Returns the value of YomiLastName
    inline void SetYomiLastName(const QString& value); //Sets the value of the YomiLastName property

    /*
    Method AddBusinessCardLogoPicture

    For more information, see help context 3229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCardLogoPicture(const QString& Path);

    /*
    Method AddPicture

    For more information, see help context 1090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddPicture(const QString& Path);

    /*
    Method ClearTaskFlag

    For more information, see help context 3032 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 956 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method ForwardAsBusinessCard

    For more information, see help context 1094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsBusinessCard();

    /*
    Method ForwardAsVcard

    For more information, see help context 1079 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsVcard();

    /*
    Method GetConversation

    For more information, see help context 3404 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3031 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method RemovePicture

    For more information, see help context 1091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemovePicture();

    /*
    Method ResetBusinessCard

    For more information, see help context 3228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetBusinessCard();

    /*
    Method Save

    For more information, see help context 962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method SaveBusinessCardImage

    For more information, see help context 1096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveBusinessCardImage(const QString& Path);

    /*
    Method ShowBusinessCardEditor

    For more information, see help context 1095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowBusinessCardEditor();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1084 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method ShowCheckAddressDialog

    For more information, see help context 3592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckAddressDialog(Outlook::OlMailingAddress MailingAddress);

    /*
    Method ShowCheckFullNameDialog

    For more information, see help context 3593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckFullNameDialog();

    /*
    Method ShowCheckPhoneDialog

    For more information, see help context 1097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckPhoneDialog(Outlook::OlContactPhoneNumber PhoneNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Actions : public QAxObject
{
public:
    explicit Actions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 149 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 148 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 151 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Action* Add();

    /*
    Method Item

    For more information, see help context 150 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Action* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 152 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Action : public QAxObject
{
public:
    explicit Action(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 10 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 11 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CopyLike

    For more information, see help context 14 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlActionCopyLike CopyLike() const; //Returns the value of CopyLike
    inline void SetCopyLike(Outlook::OlActionCopyLike value); //Sets the value of the CopyLike property

    /*
    Property Enabled

    For more information, see help context 15 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property MessageClass

    For more information, see help context 16 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Name

    For more information, see help context 17 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 13 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Prefix

    For more information, see help context 18 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Prefix() const; //Returns the value of Prefix
    inline void SetPrefix(const QString& value); //Sets the value of the Prefix property

    /*
    Property ReplyStyle

    For more information, see help context 19 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlActionReplyStyle ReplyStyle() const; //Returns the value of ReplyStyle
    inline void SetReplyStyle(Outlook::OlActionReplyStyle value); //Sets the value of the ReplyStyle property

    /*
    Property ResponseStyle

    For more information, see help context 20 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlActionResponseStyle ResponseStyle() const; //Returns the value of ResponseStyle
    inline void SetResponseStyle(Outlook::OlActionResponseStyle value); //Sets the value of the ResponseStyle property

    /*
    Property Session

    For more information, see help context 12 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowOn

    For more information, see help context 21 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlActionShowOn ShowOn() const; //Returns the value of ShowOn
    inline void SetShowOn(Outlook::OlActionShowOn value); //Sets the value of the ShowOn property

    /*
    Method Delete

    For more information, see help context 22 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Execute

    For more information, see help context 23 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Execute();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Attachments : public QAxObject
{
public:
    explicit Attachments(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 172 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Add(const QVariant& Source);

    /*
    Method Add

    For more information, see help context 176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Add(const QVariant& Source, const QVariant& Type);

    /*
    Method Add

    For more information, see help context 176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Add(const QVariant& Source, const QVariant& Type, const QVariant& Position);

    /*
    Method Add

    For more information, see help context 176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Add(const QVariant& Source, const QVariant& Type, const QVariant& Position, const QVariant& DisplayName);

    /*
    Method Item

    For more information, see help context 175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 177 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Attachment : public QAxObject
{
public:
    explicit Attachment(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property BlockLevel

    For more information, see help context 3262 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAttachmentBlockLevel BlockLevel() const; //Returns the value of BlockLevel

    /*
    Property Class

    For more information, see help context 2362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayName

    For more information, see help context 2365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName
    inline void SetDisplayName(const QString& value); //Sets the value of the DisplayName property

    /*
    Property FileName

    For more information, see help context 2366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FileName() const; //Returns the value of FileName

    /*
    Property Index

    For more information, see help context 2367 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property MAPIOBJECT

    For more information, see help context 2368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Parent

    For more information, see help context 2364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PathName

    For more information, see help context 2369 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PathName() const; //Returns the value of PathName

    /*
    Property Position

    For more information, see help context 2370 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property PropertyAccessor

    For more information, see help context 2374 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 2375 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Type

    For more information, see help context 2371 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAttachmentType Type() const; //Returns the value of Type

    /*
    Method Delete

    For more information, see help context 2372 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GetTemporaryFilePath

    For more information, see help context 3522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetTemporaryFilePath();

    /*
    Method SaveAsFile

    For more information, see help context 2373 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAsFile(const QString& Path);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _PropertyAccessor : public QAxObject
{
public:
    explicit _PropertyAccessor(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 1966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 1967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 1969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 1968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method BinaryToString

    For more information, see help context 1977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BinaryToString(const QVariant& Value);

    /*
    Method DeleteProperties

    For more information, see help context 1979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant DeleteProperties(QVariant& SchemaNames);

    /*
    Method DeleteProperty

    For more information, see help context 1978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeleteProperty(const QString& SchemaName);

    /*
    Method GetProperties

    For more information, see help context 1972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetProperties(const QVariant& SchemaNames);

    /*
    Method GetProperty

    For more information, see help context 1970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetProperty(const QString& SchemaName);

    /*
    Method LocalTimeToUTC

    For more information, see help context 1975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LocalTimeToUTC(const QDateTime& Value);

    /*
    Method SetProperties

    For more information, see help context 1973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant SetProperties(const QVariant& SchemaNames, const QVariant& Values);

    /*
    Method SetProperty

    For more information, see help context 1971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetProperty(const QString& SchemaName, const QVariant& Value);

    /*
    Method StringToBinary

    For more information, see help context 1976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant StringToBinary(const QString& Value);

    /*
    Method UTCToLocalTime

    For more information, see help context 1974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime UTCToLocalTime(const QDateTime& Value);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT FormDescription : public QAxObject
{
public:
    explicit FormDescription(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 179 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Category

    For more information, see help context 183 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Category() const; //Returns the value of Category
    inline void SetCategory(const QString& value); //Sets the value of the Category property

    /*
    Property CategorySub

    For more information, see help context 184 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CategorySub() const; //Returns the value of CategorySub
    inline void SetCategorySub(const QString& value); //Sets the value of the CategorySub property

    /*
    Property Class

    For more information, see help context 180 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Comment

    For more information, see help context 185 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Comment() const; //Returns the value of Comment
    inline void SetComment(const QString& value); //Sets the value of the Comment property

    /*
    Property ContactName

    For more information, see help context 186 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ContactName() const; //Returns the value of ContactName
    inline void SetContactName(const QString& value); //Sets the value of the ContactName property

    /*
    Property DisplayName

    For more information, see help context 187 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName
    inline void SetDisplayName(const QString& value); //Sets the value of the DisplayName property

    /*
    Property Hidden

    For more information, see help context 188 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Hidden() const; //Returns the value of Hidden
    inline void SetHidden(bool value); //Sets the value of the Hidden property

    /*
    Property Icon

    For more information, see help context 189 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Icon() const; //Returns the value of Icon
    inline void SetIcon(const QString& value); //Sets the value of the Icon property

    /*
    Property Locked

    For more information, see help context 190 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MessageClass

    For more information, see help context 191 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass

    /*
    Property MiniIcon

    For more information, see help context 192 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MiniIcon() const; //Returns the value of MiniIcon
    inline void SetMiniIcon(const QString& value); //Sets the value of the MiniIcon property

    /*
    Property Name

    For more information, see help context 193 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Number

    For more information, see help context 194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Number() const; //Returns the value of Number
    inline void SetNumber(const QString& value); //Sets the value of the Number property

    /*
    Property OneOff

    For more information, see help context 195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OneOff() const; //Returns the value of OneOff
    inline void SetOneOff(bool value); //Sets the value of the OneOff property

    /*
    Property Parent

    For more information, see help context 182 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Password

    For more information, see help context 196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Password() const; //Returns the value of Password
    inline void SetPassword(const QString& value); //Sets the value of the Password property

    /*
    Property ScriptText

    For more information, see help context 197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ScriptText() const; //Returns the value of ScriptText

    /*
    Property Session

    For more information, see help context 181 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Template

    For more information, see help context 198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Template() const; //Returns the value of Template
    inline void SetTemplate(const QString& value); //Sets the value of the Template property

    /*
    Property UseWordMail

    For more information, see help context 199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UseWordMail() const; //Returns the value of UseWordMail
    inline void SetUseWordMail(bool value); //Sets the value of the UseWordMail property

    /*
    Property Version

    For more information, see help context 200 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Version() const; //Returns the value of Version
    inline void SetVersion(const QString& value); //Sets the value of the Version property

    /*
    Method PublishForm

    For more information, see help context 201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PublishForm(Outlook::OlFormRegistry Registry);

    /*
    Method PublishForm

    For more information, see help context 201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PublishForm(Outlook::OlFormRegistry Registry, const QVariant& Folder);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Inspector : public QAxObject
{
public:
    explicit _Inspector(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AttachmentSelection

    For more information, see help context 3486 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AttachmentSelection* AttachmentSelection() const; //Returns the value of AttachmentSelection

    /*
    Property Caption

    For more information, see help context 2973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 2958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CommandBars

    For more information, see help context 2961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::CommandBars* CommandBars() const; //Returns the value of CommandBars

    /*
    Property CurrentItem

    For more information, see help context 2962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CurrentItem() const; //Returns the value of CurrentItem

    /*
    Property EditorType

    For more information, see help context 2963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEditorType EditorType() const; //Returns the value of EditorType

    /*
    Property HTMLEditor

    For more information, see help context 2971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* HTMLEditor() const; //Returns the value of HTMLEditor

    /*
    Property Height

    For more information, see help context 2974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left

    For more information, see help context 2975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property ModifiedFormPages

    For more information, see help context 2964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ModifiedFormPages() const; //Returns the value of ModifiedFormPages

    /*
    Property Parent

    For more information, see help context 2960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Top

    For more information, see help context 2976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width

    For more information, see help context 2977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property WindowState

    For more information, see help context 2978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlWindowState WindowState() const; //Returns the value of WindowState
    inline void SetWindowState(Outlook::OlWindowState value); //Sets the value of the WindowState property

    /*
    Property WordEditor

    For more information, see help context 2972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* WordEditor() const; //Returns the value of WordEditor

    /*
    Method Activate

    For more information, see help context 2979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Activate();

    /*
    Method Close

    For more information, see help context 2965 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Display

    For more information, see help context 2966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 2966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method HideFormPage

    For more information, see help context 2967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void HideFormPage(const QString& PageName);

    /*
    Method IsWordMail

    For more information, see help context 2968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsWordMail();

    /*
    Method NewFormRegion

    For more information, see help context 2981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* NewFormRegion();

    /*
    Method OpenFormRegion

    For more information, see help context 2982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* OpenFormRegion(const QString& Path);

    /*
    Method SaveFormRegion

    For more information, see help context 2983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveFormRegion(IDispatch* Page, const QString& FileName);

    /*
    Method SetControlItemProperty

    For more information, see help context 2980 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetControlItemProperty(IDispatch* Control, const QString& PropertyName);

    /*
    Method SetCurrentFormPage

    For more information, see help context 2969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetCurrentFormPage(const QString& PageName);

    /*
    Method SetSchedulingStartTime

    For more information, see help context 3555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetSchedulingStartTime(const QDateTime& Start);

    /*
    Method ShowFormPage

    For more information, see help context 2970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowFormPage(const QString& PageName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AttachmentSelection : public QAxObject
{
public:
    explicit _AttachmentSelection(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Location

    For more information, see help context 3482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSelectionLocation Location() const; //Returns the value of Location

    /*
    Property Parent

    For more information, see help context 2942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetSelection

    For more information, see help context 3534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Selection* GetSelection(Outlook::OlSelectionContents SelectionContents);

    /*
    Method Item

    For more information, see help context 2944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Selection : public QAxObject
{
public:
    explicit Selection(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 81 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 82 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 85 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Location

    For more information, see help context 3481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSelectionLocation Location() const; //Returns the value of Location

    /*
    Property Parent

    For more information, see help context 84 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 83 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetSelection

    For more information, see help context 3533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Selection* GetSelection(Outlook::OlSelectionContents SelectionContents);

    /*
    Method Item

    For more information, see help context 86 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT UserProperties : public QAxObject
{
public:
    explicit UserProperties(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 207 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 206 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 205 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type);

    /*
    Method Add

    For more information, see help context 209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields);

    /*
    Method Add

    For more information, see help context 209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields, const QVariant& DisplayFormat);

    /*
    Method Find

    For more information, see help context 210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Find(const QString& Name);

    /*
    Method Find

    For more information, see help context 210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Find(const QString& Name, const QVariant& Custom);

    /*
    Method Item

    For more information, see help context 208 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperty* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT UserProperty : public QAxObject
{
public:
    explicit UserProperty(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Formula

    For more information, see help context 217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Formula() const; //Returns the value of Formula
    inline void SetFormula(const QString& value); //Sets the value of the Formula property

    /*
    Property IsUserProperty

    For more information, see help context 224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUserProperty() const; //Returns the value of IsUserProperty

    /*
    Property Name

    For more information, see help context 218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 215 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType Type() const; //Returns the value of Type

    /*
    Property ValidationFormula

    For more information, see help context 220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ValidationFormula() const; //Returns the value of ValidationFormula
    inline void SetValidationFormula(const QString& value); //Sets the value of the ValidationFormula property

    /*
    Property ValidationText

    For more information, see help context 221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ValidationText() const; //Returns the value of ValidationText
    inline void SetValidationText(const QString& value); //Sets the value of the ValidationText property

    /*
    Property Value

    For more information, see help context 222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method Delete

    For more information, see help context 223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MAPIFolder : public QAxObject
{
public:
    explicit MAPIFolder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AddressBookName

    For more information, see help context 2004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AddressBookName() const; //Returns the value of AddressBookName
    inline void SetAddressBookName(const QString& value); //Sets the value of the AddressBookName property

    /*
    Property Application

    For more information, see help context 1981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 1982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentView

    For more information, see help context 2009 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* CurrentView() const; //Returns the value of CurrentView

    /*
    Property CustomViewsOnly

    For more information, see help context 2010 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool CustomViewsOnly() const; //Returns the value of CustomViewsOnly
    inline void SetCustomViewsOnly(bool value); //Sets the value of the CustomViewsOnly property

    /*
    Property DefaultItemType

    For more information, see help context 1985 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlItemType DefaultItemType() const; //Returns the value of DefaultItemType

    /*
    Property DefaultMessageClass

    For more information, see help context 1986 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DefaultMessageClass() const; //Returns the value of DefaultMessageClass

    /*
    Property Description

    For more information, see help context 1987 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property EntryID

    For more information, see help context 1988 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FolderPath

    For more information, see help context 2006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FolderPath() const; //Returns the value of FolderPath

    /*
    Property Folders

    For more information, see help context 1989 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* Folders() const; //Returns the value of Folders

    /*
    Property FullFolderPath

    For more information, see help context 2013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullFolderPath() const; //Returns the value of FullFolderPath

    /*
    Property InAppFolderSyncObject

    For more information, see help context 2008 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool InAppFolderSyncObject() const; //Returns the value of InAppFolderSyncObject
    inline void SetInAppFolderSyncObject(bool value); //Sets the value of the InAppFolderSyncObject property

    /*
    Property IsSharePointFolder

    For more information, see help context 2014 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSharePointFolder() const; //Returns the value of IsSharePointFolder

    /*
    Property Items

    For more information, see help context 1990 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Items* Items() const; //Returns the value of Items

    /*
    Property MAPIOBJECT

    For more information, see help context 2012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Name

    For more information, see help context 1991 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 1984 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2019 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 1983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowAsOutlookAB

    For more information, see help context 2005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowAsOutlookAB() const; //Returns the value of ShowAsOutlookAB
    inline void SetShowAsOutlookAB(bool value); //Sets the value of the ShowAsOutlookAB property

    /*
    Property ShowItemCount

    For more information, see help context 2015 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlShowItemCount ShowItemCount() const; //Returns the value of ShowItemCount
    inline void SetShowItemCount(Outlook::OlShowItemCount value); //Sets the value of the ShowItemCount property

    /*
    Property Store

    For more information, see help context 2016 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* Store() const; //Returns the value of Store

    /*
    Property StoreID

    For more information, see help context 1992 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StoreID() const; //Returns the value of StoreID

    /*
    Property UnReadItemCount

    For more information, see help context 1993 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int UnReadItemCount() const; //Returns the value of UnReadItemCount

    /*
    Property UserDefinedProperties

    For more information, see help context 2021 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperties* UserDefinedProperties() const; //Returns the value of UserDefinedProperties

    /*
    Property UserPermissions

    For more information, see help context 1999 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* UserPermissions() const; //Returns the value of UserPermissions

    /*
    Property Views

    For more information, see help context 2011 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Views* Views() const; //Returns the value of Views

    /*
    Property WebViewAllowNavigation

    For more information, see help context 2002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewAllowNavigation() const; //Returns the value of WebViewAllowNavigation
    inline void SetWebViewAllowNavigation(bool value); //Sets the value of the WebViewAllowNavigation property

    /*
    Property WebViewOn

    For more information, see help context 2000 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewOn() const; //Returns the value of WebViewOn
    inline void SetWebViewOn(bool value); //Sets the value of the WebViewOn property

    /*
    Property WebViewURL

    For more information, see help context 2001 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString WebViewURL() const; //Returns the value of WebViewURL
    inline void SetWebViewURL(const QString& value); //Sets the value of the WebViewURL property

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites();

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI);

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI, const QVariant& Name);

    /*
    Method AddToPFFavorites

    For more information, see help context 2003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToPFFavorites();

    /*
    Method CopyTo

    For more information, see help context 1994 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* CopyTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method Delete

    For more information, see help context 1995 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1996 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method GetCalendarExporter

    For more information, see help context 2020 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::CalendarSharing* GetCalendarExporter();

    /*
    Method GetCustomIcon

    For more information, see help context 3316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap GetCustomIcon();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer(const QVariant& DisplayMode);

    /*
    Method GetStorage

    For more information, see help context 2017 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_StorageItem* GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter, const QVariant& TableContents);

    /*
    Method MoveTo

    For more information, see help context 1998 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MoveTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method SetCustomIcon

    For more information, see help context 3317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetCustomIcon(const QPixmap& Picture);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Folders : public QAxObject
{
public:
    explicit _Folders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 39 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 40 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 43 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 42 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 45 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 41 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 46 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 46 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Add(const QString& Name, const QVariant& Type);

    /*
    Method GetFirst

    For more information, see help context 47 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFirst();

    /*
    Method GetLast

    For more information, see help context 48 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetLast();

    /*
    Method GetNext

    For more information, see help context 49 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 50 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetPrevious();

    /*
    Method Item

    For more information, see help context 44 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 51 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Items : public QAxObject
{
public:
    explicit _Items(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 53 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 54 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 57 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property IncludeRecurrences

    For more information, see help context 60 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeRecurrences() const; //Returns the value of IncludeRecurrences
    inline void SetIncludeRecurrences(bool value); //Sets the value of the IncludeRecurrences property

    /*
    Property Parent

    For more information, see help context 56 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 59 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 55 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 61 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add();

    /*
    Method Add

    For more information, see help context 61 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add(const QVariant& Type);

    /*
    Method Find

    For more information, see help context 62 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Find(const QString& Filter);

    /*
    Method FindNext

    For more information, see help context 63 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* FindNext();

    /*
    Method GetFirst

    For more information, see help context 64 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetFirst();

    /*
    Method GetLast

    For more information, see help context 65 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetLast();

    /*
    Method GetNext

    For more information, see help context 66 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 67 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetPrevious();

    /*
    Method Item

    For more information, see help context 58 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 68 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

    /*
    Method ResetColumns

    For more information, see help context 69 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetColumns();

    /*
    Method Restrict

    For more information, see help context 70 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Items* Restrict(const QString& Filter);

    /*
    Method SetColumns

    For more information, see help context 71 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetColumns(const QString& Columns);

    /*
    Method Sort

    For more information, see help context 72 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property);

    /*
    Method Sort

    For more information, see help context 72 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Explorer : public QAxObject
{
public:
    explicit _Explorer(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AccountSelector

    For more information, see help context 3553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AccountSelector* AccountSelector() const; //Returns the value of AccountSelector

    /*
    Property ActiveInlineResponse

    For more information, see help context 3595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveInlineResponse() const; //Returns the value of ActiveInlineResponse

    /*
    Property ActiveInlineResponseWordEditor

    For more information, see help context 3597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveInlineResponseWordEditor() const; //Returns the value of ActiveInlineResponseWordEditor

    /*
    Property Application

    For more information, see help context 2757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AttachmentSelection

    For more information, see help context 3479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AttachmentSelection* AttachmentSelection() const; //Returns the value of AttachmentSelection

    /*
    Property Caption

    For more information, see help context 2765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 2758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CommandBars

    For more information, see help context 2761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::CommandBars* CommandBars() const; //Returns the value of CommandBars

    /*
    Property CurrentFolder

    For more information, see help context 2762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* CurrentFolder() const; //Returns the value of CurrentFolder
    inline void SetCurrentFolder(Outlook::MAPIFolder* value); //Sets the value of the CurrentFolder property

    /*
    Property CurrentView

    For more information, see help context 2766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant CurrentView() const; //Returns the value of CurrentView
    inline void SetCurrentView(const QVariant& value); //Sets the value of the CurrentView property

    /*
    Property DisplayMode

    For more information, see help context 3600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayMode DisplayMode() const; //Returns the value of DisplayMode

    /*
    Property HTMLDocument

    For more information, see help context 2778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* HTMLDocument() const; //Returns the value of HTMLDocument

    /*
    Property Height

    For more information, see help context 2767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left

    For more information, see help context 2768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property NavigationPane

    For more information, see help context 2782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationPane* NavigationPane() const; //Returns the value of NavigationPane

    /*
    Property Panes

    For more information, see help context 2769 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Panes* Panes() const; //Returns the value of Panes

    /*
    Property Parent

    For more information, see help context 2760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PreviewPane

    For more information, see help context 3639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_PreviewPane* PreviewPane() const; //Returns the value of PreviewPane

    /*
    Property Selection

    For more information, see help context 2770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Selection* Selection() const; //Returns the value of Selection

    /*
    Property Session

    For more information, see help context 2759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Top

    For more information, see help context 2771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Views

    For more information, see help context 2777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Views() const; //Returns the value of Views

    /*
    Property Width

    For more information, see help context 2772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property WindowState

    For more information, see help context 2773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlWindowState WindowState() const; //Returns the value of WindowState
    inline void SetWindowState(Outlook::OlWindowState value); //Sets the value of the WindowState property

    /*
    Method Activate

    For more information, see help context 2774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Activate();

    /*
    Method AddToSelection

    For more information, see help context 3309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToSelection(IDispatch* Item);

    /*
    Method ClearSearch

    For more information, see help context 2783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearSearch();

    /*
    Method ClearSelection

    For more information, see help context 3312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearSelection();

    /*
    Method Close

    For more information, see help context 2763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close();

    /*
    Method DeselectFolder

    For more information, see help context 2780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeselectFolder(Outlook::MAPIFolder* Folder);

    /*
    Method Display

    For more information, see help context 2764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method IsFolderSelected

    For more information, see help context 2781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsFolderSelected(Outlook::MAPIFolder* Folder);

    /*
    Method IsItemSelectableInView

    For more information, see help context 3308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsItemSelectableInView(IDispatch* Item);

    /*
    Method IsPaneVisible

    For more information, see help context 2775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsPaneVisible(Outlook::OlPane Pane);

    /*
    Method RemoveFromSelection

    For more information, see help context 3310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveFromSelection(IDispatch* Item);

    /*
    Method Search

    For more information, see help context 2784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Search(const QString& Query, Outlook::OlSearchScope SearchScope);

    /*
    Method SelectAllItems

    For more information, see help context 3311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SelectAllItems();

    /*
    Method SelectFolder

    For more information, see help context 2779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SelectFolder(Outlook::MAPIFolder* Folder);

    /*
    Method ShowPane

    For more information, see help context 2776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowPane(Outlook::OlPane Pane, bool Visible);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Panes : public QAxObject
{
public:
    explicit Panes(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 74 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 75 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 78 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 77 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 76 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 79 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationPane : public QAxObject
{
public:
    explicit _NavigationPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentModule

    For more information, see help context 2791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModule* CurrentModule() const; //Returns the value of CurrentModule
    inline void SetCurrentModule(Outlook::NavigationModule* value); //Sets the value of the CurrentModule property

    /*
    Property DisplayedModuleCount

    For more information, see help context 2792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DisplayedModuleCount() const; //Returns the value of DisplayedModuleCount
    inline void SetDisplayedModuleCount(int value); //Sets the value of the DisplayedModuleCount property

    /*
    Property IsCollapsed

    For more information, see help context 2790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsCollapsed() const; //Returns the value of IsCollapsed
    inline void SetIsCollapsed(bool value); //Sets the value of the IsCollapsed property

    /*
    Property Modules

    For more information, see help context 2793 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModules* Modules() const; //Returns the value of Modules

    /*
    Property Parent

    For more information, see help context 2789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationModule : public QAxObject
{
public:
    explicit _NavigationModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationModuleType

    For more information, see help context 3241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationModules : public QAxObject
{
public:
    explicit _NavigationModules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2795 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetNavigationModule

    For more information, see help context 3240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModule* GetNavigationModule(Outlook::OlNavigationModuleType ModuleType);

    /*
    Method Item

    For more information, see help context 2800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationModule* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AccountSelector : public QAxObject
{
public:
    explicit _AccountSelector(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 3452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SelectedAccount

    For more information, see help context 3453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Account* SelectedAccount() const; //Returns the value of SelectedAccount

    /*
    Property Session

    For more information, see help context 3451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Account : public QAxObject
{
public:
    explicit _Account(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AccountType

    For more information, see help context 740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAccountType AccountType() const; //Returns the value of AccountType

    /*
    Property Application

    For more information, see help context 736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoDiscoverConnectionMode

    For more information, see help context 3436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoDiscoverConnectionMode AutoDiscoverConnectionMode() const; //Returns the value of AutoDiscoverConnectionMode

    /*
    Property AutoDiscoverXml

    For more information, see help context 3422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AutoDiscoverXml() const; //Returns the value of AutoDiscoverXml

    /*
    Property Class

    For more information, see help context 737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentUser

    For more information, see help context 3381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CurrentUser() const; //Returns the value of CurrentUser

    /*
    Property DeliveryStore

    For more information, see help context 3423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* DeliveryStore() const; //Returns the value of DeliveryStore

    /*
    Property DisplayName

    For more information, see help context 741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property ExchangeConnectionMode

    For more information, see help context 3424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeConnectionMode ExchangeConnectionMode() const; //Returns the value of ExchangeConnectionMode

    /*
    Property ExchangeMailboxServerName

    For more information, see help context 3550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerName() const; //Returns the value of ExchangeMailboxServerName

    /*
    Property ExchangeMailboxServerVersion

    For more information, see help context 3551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerVersion() const; //Returns the value of ExchangeMailboxServerVersion

    /*
    Property IOlkAccount

    For more information, see help context 3594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* IOlkAccount() const; //Returns the value of IOlkAccount

    /*
    Property Parent

    For more information, see help context 739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SmtpAddress

    For more information, see help context 743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SmtpAddress() const; //Returns the value of SmtpAddress

    /*
    Property UserName

    For more information, see help context 742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString UserName() const; //Returns the value of UserName

    /*
    Method GetAddressEntryFromID

    For more information, see help context 3427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetAddressEntryFromID(const QString& ID);

    /*
    Method GetRecipientFromID

    For more information, see help context 3428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetRecipientFromID(const QString& EntryID);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Store : public QAxObject
{
public:
    explicit _Store(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 3512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Categories* Categories() const; //Returns the value of Categories

    /*
    Property Class

    For more information, see help context 797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayName

    For more information, see help context 800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property ExchangeStoreType

    For more information, see help context 802 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeStoreType ExchangeStoreType() const; //Returns the value of ExchangeStoreType

    /*
    Property FilePath

    For more information, see help context 803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FilePath() const; //Returns the value of FilePath

    /*
    Property IsCachedExchange

    For more information, see help context 804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsCachedExchange() const; //Returns the value of IsCachedExchange

    /*
    Property IsConversationEnabled

    For more information, see help context 3518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConversationEnabled() const; //Returns the value of IsConversationEnabled

    /*
    Property IsDataFileStore

    For more information, see help context 805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsDataFileStore() const; //Returns the value of IsDataFileStore

    /*
    Property IsInstantSearchEnabled

    For more information, see help context 3264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsInstantSearchEnabled() const; //Returns the value of IsInstantSearchEnabled

    /*
    Property IsOpen

    For more information, see help context 808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsOpen() const; //Returns the value of IsOpen

    /*
    Property MAPIOBJECT

    For more information, see help context 809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Parent

    For more information, see help context 799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 811 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StoreID

    For more information, see help context 801 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StoreID() const; //Returns the value of StoreID

    /*
    Method CreateUnifiedGroup

    For more information, see help context 3631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CreateUnifiedGroup(const QString& Name, const QString& Alias, const QString& Description, bool FAutoSubscribeMembers, Outlook::OlUnifiedGroupType GroupType);

    /*
    Method DeleteUnifiedGroup

    For more information, see help context 3632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeleteUnifiedGroup(const QString& GroupSmtpAddress);

    /*
    Method GetDefaultFolder

    For more information, see help context 3437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetDefaultFolder(Outlook::OlDefaultFolders FolderType);

    /*
    Method GetRootFolder

    For more information, see help context 806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetRootFolder();

    /*
    Method GetRules

    For more information, see help context 810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Rules* GetRules();

    /*
    Method GetSearchFolders

    For more information, see help context 807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* GetSearchFolders();

    /*
    Method GetSpecialFolder

    For more information, see help context 812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetSpecialFolder(Outlook::OlSpecialFolders FolderType);

    /*
    Method RefreshQuotaDisplay

    For more information, see help context 3380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshQuotaDisplay();

    /*
    Method VerifyGroupFollowInfo

    For more information, see help context 3676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool VerifyGroupFollowInfo(int GroupFollowOption);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Rules : public QAxObject
{
public:
    explicit _Rules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2154 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2155 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2158 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property IsRssRulesProcessingEnabled

    For more information, see help context 3249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRssRulesProcessingEnabled() const; //Returns the value of IsRssRulesProcessingEnabled
    inline void SetIsRssRulesProcessingEnabled(bool value); //Sets the value of the IsRssRulesProcessingEnabled property

    /*
    Property Parent

    For more information, see help context 2157 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2156 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Create

    For more information, see help context 2160 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Rule* Create(const QString& Name, Outlook::OlRuleType RuleType);

    /*
    Method Item

    For more information, see help context 2159 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Rule* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2162 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method Save

    For more information, see help context 2161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method Save

    For more information, see help context 2161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save(const QVariant& ShowProgress);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Rule : public QAxObject
{
public:
    explicit _Rule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 2174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleActions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 2164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Conditions

    For more information, see help context 2175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleConditions* Conditions() const; //Returns the value of Conditions

    /*
    Property Enabled

    For more information, see help context 2171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Exceptions

    For more information, see help context 2176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleConditions* Exceptions() const; //Returns the value of Exceptions

    /*
    Property ExecutionOrder

    For more information, see help context 2169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ExecutionOrder() const; //Returns the value of ExecutionOrder
    inline void SetExecutionOrder(int value); //Sets the value of the ExecutionOrder property

    /*
    Property IsLocalRule

    For more information, see help context 2172 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsLocalRule() const; //Returns the value of IsLocalRule

    /*
    Property Name

    For more information, see help context 2168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RuleType

    For more information, see help context 2170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleType RuleType() const; //Returns the value of RuleType

    /*
    Property Session

    For more information, see help context 2166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute();

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders, const QVariant& RuleExecuteOption);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _RuleActions : public QAxObject
{
public:
    explicit _RuleActions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2178 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssignToCategory

    For more information, see help context 2196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AssignToCategoryRuleAction* AssignToCategory() const; //Returns the value of AssignToCategory

    /*
    Property CC

    For more information, see help context 2192 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* CC() const; //Returns the value of CC

    /*
    Property Class

    For more information, see help context 2179 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ClearCategories

    For more information, see help context 3233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* ClearCategories() const; //Returns the value of ClearCategories

    /*
    Property CopyToFolder

    For more information, see help context 2184 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MoveOrCopyRuleAction* CopyToFolder() const; //Returns the value of CopyToFolder

    /*
    Property Count

    For more information, see help context 2182 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Delete

    For more information, see help context 2186 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* Delete() const; //Returns the value of Delete

    /*
    Property DeletePermanently

    For more information, see help context 2185 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* DeletePermanently() const; //Returns the value of DeletePermanently

    /*
    Property DesktopAlert

    For more information, see help context 2187 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* DesktopAlert() const; //Returns the value of DesktopAlert

    /*
    Property Forward

    For more information, see help context 2193 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* Forward() const; //Returns the value of Forward

    /*
    Property ForwardAsAttachment

    For more information, see help context 2194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* ForwardAsAttachment() const; //Returns the value of ForwardAsAttachment

    /*
    Property MarkAsTask

    For more information, see help context 2198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MarkAsTaskRuleAction* MarkAsTask() const; //Returns the value of MarkAsTask

    /*
    Property MoveToFolder

    For more information, see help context 2191 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MoveOrCopyRuleAction* MoveToFolder() const; //Returns the value of MoveToFolder

    /*
    Property NewItemAlert

    For more information, see help context 2199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NewItemAlertRuleAction* NewItemAlert() const; //Returns the value of NewItemAlert

    /*
    Property NotifyDelivery

    For more information, see help context 2188 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* NotifyDelivery() const; //Returns the value of NotifyDelivery

    /*
    Property NotifyRead

    For more information, see help context 2189 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* NotifyRead() const; //Returns the value of NotifyRead

    /*
    Property Parent

    For more information, see help context 2181 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PlaySound

    For more information, see help context 2197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PlaySoundRuleAction* PlaySound() const; //Returns the value of PlaySound

    /*
    Property Redirect

    For more information, see help context 2195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* Redirect() const; //Returns the value of Redirect

    /*
    Property Session

    For more information, see help context 2180 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Stop

    For more information, see help context 2190 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* Stop() const; //Returns the value of Stop

    /*
    Method Item

    For more information, see help context 2183 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_RuleAction* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _RuleAction : public QAxObject
{
public:
    explicit _RuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2206 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2205 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MoveOrCopyRuleAction : public QAxObject
{
public:
    explicit _MoveOrCopyRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2208 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Folder

    For more information, see help context 2214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder
    inline void SetFolder(Outlook::MAPIFolder* value); //Sets the value of the Folder property

    /*
    Property Parent

    For more information, see help context 2211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SendRuleAction : public QAxObject
{
public:
    explicit _SendRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 2222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Session

    For more information, see help context 2218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Recipients : public QAxObject
{
public:
    explicit Recipients(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* Add(const QString& Name);

    /*
    Method Item

    For more information, see help context 231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

    /*
    Method ResolveAll

    For more information, see help context 234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ResolveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AssignToCategoryRuleAction : public QAxObject
{
public:
    explicit _AssignToCategoryRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 2269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Categories() const; //Returns the value of Categories
    inline void SetCategories(const QVariant& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 2264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _PlaySoundRuleAction : public QAxObject
{
public:
    explicit _PlaySoundRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FilePath

    For more information, see help context 2277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FilePath() const; //Returns the value of FilePath
    inline void SetFilePath(const QString& value); //Sets the value of the FilePath property

    /*
    Property Parent

    For more information, see help context 2274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MarkAsTaskRuleAction : public QAxObject
{
public:
    explicit _MarkAsTaskRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FlagTo

    For more information, see help context 2285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagTo() const; //Returns the value of FlagTo
    inline void SetFlagTo(const QString& value); //Sets the value of the FlagTo property

    /*
    Property MarkInterval

    For more information, see help context 2286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMarkInterval MarkInterval() const; //Returns the value of MarkInterval
    inline void SetMarkInterval(Outlook::OlMarkInterval value); //Sets the value of the MarkInterval property

    /*
    Property Parent

    For more information, see help context 2282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NewItemAlertRuleAction : public QAxObject
{
public:
    explicit _NewItemAlertRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property ActionType

    For more information, see help context 2293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2289 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2290 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Text

    For more information, see help context 2294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _RuleConditions : public QAxObject
{
public:
    explicit _RuleConditions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Account

    For more information, see help context 2310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AccountRuleCondition* Account() const; //Returns the value of Account

    /*
    Property AnyCategory

    For more information, see help context 3234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* AnyCategory() const; //Returns the value of AnyCategory

    /*
    Property Application

    For more information, see help context 2296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Body

    For more information, see help context 2311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* Body() const; //Returns the value of Body

    /*
    Property BodyOrSubject

    For more information, see help context 2312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* BodyOrSubject() const; //Returns the value of BodyOrSubject

    /*
    Property CC

    For more information, see help context 2302 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* CC() const; //Returns the value of CC

    /*
    Property Category

    For more information, see help context 2313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::CategoryRuleCondition* Category() const; //Returns the value of Category

    /*
    Property Class

    For more information, see help context 2297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2300 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property FormName

    For more information, see help context 2314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormNameRuleCondition* FormName() const; //Returns the value of FormName

    /*
    Property From

    For more information, see help context 2315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ToOrFromRuleCondition* From() const; //Returns the value of From

    /*
    Property FromAnyRSSFeed

    For more information, see help context 3250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* FromAnyRSSFeed() const; //Returns the value of FromAnyRSSFeed

    /*
    Property FromRssFeed

    For more information, see help context 3251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FromRssFeedRuleCondition* FromRssFeed() const; //Returns the value of FromRssFeed

    /*
    Property HasAttachment

    For more information, see help context 2303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* HasAttachment() const; //Returns the value of HasAttachment

    /*
    Property Importance

    For more information, see help context 2304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ImportanceRuleCondition* Importance() const; //Returns the value of Importance

    /*
    Property MeetingInviteOrUpdate

    For more information, see help context 2305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* MeetingInviteOrUpdate() const; //Returns the value of MeetingInviteOrUpdate

    /*
    Property MessageHeader

    For more information, see help context 2316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* MessageHeader() const; //Returns the value of MessageHeader

    /*
    Property NotTo

    For more information, see help context 2306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* NotTo() const; //Returns the value of NotTo

    /*
    Property OnLocalMachine

    For more information, see help context 2322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnLocalMachine() const; //Returns the value of OnLocalMachine

    /*
    Property OnOtherMachine

    For more information, see help context 2323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnOtherMachine() const; //Returns the value of OnOtherMachine

    /*
    Property OnlyToMe

    For more information, see help context 2307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnlyToMe() const; //Returns the value of OnlyToMe

    /*
    Property Parent

    For more information, see help context 2299 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RecipientAddress

    For more information, see help context 2317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressRuleCondition* RecipientAddress() const; //Returns the value of RecipientAddress

    /*
    Property SenderAddress

    For more information, see help context 2318 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressRuleCondition* SenderAddress() const; //Returns the value of SenderAddress

    /*
    Property SenderInAddressList

    For more information, see help context 2319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SenderInAddressListRuleCondition* SenderInAddressList() const; //Returns the value of SenderInAddressList

    /*
    Property Sensitivity

    For more information, see help context 3650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SensitivityRuleCondition* Sensitivity() const; //Returns the value of Sensitivity

    /*
    Property SentTo

    For more information, see help context 2321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ToOrFromRuleCondition* SentTo() const; //Returns the value of SentTo

    /*
    Property Session

    For more information, see help context 2298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Subject

    For more information, see help context 2320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* Subject() const; //Returns the value of Subject

    /*
    Property ToMe

    For more information, see help context 2308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* ToMe() const; //Returns the value of ToMe

    /*
    Property ToOrCc

    For more information, see help context 2309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* ToOrCc() const; //Returns the value of ToOrCc

    /*
    Method Item

    For more information, see help context 2301 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_RuleCondition* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _RuleCondition : public QAxObject
{
public:
    explicit _RuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ImportanceRuleCondition : public QAxObject
{
public:
    explicit _ImportanceRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Importance

    For more information, see help context 2338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property Parent

    For more information, see help context 2335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AccountRuleCondition : public QAxObject
{
public:
    explicit _AccountRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Account

    For more information, see help context 2383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* Account() const; //Returns the value of Account
    inline void SetAccount(Outlook::Account* value); //Sets the value of the Account property

    /*
    Property Application

    For more information, see help context 2377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TextRuleCondition : public QAxObject
{
public:
    explicit _TextRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2472 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2477 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2476 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Text

    For more information, see help context 2478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Text() const; //Returns the value of Text
    inline void SetText(const QVariant& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _CategoryRuleCondition : public QAxObject
{
public:
    explicit _CategoryRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 2446 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Categories() const; //Returns the value of Categories
    inline void SetCategories(const QVariant& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 2441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _FormNameRuleCondition : public QAxObject
{
public:
    explicit _FormNameRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2448 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FormName

    For more information, see help context 2454 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant FormName() const; //Returns the value of FormName
    inline void SetFormName(const QVariant& value); //Sets the value of the FormName property

    /*
    Property Parent

    For more information, see help context 2451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ToOrFromRuleCondition : public QAxObject
{
public:
    explicit _ToOrFromRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2456 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 2462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Session

    For more information, see help context 2458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AddressRuleCondition : public QAxObject
{
public:
    explicit _AddressRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Address

    For more information, see help context 2955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Address() const; //Returns the value of Address
    inline void SetAddress(const QVariant& value); //Sets the value of the Address property

    /*
    Property Application

    For more information, see help context 2949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SenderInAddressListRuleCondition : public QAxObject
{
public:
    explicit _SenderInAddressListRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AddressList

    For more information, see help context 2470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* AddressList() const; //Returns the value of AddressList
    inline void SetAddressList(Outlook::AddressList* value); //Sets the value of the AddressList property

    /*
    Property Application

    For more information, see help context 2464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AddressList : public QAxObject
{
public:
    explicit AddressList(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AddressEntries

    For more information, see help context 2027 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* AddressEntries() const; //Returns the value of AddressEntries

    /*
    Property AddressListType

    For more information, see help context 2033 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressListType AddressListType() const; //Returns the value of AddressListType

    /*
    Property Application

    For more information, see help context 2023 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2024 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ID

    For more information, see help context 2028 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property Index

    For more information, see help context 2029 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Index() const; //Returns the value of Index

    /*
    Property IsInitialAddressList

    For more information, see help context 2035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsInitialAddressList() const; //Returns the value of IsInitialAddressList

    /*
    Property IsReadOnly

    For more information, see help context 2030 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsReadOnly() const; //Returns the value of IsReadOnly

    /*
    Property Name

    For more information, see help context 2031 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 2026 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property ResolutionOrder

    For more information, see help context 2034 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ResolutionOrder() const; //Returns the value of ResolutionOrder

    /*
    Property Session

    For more information, see help context 2025 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetContactsFolder

    For more information, see help context 2032 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetContactsFolder();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _FromRssFeedRuleCondition : public QAxObject
{
public:
    explicit _FromRssFeedRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 3258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 3257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FromRssFeed

    For more information, see help context 3259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant FromRssFeed() const; //Returns the value of FromRssFeed
    inline void SetFromRssFeed(const QVariant& value); //Sets the value of the FromRssFeed property

    /*
    Property Parent

    For more information, see help context 3256 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SensitivityRuleCondition : public QAxObject
{
public:
    explicit _SensitivityRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 3648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 3647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 3646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Sensitivity

    For more information, see help context 3649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 3645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Categories : public QAxObject
{
public:
    explicit _Categories(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name, const QVariant& Color);

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name, const QVariant& Color, const QVariant& ShortcutKey);

    /*
    Method Item

    For more information, see help context 2436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Category* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2438 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Category : public QAxObject
{
public:
    explicit _Category(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CategoryBorderColor

    For more information, see help context 3266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryBorderColor() const; //Returns the value of CategoryBorderColor

    /*
    Property CategoryGradientBottomColor

    For more information, see help context 3268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryGradientBottomColor() const; //Returns the value of CategoryGradientBottomColor

    /*
    Property CategoryGradientTopColor

    For more information, see help context 3267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryGradientTopColor() const; //Returns the value of CategoryGradientTopColor

    /*
    Property CategoryID

    For more information, see help context 2429 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CategoryID() const; //Returns the value of CategoryID

    /*
    Property Class

    For more information, see help context 2423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 2427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlCategoryColor value); //Sets the value of the Color property

    /*
    Property Name

    For more information, see help context 2426 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2425 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShortcutKey

    For more information, see help context 2428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryShortcutKey ShortcutKey() const; //Returns the value of ShortcutKey
    inline void SetShortcutKey(Outlook::OlCategoryShortcutKey value); //Sets the value of the ShortcutKey property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _PreviewPane : public QAxObject
{
public:
    explicit _PreviewPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 3637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property WordEditor

    For more information, see help context 3640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* WordEditor() const; //Returns the value of WordEditor

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT View : public QAxObject
{
public:
    explicit View(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2480 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 2489 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2490 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 2491 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2483 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2492 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 2493 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 2494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2484 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2486 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2487 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2488 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Views : public QAxObject
{
public:
    explicit _Views(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Add(const QString& Name, Outlook::OlViewType ViewType);

    /*
    Method Add

    For more information, see help context 547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Add(const QString& Name, Outlook::OlViewType ViewType, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Item

    For more information, see help context 546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method _NewEnum

    For more information, see help context 549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* _NewEnum();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _StorageItem : public QAxObject
{
public:
    explicit _StorageItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 2147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property Body

    For more information, see help context 2146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Class

    For more information, see help context 2138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CreationTime

    For more information, see help context 3237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property Creator

    For more information, see help context 2152 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Creator() const; //Returns the value of Creator
    inline void SetCreator(const QString& value); //Sets the value of the Creator property

    /*
    Property EntryID

    For more information, see help context 2143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property LastModificationTime

    For more information, see help context 2142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Parent

    For more information, see help context 2140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2150 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 2148 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 2151 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UserProperties

    For more information, see help context 2149 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Delete

    For more information, see help context 2145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Save

    For more information, see help context 2144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Table : public QAxObject
{
public:
    explicit _Table(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Columns

    For more information, see help context 2236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Columns* Columns() const; //Returns the value of Columns

    /*
    Property EndOfTable

    For more information, see help context 2237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EndOfTable() const; //Returns the value of EndOfTable

    /*
    Property Parent

    For more information, see help context 2227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method FindNextRow

    For more information, see help context 2229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* FindNextRow();

    /*
    Method FindRow

    For more information, see help context 2228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* FindRow(const QString& Filter);

    /*
    Method GetArray

    For more information, see help context 2230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetArray(int MaxRows);

    /*
    Method GetNextRow

    For more information, see help context 2231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* GetNextRow();

    /*
    Method GetRowCount

    For more information, see help context 2232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int GetRowCount();

    /*
    Method MoveToStart

    For more information, see help context 2233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MoveToStart();

    /*
    Method Restrict

    For more information, see help context 2234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* Restrict(const QString& Filter);

    /*
    Method Sort

    For more information, see help context 2235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& SortProperty);

    /*
    Method Sort

    For more information, see help context 2235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& SortProperty, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Row : public QAxObject
{
public:
    explicit _Row(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 2242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method BinaryToString

    For more information, see help context 2243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BinaryToString(const QVariant& Index);

    /*
    Method GetValues

    For more information, see help context 2244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetValues();

    /*
    Method Item

    For more information, see help context 2245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Item(const QVariant& Index);

    /*
    Method LocalTimeToUTC

    For more information, see help context 2246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LocalTimeToUTC(const QVariant& Index);

    /*
    Method UTCToLocalTime

    For more information, see help context 2247 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime UTCToLocalTime(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Columns : public QAxObject
{
public:
    explicit _Columns(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2735 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Column* Add(const QString& Name);

    /*
    Method Item

    For more information, see help context 2740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Column* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Column : public QAxObject
{
public:
    explicit _Column(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 2748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _CalendarSharing : public QAxObject
{
public:
    explicit _CalendarSharing(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CalendarDetail

    For more information, see help context 2413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCalendarDetail CalendarDetail() const; //Returns the value of CalendarDetail
    inline void SetCalendarDetail(Outlook::OlCalendarDetail value); //Sets the value of the CalendarDetail property

    /*
    Property Class

    For more information, see help context 2408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property EndDate

    For more information, see help context 2414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndDate() const; //Returns the value of EndDate
    inline void SetEndDate(const QDateTime& value); //Sets the value of the EndDate property

    /*
    Property Folder

    For more information, see help context 2415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder

    /*
    Property IncludeAttachments

    For more information, see help context 2416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeAttachments() const; //Returns the value of IncludeAttachments
    inline void SetIncludeAttachments(bool value); //Sets the value of the IncludeAttachments property

    /*
    Property IncludePrivateDetails

    For more information, see help context 2417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludePrivateDetails() const; //Returns the value of IncludePrivateDetails
    inline void SetIncludePrivateDetails(bool value); //Sets the value of the IncludePrivateDetails property

    /*
    Property IncludeWholeCalendar

    For more information, see help context 2420 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeWholeCalendar() const; //Returns the value of IncludeWholeCalendar
    inline void SetIncludeWholeCalendar(bool value); //Sets the value of the IncludeWholeCalendar property

    /*
    Property Parent

    For more information, see help context 2410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RestrictToWorkingHours

    For more information, see help context 2418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RestrictToWorkingHours() const; //Returns the value of RestrictToWorkingHours
    inline void SetRestrictToWorkingHours(bool value); //Sets the value of the RestrictToWorkingHours property

    /*
    Property Session

    For more information, see help context 2409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StartDate

    For more information, see help context 2419 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartDate() const; //Returns the value of StartDate
    inline void SetStartDate(const QDateTime& value); //Sets the value of the StartDate property

    /*
    Method ForwardAsICal

    For more information, see help context 2412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsICal(Outlook::OlCalendarMailFormat MailFormat);

    /*
    Method SaveAsICal

    For more information, see help context 2411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAsICal(const QString& Path);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MailItem : public QAxObject
{
public:
    explicit _MailItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AlternateRecipientAllowed

    For more information, see help context 1328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlternateRecipientAllowed() const; //Returns the value of AlternateRecipientAllowed
    inline void SetAlternateRecipientAllowed(bool value); //Sets the value of the AlternateRecipientAllowed property

    /*
    Property Application

    For more information, see help context 1290 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 1329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property AutoResolvedWinner

    For more information, see help context 1381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BCC

    For more information, see help context 1330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BCC() const; //Returns the value of BCC
    inline void SetBCC(const QString& value); //Sets the value of the BCC property

    /*
    Property BillingInformation

    For more information, see help context 1296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 1372 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property CC

    For more information, see help context 1331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CC() const; //Returns the value of CC
    inline void SetCC(const QString& value); //Sets the value of the CC property

    /*
    Property Categories

    For more information, see help context 1298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1299 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1300 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1301 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1302 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 1332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 1333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 1373 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EnableSharedAttachments

    For more information, see help context 1385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableSharedAttachments() const; //Returns the value of EnableSharedAttachments
    inline void SetEnableSharedAttachments(bool value); //Sets the value of the EnableSharedAttachments property

    /*
    Property EntryID

    For more information, see help context 1303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 1335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 1379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 1336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 1337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 1304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 1338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property HasCoverSheet

    For more information, see help context 1380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasCoverSheet() const; //Returns the value of HasCoverSheet
    inline void SetHasCoverSheet(bool value); //Sets the value of the HasCoverSheet property

    /*
    Property Importance

    For more information, see help context 1306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1375 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsIPFax

    For more information, see help context 1378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsIPFax() const; //Returns the value of IsIPFax
    inline void SetIsIPFax(bool value); //Sets the value of the IsIPFax property

    /*
    Property IsMarkedAsTask

    For more information, see help context 3041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1371 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1370 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1376 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 1339 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Permission

    For more information, see help context 1386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermission Permission() const; //Returns the value of Permission
    inline void SetPermission(Outlook::OlPermission value); //Sets the value of the Permission property

    /*
    Property PermissionService

    For more information, see help context 1387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermissionService PermissionService() const; //Returns the value of PermissionService
    inline void SetPermissionService(Outlook::OlPermissionService value); //Sets the value of the PermissionService property

    /*
    Property PermissionTemplateGuid

    For more information, see help context 3507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PermissionTemplateGuid() const; //Returns the value of PermissionTemplateGuid
    inline void SetPermissionTemplateGuid(const QString& value); //Sets the value of the PermissionTemplateGuid property

    /*
    Property PropertyAccessor

    For more information, see help context 1388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReadReceiptRequested

    For more information, see help context 1340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReadReceiptRequested() const; //Returns the value of ReadReceiptRequested
    inline void SetReadReceiptRequested(bool value); //Sets the value of the ReadReceiptRequested property

    /*
    Property ReceivedByEntryID

    For more information, see help context 1341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 1342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedOnBehalfOfEntryID

    For more information, see help context 1343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfEntryID() const; //Returns the value of ReceivedOnBehalfOfEntryID

    /*
    Property ReceivedOnBehalfOfName

    For more information, see help context 1344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfName() const; //Returns the value of ReceivedOnBehalfOfName

    /*
    Property ReceivedTime

    For more information, see help context 1345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property RecipientReassignmentProhibited

    For more information, see help context 1346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RecipientReassignmentProhibited() const; //Returns the value of RecipientReassignmentProhibited
    inline void SetRecipientReassignmentProhibited(bool value); //Sets the value of the RecipientReassignmentProhibited property

    /*
    Property Recipients

    For more information, see help context 1347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property RemoteStatus

    For more information, see help context 1353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus RemoteStatus() const; //Returns the value of RemoteStatus
    inline void SetRemoteStatus(Outlook::OlRemoteStatus value); //Sets the value of the RemoteStatus property

    /*
    Property ReplyRecipientNames

    For more information, see help context 1354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 1355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RetentionExpirationDate

    For more information, see help context 3559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 1356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 1314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 1390 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sender

    For more information, see help context 3488 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Sender() const; //Returns the value of Sender
    inline void SetSender(Outlook::AddressEntry* value); //Sets the value of the Sender property

    /*
    Property SenderEmailAddress

    For more information, see help context 1383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 1358 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 1359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property SentOnBehalfOfName

    For more information, see help context 1360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SentOnBehalfOfName() const; //Returns the value of SentOnBehalfOfName
    inline void SetSentOnBehalfOfName(const QString& value); //Sets the value of the SentOnBehalfOfName property

    /*
    Property Session

    For more information, see help context 1292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 1361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property TaskCompletedDate

    For more information, see help context 1395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property To

    For more information, see help context 1362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1318 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Property VotingOptions

    For more information, see help context 1363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString VotingOptions() const; //Returns the value of VotingOptions
    inline void SetVotingOptions(const QString& value); //Sets the value of the VotingOptions property

    /*
    Property VotingResponse

    For more information, see help context 1364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString VotingResponse() const; //Returns the value of VotingResponse
    inline void SetVotingResponse(const QString& value); //Sets the value of the VotingResponse property

    /*
    Method AddBusinessCard

    For more information, see help context 1389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCard(Outlook::ContactItem* contact);

    /*
    Method ClearConversationIndex

    For more information, see help context 1365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3039 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1367 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1369 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1374 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Links : public QAxObject
{
public:
    explicit Links(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 238 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Link* Add(IDispatch* Item);

    /*
    Method Item

    For more information, see help context 241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Link* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Link : public QAxObject
{
public:
    explicit Link(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Item

    For more information, see help context 251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Name

    For more information, see help context 249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 248 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 247 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Type() const; //Returns the value of Type

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ItemProperties : public QAxObject
{
public:
    explicit ItemProperties(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type);

    /*
    Method Add

    For more information, see help context 538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields);

    /*
    Method Add

    For more information, see help context 538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields, const QVariant& DisplayFormat);

    /*
    Method Item

    For more information, see help context 536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperty* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

    /*
    Method _NewEnum

    For more information, see help context 537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* _NewEnum();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ItemProperty : public QAxObject
{
public:
    explicit ItemProperty(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 519 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Formula

    For more information, see help context 522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Formula() const; //Returns the value of Formula
    inline void SetFormula(const QString& value); //Sets the value of the Formula property

    /*
    Property IsUserProperty

    For more information, see help context 529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUserProperty() const; //Returns the value of IsUserProperty

    /*
    Property Name

    For more information, see help context 523 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType Type() const; //Returns the value of Type

    /*
    Property ValidationFormula

    For more information, see help context 525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ValidationFormula() const; //Returns the value of ValidationFormula
    inline void SetValidationFormula(const QString& value); //Sets the value of the ValidationFormula property

    /*
    Property ValidationText

    For more information, see help context 526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ValidationText() const; //Returns the value of ValidationText
    inline void SetValidationText(const QString& value); //Sets the value of the ValidationText property

    /*
    Property Value

    For more information, see help context 527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method Delete

    For more information, see help context 528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Conflicts : public QAxObject
{
public:
    explicit Conflicts(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 400 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 404 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 403 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 402 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetFirst

    For more information, see help context 406 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflict* GetFirst();

    /*
    Method GetLast

    For more information, see help context 407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflict* GetLast();

    /*
    Method GetNext

    For more information, see help context 408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflict* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflict* GetPrevious();

    /*
    Method Item

    For more information, see help context 405 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflict* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Conflict : public QAxObject
{
public:
    explicit Conflict(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Item

    For more information, see help context 415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Name

    For more information, see help context 416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Type() const; //Returns the value of Type

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface ItemEvents

// skipping event interface ItemEvents_10

class OUTLOOK_EXPORT _Conversation : public QAxObject
{
public:
    explicit _Conversation(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConversationID

    For more information, see help context 3467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property Parent

    For more information, see help context 3385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method ClearAlwaysAssignCategories

    For more information, see help context 3489 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearAlwaysAssignCategories(Outlook::_Store* Store);

    /*
    Method GetAlwaysAssignCategories

    For more information, see help context 3439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetAlwaysAssignCategories(Outlook::_Store* Store);

    /*
    Method GetAlwaysDelete

    For more information, see help context 3440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline OlAlwaysDeleteConversation GetAlwaysDelete(Outlook::_Store* Store);

    /*
    Method GetAlwaysMoveToFolder

    For more information, see help context 3441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetAlwaysMoveToFolder(Outlook::_Store* Store);

    /*
    Method GetChildren

    For more information, see help context 3391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetChildren(IDispatch* Item);

    /*
    Method GetParent

    For more information, see help context 3401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetParent(IDispatch* Item);

    /*
    Method GetRootItems

    For more information, see help context 3402 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetRootItems();

    /*
    Method GetTable

    For more information, see help context 3382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method MarkAsRead

    For more information, see help context 3442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsRead();

    /*
    Method MarkAsUnread

    For more information, see help context 3443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsUnread();

    /*
    Method SetAlwaysAssignCategories

    For more information, see help context 3444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysAssignCategories(const QString& Categories, Outlook::_Store* Store);

    /*
    Method SetAlwaysDelete

    For more information, see help context 3445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysDelete(Outlook::OlAlwaysDeleteConversation AlwaysDelete, Outlook::_Store* Store);

    /*
    Method SetAlwaysMoveToFolder

    For more information, see help context 3430 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysMoveToFolder(Outlook::MAPIFolder* MoveToFolder, Outlook::_Store* Store);

    /*
    Method StopAlwaysDelete

    For more information, see help context 3432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopAlwaysDelete(Outlook::_Store* Store);

    /*
    Method StopAlwaysMoveToFolder

    For more information, see help context 3433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopAlwaysMoveToFolder(Outlook::_Store* Store);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SimpleItems : public QAxObject
{
public:
    explicit _SimpleItems(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 3397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 3396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 3398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _UserDefinedProperties : public QAxObject
{
public:
    explicit _UserDefinedProperties(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type);

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat);

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat, const QVariant& Formula);

    /*
    Method Find

    For more information, see help context 589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Find(const QString& Name);

    /*
    Method Item

    For more information, see help context 587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_UserDefinedProperty* Item(const QVariant& Index);

    /*
    Method Refresh

    For more information, see help context 591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Refresh();

    /*
    Method Remove

    For more information, see help context 590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _UserDefinedProperty : public QAxObject
{
public:
    explicit _UserDefinedProperty(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 1 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayFormat

    For more information, see help context 8 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DisplayFormat() const; //Returns the value of DisplayFormat

    /*
    Property Formula

    For more information, see help context 5 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Formula() const; //Returns the value of Formula

    /*
    Property Name

    For more information, see help context 6 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 4 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 7 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType Type() const; //Returns the value of Type

    /*
    Method Delete

    For more information, see help context 3047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ExchangeUser : public QAxObject
{
public:
    explicit _ExchangeUser(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Address

    For more information, see help context 2065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property AddressEntryUserType

    For more information, see help context 2080 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressEntryUserType AddressEntryUserType() const; //Returns the value of AddressEntryUserType

    /*
    Property Alias

    For more information, see help context 2085 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Alias() const; //Returns the value of Alias

    /*
    Property Application

    For more information, see help context 2061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssistantName

    For more information, see help context 2086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantName() const; //Returns the value of AssistantName
    inline void SetAssistantName(const QString& value); //Sets the value of the AssistantName property

    /*
    Property BusinessTelephoneNumber

    For more information, see help context 2087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessTelephoneNumber() const; //Returns the value of BusinessTelephoneNumber
    inline void SetBusinessTelephoneNumber(const QString& value); //Sets the value of the BusinessTelephoneNumber property

    /*
    Property City

    For more information, see help context 2088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString City() const; //Returns the value of City
    inline void SetCity(const QString& value); //Sets the value of the City property

    /*
    Property Class

    For more information, see help context 2062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Comments

    For more information, see help context 2089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Comments() const; //Returns the value of Comments
    inline void SetComments(const QString& value); //Sets the value of the Comments property

    /*
    Property CompanyName

    For more information, see help context 2090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyName() const; //Returns the value of CompanyName
    inline void SetCompanyName(const QString& value); //Sets the value of the CompanyName property

    /*
    Property Department

    For more information, see help context 2091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Department() const; //Returns the value of Department
    inline void SetDepartment(const QString& value); //Sets the value of the Department property

    /*
    Property DisplayType

    For more information, see help context 2066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property FirstName

    For more information, see help context 2092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FirstName() const; //Returns the value of FirstName
    inline void SetFirstName(const QString& value); //Sets the value of the FirstName property

    /*
    Property ID

    For more information, see help context 2067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property JobTitle

    For more information, see help context 2093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString JobTitle() const; //Returns the value of JobTitle
    inline void SetJobTitle(const QString& value); //Sets the value of the JobTitle property

    /*
    Property LastName

    For more information, see help context 2094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastName() const; //Returns the value of LastName
    inline void SetLastName(const QString& value); //Sets the value of the LastName property

    /*
    Property MAPIOBJECT

    For more information, see help context 2069 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT
    inline void SetMAPIOBJECT(IUnknown* value); //Sets the value of the MAPIOBJECT property

    /*
    Property Manager

    For more information, see help context 2068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Manager() const; //Returns the value of Manager

    /*
    Property Members

    For more information, see help context 2070 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* Members() const; //Returns the value of Members

    /*
    Property MobileTelephoneNumber

    For more information, see help context 2095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MobileTelephoneNumber() const; //Returns the value of MobileTelephoneNumber
    inline void SetMobileTelephoneNumber(const QString& value); //Sets the value of the MobileTelephoneNumber property

    /*
    Property Name

    For more information, see help context 2071 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property OfficeLocation

    For more information, see help context 2096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OfficeLocation() const; //Returns the value of OfficeLocation
    inline void SetOfficeLocation(const QString& value); //Sets the value of the OfficeLocation property

    /*
    Property Parent

    For more information, see help context 2064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PostalCode

    For more information, see help context 2097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PostalCode() const; //Returns the value of PostalCode
    inline void SetPostalCode(const QString& value); //Sets the value of the PostalCode property

    /*
    Property PrimarySmtpAddress

    For more information, see help context 2098 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimarySmtpAddress() const; //Returns the value of PrimarySmtpAddress

    /*
    Property PropertyAccessor

    For more information, see help context 2082 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StateOrProvince

    For more information, see help context 2099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StateOrProvince() const; //Returns the value of StateOrProvince
    inline void SetStateOrProvince(const QString& value); //Sets the value of the StateOrProvince property

    /*
    Property StreetAddress

    For more information, see help context 2100 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StreetAddress() const; //Returns the value of StreetAddress
    inline void SetStreetAddress(const QString& value); //Sets the value of the StreetAddress property

    /*
    Property Type

    For more information, see help context 2072 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Property YomiCompanyName

    For more information, see help context 2102 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiCompanyName() const; //Returns the value of YomiCompanyName
    inline void SetYomiCompanyName(const QString& value); //Sets the value of the YomiCompanyName property

    /*
    Property YomiDepartment

    For more information, see help context 2106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiDepartment() const; //Returns the value of YomiDepartment
    inline void SetYomiDepartment(const QString& value); //Sets the value of the YomiDepartment property

    /*
    Property YomiDisplayName

    For more information, see help context 2105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiDisplayName() const; //Returns the value of YomiDisplayName
    inline void SetYomiDisplayName(const QString& value); //Sets the value of the YomiDisplayName property

    /*
    Property YomiFirstName

    For more information, see help context 2103 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiFirstName() const; //Returns the value of YomiFirstName
    inline void SetYomiFirstName(const QString& value); //Sets the value of the YomiFirstName property

    /*
    Property YomiLastName

    For more information, see help context 2104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiLastName() const; //Returns the value of YomiLastName
    inline void SetYomiLastName(const QString& value); //Sets the value of the YomiLastName property

    /*
    Method Delete

    For more information, see help context 2073 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Details

    For more information, see help context 2074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details();

    /*
    Method Details

    For more information, see help context 2074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details(const QVariant& HWnd);

    /*
    Method GetContact

    For more information, see help context 2078 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ContactItem* GetContact();

    /*
    Method GetDirectReports

    For more information, see help context 2083 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetDirectReports();

    /*
    Method GetExchangeDistributionList

    For more information, see help context 2081 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeDistributionList* GetExchangeDistributionList();

    /*
    Method GetExchangeUser

    For more information, see help context 2079 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUser();

    /*
    Method GetExchangeUserManager

    For more information, see help context 3238 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUserManager();

    /*
    Method GetFreeBusy

    For more information, see help context 2075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method GetFreeBusy

    For more information, see help context 2075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method GetMemberOfList

    For more information, see help context 2084 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetMemberOfList();

    /*
    Method GetPicture

    For more information, see help context 3485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap GetPicture();

    /*
    Method GetUnifiedGroup

    For more information, see help context 3624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType);

    /*
    Method GetUnifiedGroupFromStore

    For more information, see help context 3625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID);

    /*
    Method IsUnifiedGroup

    For more information, see help context 3622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUnifiedGroup();

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update();

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent);

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent, const QVariant& Refresh);

    /*
    Method UpdateFreeBusy

    For more information, see help context 2077 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void UpdateFreeBusy();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ExchangeDistributionList : public QAxObject
{
public:
    explicit _ExchangeDistributionList(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Address

    For more information, see help context 2112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property AddressEntryUserType

    For more information, see help context 2127 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressEntryUserType AddressEntryUserType() const; //Returns the value of AddressEntryUserType

    /*
    Property Alias

    For more information, see help context 2132 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Alias() const; //Returns the value of Alias

    /*
    Property Application

    For more information, see help context 2108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Comments

    For more information, see help context 2133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Comments() const; //Returns the value of Comments
    inline void SetComments(const QString& value); //Sets the value of the Comments property

    /*
    Property DisplayType

    For more information, see help context 2113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property ID

    For more information, see help context 2114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property MAPIOBJECT

    For more information, see help context 2116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT
    inline void SetMAPIOBJECT(IUnknown* value); //Sets the value of the MAPIOBJECT property

    /*
    Property Manager

    For more information, see help context 2115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Manager() const; //Returns the value of Manager

    /*
    Property Members

    For more information, see help context 2117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* Members() const; //Returns the value of Members

    /*
    Property Name

    For more information, see help context 2118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PrimarySmtpAddress

    For more information, see help context 2134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimarySmtpAddress() const; //Returns the value of PrimarySmtpAddress

    /*
    Property PropertyAccessor

    For more information, see help context 2129 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 2119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Method Delete

    For more information, see help context 2120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Details

    For more information, see help context 2121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details();

    /*
    Method Details

    For more information, see help context 2121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details(const QVariant& HWnd);

    /*
    Method GetContact

    For more information, see help context 2125 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ContactItem* GetContact();

    /*
    Method GetExchangeDistributionList

    For more information, see help context 2128 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeDistributionList* GetExchangeDistributionList();

    /*
    Method GetExchangeDistributionListMembers

    For more information, see help context 3239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetExchangeDistributionListMembers();

    /*
    Method GetExchangeUser

    For more information, see help context 2126 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUser();

    /*
    Method GetFreeBusy

    For more information, see help context 2122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method GetFreeBusy

    For more information, see help context 2122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method GetMemberOfList

    For more information, see help context 2130 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetMemberOfList();

    /*
    Method GetOwners

    For more information, see help context 2135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetOwners();

    /*
    Method GetUnifiedGroup

    For more information, see help context 3629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType);

    /*
    Method GetUnifiedGroupFromStore

    For more information, see help context 3630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID);

    /*
    Method IsUnifiedGroup

    For more information, see help context 3628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUnifiedGroup();

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update();

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent);

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent, const QVariant& Refresh);

    /*
    Method UpdateFreeBusy

    For more information, see help context 2124 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void UpdateFreeBusy();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AddressLists : public QAxObject
{
public:
    explicit AddressLists(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 88 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 89 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 92 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 91 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 90 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 93 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SyncObjects : public QAxObject
{
public:
    explicit SyncObjects(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AppFolders

    For more information, see help context 101 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_SyncObject* AppFolders() const; //Returns the value of AppFolders

    /*
    Property Application

    For more information, see help context 95 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 96 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 99 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 98 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 97 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 100 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SyncObject* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SyncObject : public QAxObject
{
public:
    explicit _SyncObject(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 103 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 107 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Start

    For more information, see help context 108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Start();

    /*
    Method Stop

    For more information, see help context 109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Stop();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface SyncObjectEvents

class OUTLOOK_EXPORT _Accounts : public QAxObject
{
public:
    explicit _Accounts(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 750 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Account* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface AccountsEvents

class OUTLOOK_EXPORT _Stores : public QAxObject
{
public:
    explicit _Stores(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 818 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 816 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Store* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface StoresEvents_12

class OUTLOOK_EXPORT _SelectNamesDialog : public QAxObject
{
public:
    explicit _SelectNamesDialog(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AllowMultipleSelection

    For more information, see help context 831 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowMultipleSelection() const; //Returns the value of AllowMultipleSelection
    inline void SetAllowMultipleSelection(bool value); //Sets the value of the AllowMultipleSelection property

    /*
    Property Application

    For more information, see help context 821 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property BccLabel

    For more information, see help context 828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BccLabel() const; //Returns the value of BccLabel
    inline void SetBccLabel(const QString& value); //Sets the value of the BccLabel property

    /*
    Property Caption

    For more information, see help context 825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property CcLabel

    For more information, see help context 829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CcLabel() const; //Returns the value of CcLabel
    inline void SetCcLabel(const QString& value); //Sets the value of the CcLabel property

    /*
    Property Class

    For more information, see help context 822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ForceResolution

    For more information, see help context 832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ForceResolution() const; //Returns the value of ForceResolution
    inline void SetForceResolution(bool value); //Sets the value of the ForceResolution property

    /*
    Property InitialAddressList

    For more information, see help context 835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* InitialAddressList() const; //Returns the value of InitialAddressList
    inline void SetInitialAddressList(Outlook::AddressList* value); //Sets the value of the InitialAddressList property

    /*
    Property NumberOfRecipientSelectors

    For more information, see help context 834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRecipientSelectors NumberOfRecipientSelectors() const; //Returns the value of NumberOfRecipientSelectors
    inline void SetNumberOfRecipientSelectors(Outlook::OlRecipientSelectors value); //Sets the value of the NumberOfRecipientSelectors property

    /*
    Property Parent

    For more information, see help context 824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients
    inline void SetRecipients(Outlook::Recipients* value); //Sets the value of the Recipients property

    /*
    Property Session

    For more information, see help context 823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowOnlyInitialAddressList

    For more information, see help context 833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowOnlyInitialAddressList() const; //Returns the value of ShowOnlyInitialAddressList
    inline void SetShowOnlyInitialAddressList(bool value); //Sets the value of the ShowOnlyInitialAddressList property

    /*
    Property ToLabel

    For more information, see help context 830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ToLabel() const; //Returns the value of ToLabel
    inline void SetToLabel(const QString& value); //Sets the value of the ToLabel property

    /*
    Method Display

    For more information, see help context 826 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Display();

    /*
    Method SetDefaultDisplayMode

    For more information, see help context 836 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetDefaultDisplayMode(Outlook::OlDefaultSelectNamesDisplayMode defaultMode);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SharingItem : public QAxObject
{
public:
    explicit _SharingItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AllowWriteAccess

    For more information, see help context 700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowWriteAccess() const; //Returns the value of AllowWriteAccess
    inline void SetAllowWriteAccess(bool value); //Sets the value of the AllowWriteAccess property

    /*
    Property AlternateRecipientAllowed

    For more information, see help context 631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlternateRecipientAllowed() const; //Returns the value of AlternateRecipientAllowed
    inline void SetAlternateRecipientAllowed(bool value); //Sets the value of the AlternateRecipientAllowed property

    /*
    Property Application

    For more information, see help context 593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property BCC

    For more information, see help context 633 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BCC() const; //Returns the value of BCC
    inline void SetBCC(const QString& value); //Sets the value of the BCC property

    /*
    Property BillingInformation

    For more information, see help context 599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property CC

    For more information, see help context 634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CC() const; //Returns the value of CC
    inline void SetCC(const QString& value); //Sets the value of the CC property

    /*
    Property Categories

    For more information, see help context 601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EnableSharedAttachments

    For more information, see help context 688 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableSharedAttachments() const; //Returns the value of EnableSharedAttachments
    inline void SetEnableSharedAttachments(bool value); //Sets the value of the EnableSharedAttachments property

    /*
    Property EntryID

    For more information, see help context 606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 682 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property MAPIOBJECT

    For more information, see help context 611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Permission

    For more information, see help context 689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermission Permission() const; //Returns the value of Permission
    inline void SetPermission(Outlook::OlPermission value); //Sets the value of the Permission property

    /*
    Property PermissionService

    For more information, see help context 690 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermissionService PermissionService() const; //Returns the value of PermissionService
    inline void SetPermissionService(Outlook::OlPermissionService value); //Sets the value of the PermissionService property

    /*
    Property PermissionTemplateGuid

    For more information, see help context 3511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PermissionTemplateGuid() const; //Returns the value of PermissionTemplateGuid
    inline void SetPermissionTemplateGuid(const QString& value); //Sets the value of the PermissionTemplateGuid property

    /*
    Property PropertyAccessor

    For more information, see help context 693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReadReceiptRequested

    For more information, see help context 643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReadReceiptRequested() const; //Returns the value of ReadReceiptRequested
    inline void SetReadReceiptRequested(bool value); //Sets the value of the ReadReceiptRequested property

    /*
    Property ReceivedByEntryID

    For more information, see help context 644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedOnBehalfOfEntryID

    For more information, see help context 646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfEntryID() const; //Returns the value of ReceivedOnBehalfOfEntryID

    /*
    Property ReceivedOnBehalfOfName

    For more information, see help context 647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfName() const; //Returns the value of ReceivedOnBehalfOfName

    /*
    Property ReceivedTime

    For more information, see help context 648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property RecipientReassignmentProhibited

    For more information, see help context 649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RecipientReassignmentProhibited() const; //Returns the value of RecipientReassignmentProhibited
    inline void SetRecipientReassignmentProhibited(bool value); //Sets the value of the RecipientReassignmentProhibited property

    /*
    Property Recipients

    For more information, see help context 650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property RemoteID

    For more information, see help context 695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteID() const; //Returns the value of RemoteID

    /*
    Property RemoteName

    For more information, see help context 694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteName() const; //Returns the value of RemoteName

    /*
    Property RemotePath

    For more information, see help context 696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemotePath() const; //Returns the value of RemotePath

    /*
    Property RemoteStatus

    For more information, see help context 656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus RemoteStatus() const; //Returns the value of RemoteStatus
    inline void SetRemoteStatus(Outlook::OlRemoteStatus value); //Sets the value of the RemoteStatus property

    /*
    Property ReplyRecipientNames

    For more information, see help context 657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RequestedFolder

    For more information, see help context 702 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultFolders RequestedFolder() const; //Returns the value of RequestedFolder

    /*
    Property RetentionExpirationDate

    For more information, see help context 3565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property SentOnBehalfOfName

    For more information, see help context 663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SentOnBehalfOfName() const; //Returns the value of SentOnBehalfOfName
    inline void SetSentOnBehalfOfName(const QString& value); //Sets the value of the SentOnBehalfOfName property

    /*
    Property Session

    For more information, see help context 595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SharingProvider

    For more information, see help context 699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSharingProvider SharingProvider() const; //Returns the value of SharingProvider

    /*
    Property SharingProviderGuid

    For more information, see help context 697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SharingProviderGuid() const; //Returns the value of SharingProviderGuid

    /*
    Property Size

    For more information, see help context 619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property TaskCompletedDate

    For more information, see help context 3221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 3219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 3220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 3218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property To

    For more information, see help context 665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property Type

    For more information, see help context 701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSharingMsgType Type() const; //Returns the value of Type
    inline void SetType(Outlook::OlSharingMsgType value); //Sets the value of the Type property

    /*
    Property UnRead

    For more information, see help context 621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method AddBusinessCard

    For more information, see help context 3217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCard(Outlook::ContactItem* contact);

    /*
    Method Allow

    For more information, see help context 691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Allow();

    /*
    Method ClearConversationIndex

    For more information, see help context 668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Deny

    For more information, see help context 692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* Deny();

    /*
    Method Display

    For more information, see help context 626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method OpenSharedFolder

    For more information, see help context 698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder();

    /*
    Method PrintOut

    For more information, see help context 628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Explorers : public QAxObject
{
public:
    explicit _Explorers(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* Add(const QVariant& Folder);

    /*
    Method Add

    For more information, see help context 122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* Add(const QVariant& Folder, Outlook::OlFolderDisplayMode DisplayMode);

    /*
    Method Item

    For more information, see help context 121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Explorer* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface ExplorerEvents

// skipping event interface ExplorerEvents_10

class OUTLOOK_EXPORT _Inspectors : public QAxObject
{
public:
    explicit _Inspectors(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* Add(IDispatch* Item);

    /*
    Method Item

    For more information, see help context 138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Inspector* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface InspectorEvents

// skipping event interface InspectorEvents_10

class OUTLOOK_EXPORT Search : public QAxObject
{
public:
    explicit Search(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter

    /*
    Property IsSynchronous

    For more information, see help context 2254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSynchronous() const; //Returns the value of IsSynchronous

    /*
    Property Parent

    For more information, see help context 2252 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Results

    For more information, see help context 2255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Results* Results() const; //Returns the value of Results

    /*
    Property Scope

    For more information, see help context 2259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Scope() const; //Returns the value of Scope

    /*
    Property SearchSubFolders

    For more information, see help context 2256 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SearchSubFolders() const; //Returns the value of SearchSubFolders

    /*
    Property Session

    For more information, see help context 2251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Tag

    For more information, see help context 2258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Tag() const; //Returns the value of Tag

    /*
    Method GetTable

    For more information, see help context 2261 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method Save

    For more information, see help context 2260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Save(const QString& Name);

    /*
    Method Stop

    For more information, see help context 2257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Stop();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Results : public QAxObject
{
public:
    explicit _Results(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property DefaultItemType

    For more information, see help context 512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlItemType DefaultItemType() const; //Returns the value of DefaultItemType
    inline void SetDefaultItemType(Outlook::OlItemType value); //Sets the value of the DefaultItemType property

    /*
    Property Parent

    For more information, see help context 501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetFirst

    For more information, see help context 505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetFirst();

    /*
    Method GetLast

    For more information, see help context 506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetLast();

    /*
    Method GetNext

    For more information, see help context 507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 508 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetPrevious();

    /*
    Method Item

    For more information, see help context 503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method ResetColumns

    For more information, see help context 509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetColumns();

    /*
    Method SetColumns

    For more information, see help context 510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetColumns(const QString& Columns);

    /*
    Method Sort

    For more information, see help context 511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property);

    /*
    Method Sort

    For more information, see help context 511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Reminders : public QAxObject
{
public:
    explicit _Reminders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Reminder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method _NewEnum

    For more information, see help context 573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* _NewEnum();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _Reminder : public QAxObject
{
public:
    explicit _Reminder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Caption

    For more information, see help context 560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property IsVisible

    For more information, see help context 561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsVisible() const; //Returns the value of IsVisible

    /*
    Property Item

    For more information, see help context 562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property NextReminderDate

    For more information, see help context 563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime NextReminderDate() const; //Returns the value of NextReminderDate

    /*
    Property OriginalReminderDate

    For more information, see help context 564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime OriginalReminderDate() const; //Returns the value of OriginalReminderDate

    /*
    Property Parent

    For more information, see help context 557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Dismiss

    For more information, see help context 558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dismiss();

    /*
    Method Snooze

    For more information, see help context 559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Snooze();

    /*
    Method Snooze

    For more information, see help context 559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Snooze(const QVariant& SnoozeTime);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TimeZones : public QAxObject
{
public:
    explicit _TimeZones(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 3295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property CurrentTimeZone

    For more information, see help context 3298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* CurrentTimeZone() const; //Returns the value of CurrentTimeZone

    /*
    Property Parent

    For more information, see help context 3294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method ConvertTime

    For more information, see help context 3297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ConvertTime(const QDateTime& SourceDateTime, Outlook::_TimeZone* SourceTimeZone, Outlook::_TimeZone* DestinationTimeZone);

    /*
    Method Item

    For more information, see help context 3296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OlkTimeZoneControl : public QAxObject
{
public:
    explicit _OlkTimeZoneControl(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AppointmentTimeField

    For more information, see help context 1000534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAppointmentTimeField AppointmentTimeField() const; //Returns the value of AppointmentTimeField
    inline void SetAppointmentTimeField(Outlook::OlAppointmentTimeField value); //Sets the value of the AppointmentTimeField property

    /*
    Property BorderStyle

    For more information, see help context 1000536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Enabled

    For more information, see help context 1000537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Locked

    For more information, see help context 1000505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property SelectedTimeZoneIndex

    For more information, see help context 1000533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelectedTimeZoneIndex() const; //Returns the value of SelectedTimeZoneIndex
    inline void SetSelectedTimeZoneIndex(int value); //Sets the value of the SelectedTimeZoneIndex property

    /*
    Property Value

    For more information, see help context 1000511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OlkTimeZoneControlEvents

// skipping event interface ApplicationEvents

class OUTLOOK_EXPORT PropertyPages : public QAxObject
{
public:
    explicit PropertyPages(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 162 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 163 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Add(const QVariant& Page);

    /*
    Method Add

    For more information, see help context 167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Add(const QVariant& Page, const QString& Title);

    /*
    Method Item

    For more information, see help context 166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RecurrencePattern : public QAxObject
{
public:
    explicit RecurrencePattern(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DayOfMonth

    For more information, see help context 273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DayOfMonth() const; //Returns the value of DayOfMonth
    inline void SetDayOfMonth(int value); //Sets the value of the DayOfMonth property

    /*
    Property DayOfWeekMask

    For more information, see help context 274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDaysOfWeek DayOfWeekMask() const; //Returns the value of DayOfWeekMask
    inline void SetDayOfWeekMask(Outlook::OlDaysOfWeek value); //Sets the value of the DayOfWeekMask property

    /*
    Property Duration

    For more information, see help context 275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Duration() const; //Returns the value of Duration
    inline void SetDuration(int value); //Sets the value of the Duration property

    /*
    Property EndTime

    For more information, see help context 276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndTime() const; //Returns the value of EndTime
    inline void SetEndTime(const QDateTime& value); //Sets the value of the EndTime property

    /*
    Property Exceptions

    For more information, see help context 277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Exceptions* Exceptions() const; //Returns the value of Exceptions

    /*
    Property Instance

    For more information, see help context 278 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Instance() const; //Returns the value of Instance
    inline void SetInstance(int value); //Sets the value of the Instance property

    /*
    Property Interval

    For more information, see help context 279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Interval() const; //Returns the value of Interval
    inline void SetInterval(int value); //Sets the value of the Interval property

    /*
    Property MonthOfYear

    For more information, see help context 280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MonthOfYear() const; //Returns the value of MonthOfYear
    inline void SetMonthOfYear(int value); //Sets the value of the MonthOfYear property

    /*
    Property NoEndDate

    For more information, see help context 281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoEndDate() const; //Returns the value of NoEndDate
    inline void SetNoEndDate(bool value); //Sets the value of the NoEndDate property

    /*
    Property Occurrences

    For more information, see help context 282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Occurrences() const; //Returns the value of Occurrences
    inline void SetOccurrences(int value); //Sets the value of the Occurrences property

    /*
    Property Parent

    For more information, see help context 272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PatternEndDate

    For more information, see help context 283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime PatternEndDate() const; //Returns the value of PatternEndDate
    inline void SetPatternEndDate(const QDateTime& value); //Sets the value of the PatternEndDate property

    /*
    Property PatternStartDate

    For more information, see help context 284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime PatternStartDate() const; //Returns the value of PatternStartDate
    inline void SetPatternStartDate(const QDateTime& value); //Sets the value of the PatternStartDate property

    /*
    Property RecurrenceType

    For more information, see help context 285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRecurrenceType RecurrenceType() const; //Returns the value of RecurrenceType
    inline void SetRecurrenceType(Outlook::OlRecurrenceType value); //Sets the value of the RecurrenceType property

    /*
    Property Regenerate

    For more information, see help context 286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Regenerate() const; //Returns the value of Regenerate
    inline void SetRegenerate(bool value); //Sets the value of the Regenerate property

    /*
    Property Session

    For more information, see help context 271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StartTime

    For more information, see help context 287 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartTime() const; //Returns the value of StartTime
    inline void SetStartTime(const QDateTime& value); //Sets the value of the StartTime property

    /*
    Method GetOccurrence

    For more information, see help context 288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AppointmentItem* GetOccurrence(const QDateTime& StartDate);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Exceptions : public QAxObject
{
public:
    explicit Exceptions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 290 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Exception* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Exception : public QAxObject
{
public:
    explicit Exception(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AppointmentItem

    For more information, see help context 301 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AppointmentItem* AppointmentItem() const; //Returns the value of AppointmentItem

    /*
    Property Class

    For more information, see help context 298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Deleted

    For more information, see help context 302 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Deleted() const; //Returns the value of Deleted

    /*
    Property ItemProperties

    For more information, see help context 304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property OriginalDate

    For more information, see help context 303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime OriginalDate() const; //Returns the value of OriginalDate

    /*
    Property Parent

    For more information, see help context 300 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 299 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AppointmentItem : public QAxObject
{
public:
    explicit _AppointmentItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AllDayEvent

    For more information, see help context 876 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllDayEvent() const; //Returns the value of AllDayEvent
    inline void SetAllDayEvent(bool value); //Sets the value of the AllDayEvent property

    /*
    Property Application

    For more information, see help context 838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 3642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property BusyStatus

    For more information, see help context 877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBusyStatus BusyStatus() const; //Returns the value of BusyStatus
    inline void SetBusyStatus(Outlook::OlBusyStatus value); //Sets the value of the BusyStatus property

    /*
    Property Categories

    For more information, see help context 846 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property ConferenceServerAllowExternal

    For more information, see help context 911 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ConferenceServerAllowExternal() const; //Returns the value of ConferenceServerAllowExternal
    inline void SetConferenceServerAllowExternal(bool value); //Sets the value of the ConferenceServerAllowExternal property

    /*
    Property ConferenceServerPassword

    For more information, see help context 912 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConferenceServerPassword() const; //Returns the value of ConferenceServerPassword
    inline void SetConferenceServerPassword(const QString& value); //Sets the value of the ConferenceServerPassword property

    /*
    Property Conflicts

    For more information, see help context 921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DoNotForwardMeeting

    For more information, see help context 3674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DoNotForwardMeeting() const; //Returns the value of DoNotForwardMeeting
    inline void SetDoNotForwardMeeting(bool value); //Sets the value of the DoNotForwardMeeting property

    /*
    Property DownloadState

    For more information, see help context 914 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Duration

    For more information, see help context 878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Duration() const; //Returns the value of Duration
    inline void SetDuration(int value); //Sets the value of the Duration property

    /*
    Property End

    For more information, see help context 879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime End() const; //Returns the value of End
    inline void SetEnd(const QDateTime& value); //Sets the value of the End property

    /*
    Property EndInEndTimeZone

    For more information, see help context 3274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndInEndTimeZone() const; //Returns the value of EndInEndTimeZone
    inline void SetEndInEndTimeZone(const QDateTime& value); //Sets the value of the EndInEndTimeZone property

    /*
    Property EndTimeZone

    For more information, see help context 3276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* EndTimeZone() const; //Returns the value of EndTimeZone
    inline void SetEndTimeZone(Outlook::_TimeZone* value); //Sets the value of the EndTimeZone property

    /*
    Property EndUTC

    For more information, see help context 3272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndUTC() const; //Returns the value of EndUTC
    inline void SetEndUTC(const QDateTime& value); //Sets the value of the EndUTC property

    /*
    Property EntryID

    For more information, see help context 851 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FDelegateAppt

    For more information, see help context 3677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool FDelegateAppt() const; //Returns the value of FDelegateAppt

    /*
    Property FOthersAppt

    For more information, see help context 3675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool FOthersAppt() const; //Returns the value of FOthersAppt

    /*
    Property ForceUpdateToAllAttendees

    For more information, see help context 3226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ForceUpdateToAllAttendees() const; //Returns the value of ForceUpdateToAllAttendees
    inline void SetForceUpdateToAllAttendees(bool value); //Sets the value of the ForceUpdateToAllAttendees property

    /*
    Property FormDescription

    For more information, see help context 852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property GlobalAppointmentID

    For more information, see help context 924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GlobalAppointmentID() const; //Returns the value of GlobalAppointmentID

    /*
    Property Importance

    For more information, see help context 854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 916 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsOnlineMeeting

    For more information, see help context 880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsOnlineMeeting() const; //Returns the value of IsOnlineMeeting
    inline void SetIsOnlineMeeting(bool value); //Sets the value of the IsOnlineMeeting property

    /*
    Property IsRecurring

    For more information, see help context 881 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRecurring() const; //Returns the value of IsRecurring

    /*
    Property ItemProperties

    For more information, see help context 913 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 910 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property Location

    For more information, see help context 882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Location() const; //Returns the value of Location
    inline void SetLocation(const QString& value); //Sets the value of the Location property

    /*
    Property MAPIOBJECT

    For more information, see help context 856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MeetingStatus

    For more information, see help context 883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMeetingStatus MeetingStatus() const; //Returns the value of MeetingStatus
    inline void SetMeetingStatus(Outlook::OlMeetingStatus value); //Sets the value of the MeetingStatus property

    /*
    Property MeetingWorkspaceURL

    For more information, see help context 919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MeetingWorkspaceURL() const; //Returns the value of MeetingWorkspaceURL

    /*
    Property MessageClass

    For more information, see help context 857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NetMeetingAutoStart

    For more information, see help context 884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NetMeetingAutoStart() const; //Returns the value of NetMeetingAutoStart
    inline void SetNetMeetingAutoStart(bool value); //Sets the value of the NetMeetingAutoStart property

    /*
    Property NetMeetingDocPathName

    For more information, see help context 908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingDocPathName() const; //Returns the value of NetMeetingDocPathName
    inline void SetNetMeetingDocPathName(const QString& value); //Sets the value of the NetMeetingDocPathName property

    /*
    Property NetMeetingOrganizerAlias

    For more information, see help context 885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingOrganizerAlias() const; //Returns the value of NetMeetingOrganizerAlias
    inline void SetNetMeetingOrganizerAlias(const QString& value); //Sets the value of the NetMeetingOrganizerAlias property

    /*
    Property NetMeetingServer

    For more information, see help context 886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingServer() const; //Returns the value of NetMeetingServer
    inline void SetNetMeetingServer(const QString& value); //Sets the value of the NetMeetingServer property

    /*
    Property NetMeetingType

    For more information, see help context 887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNetMeetingType NetMeetingType() const; //Returns the value of NetMeetingType
    inline void SetNetMeetingType(Outlook::OlNetMeetingType value); //Sets the value of the NetMeetingType property

    /*
    Property NetShowURL

    For more information, see help context 909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetShowURL() const; //Returns the value of NetShowURL
    inline void SetNetShowURL(const QString& value); //Sets the value of the NetShowURL property

    /*
    Property NoAging

    For more information, see help context 859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OptionalAttendees

    For more information, see help context 888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OptionalAttendees() const; //Returns the value of OptionalAttendees
    inline void SetOptionalAttendees(const QString& value); //Sets the value of the OptionalAttendees property

    /*
    Property Organizer

    For more information, see help context 889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Organizer() const; //Returns the value of Organizer

    /*
    Property OutlookInternalVersion

    For more information, see help context 860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 861 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 841 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Recipients

    For more information, see help context 890 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property RecurrenceState

    For more information, see help context 891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRecurrenceState RecurrenceState() const; //Returns the value of RecurrenceState

    /*
    Property ReminderMinutesBeforeStart

    For more information, see help context 892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReminderMinutesBeforeStart() const; //Returns the value of ReminderMinutesBeforeStart
    inline void SetReminderMinutesBeforeStart(int value); //Sets the value of the ReminderMinutesBeforeStart property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReplyTime

    For more information, see help context 897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReplyTime() const; //Returns the value of ReplyTime
    inline void SetReplyTime(const QDateTime& value); //Sets the value of the ReplyTime property

    /*
    Property RequiredAttendees

    For more information, see help context 898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RequiredAttendees() const; //Returns the value of RequiredAttendees
    inline void SetRequiredAttendees(const QString& value); //Sets the value of the RequiredAttendees property

    /*
    Property Resources

    For more information, see help context 899 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Resources() const; //Returns the value of Resources
    inline void SetResources(const QString& value); //Sets the value of the Resources property

    /*
    Property ResponseRequested

    For more information, see help context 900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ResponseRequested() const; //Returns the value of ResponseRequested
    inline void SetResponseRequested(bool value); //Sets the value of the ResponseRequested property

    /*
    Property ResponseStatus

    For more information, see help context 901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlResponseStatus ResponseStatus() const; //Returns the value of ResponseStatus

    /*
    Property Saved

    For more information, see help context 862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sensitivity

    For more information, see help context 863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Start

    For more information, see help context 902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Start() const; //Returns the value of Start
    inline void SetStart(const QDateTime& value); //Sets the value of the Start property

    /*
    Property StartInStartTimeZone

    For more information, see help context 3273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartInStartTimeZone() const; //Returns the value of StartInStartTimeZone
    inline void SetStartInStartTimeZone(const QDateTime& value); //Sets the value of the StartInStartTimeZone property

    /*
    Property StartTimeZone

    For more information, see help context 3275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* StartTimeZone() const; //Returns the value of StartTimeZone
    inline void SetStartTimeZone(Outlook::_TimeZone* value); //Sets the value of the StartTimeZone property

    /*
    Property StartUTC

    For more information, see help context 3271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartUTC() const; //Returns the value of StartUTC
    inline void SetStartUTC(const QDateTime& value); //Sets the value of the StartUTC property

    /*
    Property Subject

    For more information, see help context 865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 866 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 867 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method ClearRecurrencePattern

    For more information, see help context 903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearRecurrencePattern();

    /*
    Method Close

    For more information, see help context 868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method CopyTo

    For more information, see help context 3517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AppointmentItem* CopyTo(Outlook::MAPIFolder* DestinationFolder, Outlook::OlAppointmentCopyOptions CopyOptions);

    /*
    Method Delete

    For more information, see help context 870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method ForwardAsVcal

    For more information, see help context 904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsVcal();

    /*
    Method GetConversation

    For more information, see help context 3403 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetOrganizer

    For more information, see help context 3556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetOrganizer();

    /*
    Method GetRecurrencePattern

    For more information, see help context 905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RecurrencePattern* GetRecurrencePattern();

    /*
    Method Move

    For more information, see help context 872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response);

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI);

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog);

    /*
    Method Save

    For more information, see help context 874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 915 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MeetingItem : public QAxObject
{
public:
    explicit _MeetingItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1402 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1403 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 1436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property AutoResolvedWinner

    For more information, see help context 1467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1404 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1405 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 3643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property Categories

    For more information, see help context 1406 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1399 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3472 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 1437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 1438 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 1460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 1440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 1466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 1441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 1442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 1412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsLatestVersion

    For more information, see help context 3535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsLatestVersion() const; //Returns the value of IsLatestVersion

    /*
    Property ItemProperties

    For more information, see help context 1462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MeetingWorkspaceURL

    For more information, see help context 1465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MeetingWorkspaceURL() const; //Returns the value of MeetingWorkspaceURL

    /*
    Property MessageClass

    For more information, see help context 1417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1419 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 1443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1420 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1421 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1471 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReceivedTime

    For more information, see help context 1444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime
    inline void SetReceivedTime(const QDateTime& value); //Sets the value of the ReceivedTime property

    /*
    Property Recipients

    For more information, see help context 1445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderSet

    For more information, see help context 1446 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderTime

    For more information, see help context 1447 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property ReplyRecipients

    For more information, see help context 1448 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RetentionExpirationDate

    For more information, see help context 3560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 1449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 1422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 3509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 1469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 1451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 1452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 1400 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1425 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 1453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property UnRead

    For more information, see help context 1426 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1429 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1430 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1454 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Forward();

    /*
    Method GetAssociatedAppointment

    For more information, see help context 1455 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AppointmentItem* GetAssociatedAppointment(bool AddToCalendar);

    /*
    Method GetConversation

    For more information, see help context 3406 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1456 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface ExplorersEvents

// skipping event interface FoldersEvents

// skipping event interface InspectorsEvents

// skipping event interface ItemsEvents

// skipping event interface NameSpaceEvents

class OUTLOOK_EXPORT OutlookBarGroup : public QAxObject
{
public:
    explicit OutlookBarGroup(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Shortcuts

    For more information, see help context 326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_OutlookBarShortcuts* Shortcuts() const; //Returns the value of Shortcuts

    /*
    Property ViewType

    For more information, see help context 327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlOutlookBarViewType ViewType() const; //Returns the value of ViewType
    inline void SetViewType(Outlook::OlOutlookBarViewType value); //Sets the value of the ViewType property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OutlookBarShortcuts : public QAxObject
{
public:
    explicit _OutlookBarShortcuts(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Add(const QVariant& Target, const QString& Name);

    /*
    Method Add

    For more information, see help context 335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Add(const QVariant& Target, const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OutlookBarShortcut : public QAxObject
{
public:
    explicit OutlookBarShortcut(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 339 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Target

    For more information, see help context 343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Target() const; //Returns the value of Target

    /*
    Method SetIcon

    For more information, see help context 344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetIcon(const QVariant& Icon);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OutlookBarGroups : public QAxObject
{
public:
    explicit _OutlookBarGroups(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Add(const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OutlookBarGroupsEvents

class OUTLOOK_EXPORT _OutlookBarPane : public QAxObject
{
public:
    explicit _OutlookBarPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Contents

    For more information, see help context 363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarStorage* Contents() const; //Returns the value of Contents

    /*
    Property CurrentGroup

    For more information, see help context 364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* CurrentGroup() const; //Returns the value of CurrentGroup
    inline void SetCurrentGroup(Outlook::OutlookBarGroup* value); //Sets the value of the CurrentGroup property

    /*
    Property Name

    For more information, see help context 365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OutlookBarStorage : public QAxObject
{
public:
    explicit OutlookBarStorage(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 369 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Groups

    For more information, see help context 372 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_OutlookBarGroups* Groups() const; //Returns the value of Groups

    /*
    Property Parent

    For more information, see help context 371 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 370 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface OutlookBarPaneEvents

// skipping event interface OutlookBarShortcutsEvents

// stub for vtable-only interface
class PropertyPage : public QAxObject { Q_DISABLE_COPY_MOVE(PropertyPage) };

class OUTLOOK_EXPORT PropertyPageSite : public QAxObject
{
public:
    explicit PropertyPageSite(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method OnStatusChange

    For more information, see help context 389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void OnStatusChange();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Pages : public QAxObject
{
public:
    explicit Pages(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add();

    /*
    Method Add

    For more information, see help context 397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add(const QVariant& Name);

    /*
    Method Item

    For more information, see help context 396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface ApplicationEvents_10

// skipping event interface ApplicationEvents_11

// skipping event interface MAPIFolderEvents_12

// skipping event interface ResultsEvents

// skipping event interface _ViewsEvents

// skipping event interface ReminderCollectionEvents

class OUTLOOK_EXPORT _DocumentItem : public QAxObject
{
public:
    explicit _DocumentItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1183 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1179 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1184 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1185 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1186 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1187 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1180 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1188 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationIndex

    For more information, see help context 1189 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1190 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1191 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1192 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1193 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1200 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1182 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Saved

    For more information, see help context 1203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1181 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1205 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1206 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1207 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1208 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Move

    For more information, see help context 1213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1215 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NoteItem : public QAxObject
{
public:
    explicit _NoteItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 1473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoResolvedWinner

    For more information, see help context 1505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property Body

    For more information, see help context 1477 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 1479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNoteColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlNoteColor value); //Sets the value of the Color property

    /*
    Property Conflicts

    For more information, see help context 1506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property CreationTime

    For more information, see help context 1480 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property GetInspector

    For more information, see help context 1482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Height

    For more information, see help context 1483 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property IsConflict

    For more information, see help context 1504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1484 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Left

    For more information, see help context 1485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property Links

    For more information, see help context 1500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MarkForDownload

    For more information, see help context 1503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1486 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Parent

    For more information, see help context 1476 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Saved

    For more information, see help context 1487 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Session

    For more information, see help context 1475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1488 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1489 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject

    /*
    Property Top

    For more information, see help context 1490 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width

    For more information, see help context 1491 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method Close

    For more information, see help context 1492 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1493 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Move

    For more information, see help context 1496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface FormRegionEvents

class OUTLOOK_EXPORT _ViewField : public QAxObject
{
public:
    explicit _ViewField(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2540 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ColumnFormat

    For more information, see help context 2544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ColumnFormat* ColumnFormat() const; //Returns the value of ColumnFormat

    /*
    Property Parent

    For more information, see help context 2542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ViewXMLSchemaName

    For more information, see help context 2543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ViewXMLSchemaName() const; //Returns the value of ViewXMLSchemaName

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ColumnFormat : public QAxObject
{
public:
    explicit _ColumnFormat(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Align

    For more information, see help context 2731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlign Align() const; //Returns the value of Align
    inline void SetAlign(Outlook::OlAlign value); //Sets the value of the Align property

    /*
    Property Application

    For more information, see help context 2724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property FieldFormat

    For more information, see help context 2729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int FieldFormat() const; //Returns the value of FieldFormat
    inline void SetFieldFormat(int value); //Sets the value of the FieldFormat property

    /*
    Property FieldType

    For more information, see help context 2732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType FieldType() const; //Returns the value of FieldType

    /*
    Property Label

    For more information, see help context 2728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Label() const; //Returns the value of Label
    inline void SetLabel(const QString& value); //Sets the value of the Label property

    /*
    Property Parent

    For more information, see help context 2727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Width

    For more information, see help context 2730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ViewFields : public QAxObject
{
public:
    explicit _ViewFields(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2552 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewField* Add(const QString& PropertyName);

    /*
    Method Insert

    For more information, see help context 2553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewField* Insert(const QString& PropertyName, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 2551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ViewField* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _IconView : public QAxObject
{
public:
    explicit _IconView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property IconPlacement

    For more information, see help context 2577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlIconViewPlacement IconPlacement() const; //Returns the value of IconPlacement
    inline void SetIconPlacement(Outlook::OlIconViewPlacement value); //Sets the value of the IconPlacement property

    /*
    Property IconViewType

    For more information, see help context 2576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlIconViewType IconViewType() const; //Returns the value of IconViewType
    inline void SetIconViewType(Outlook::OlIconViewType value); //Sets the value of the IconViewType property

    /*
    Property Language

    For more information, see help context 2566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 2568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 2575 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 2571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OrderFields : public QAxObject
{
public:
    explicit _OrderFields(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2673 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Add(const QString& PropertyName);

    /*
    Method Add

    For more information, see help context 2678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Add(const QString& PropertyName, const QVariant& IsDescending);

    /*
    Method Insert

    For more information, see help context 2681 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Insert(const QString& PropertyName, const QVariant& Index);

    /*
    Method Insert

    For more information, see help context 2681 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Insert(const QString& PropertyName, const QVariant& Index, const QVariant& IsDescending);

    /*
    Method Item

    For more information, see help context 2677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_OrderField* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _OrderField : public QAxObject
{
public:
    explicit _OrderField(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2683 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2684 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property IsDescending

    For more information, see help context 2689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsDescending() const; //Returns the value of IsDescending
    inline void SetIsDescending(bool value); //Sets the value of the IsDescending property

    /*
    Property Parent

    For more information, see help context 2686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ViewXMLSchemaName

    For more information, see help context 2687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ViewXMLSchemaName() const; //Returns the value of ViewXMLSchemaName

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _CardView : public QAxObject
{
public:
    explicit _CardView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AllowInCellEditing

    For more information, see help context 2598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowInCellEditing() const; //Returns the value of AllowInCellEditing
    inline void SetAllowInCellEditing(bool value); //Sets the value of the AllowInCellEditing property

    /*
    Property Application

    For more information, see help context 2579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property BodyFont

    For more information, see help context 2604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* BodyFont() const; //Returns the value of BodyFont

    /*
    Property Class

    For more information, see help context 2580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property HeadingsFont

    For more information, see help context 2603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* HeadingsFont() const; //Returns the value of HeadingsFont

    /*
    Property Language

    For more information, see help context 2588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MultiLineFieldHeight

    For more information, see help context 2601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MultiLineFieldHeight() const; //Returns the value of MultiLineFieldHeight
    inline void SetMultiLineFieldHeight(int value); //Sets the value of the MultiLineFieldHeight property

    /*
    Property Name

    For more information, see help context 2590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2581 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowEmptyFields

    For more information, see help context 2599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowEmptyFields() const; //Returns the value of ShowEmptyFields
    inline void SetShowEmptyFields(bool value); //Sets the value of the ShowEmptyFields property

    /*
    Property SortFields

    For more information, see help context 2597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewFields

    For more information, see help context 2602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFields* ViewFields() const; //Returns the value of ViewFields

    /*
    Property ViewType

    For more information, see help context 2593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property Width

    For more information, see help context 2600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property XML

    For more information, see help context 2594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ViewFont : public QAxObject
{
public:
    explicit _ViewFont(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Bold

    For more information, see help context 2695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Bold() const; //Returns the value of Bold
    inline void SetBold(bool value); //Sets the value of the Bold property

    /*
    Property Class

    For more information, see help context 2692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 2701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlColor value); //Sets the value of the Color property

    /*
    Property ExtendedColor

    For more information, see help context 3491 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryColor ExtendedColor() const; //Returns the value of ExtendedColor
    inline void SetExtendedColor(Outlook::OlCategoryColor value); //Sets the value of the ExtendedColor property

    /*
    Property Italic

    For more information, see help context 2696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Italic() const; //Returns the value of Italic
    inline void SetItalic(bool value); //Sets the value of the Italic property

    /*
    Property Name

    For more information, see help context 2697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 2698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size
    inline void SetSize(int value); //Sets the value of the Size property

    /*
    Property Strikethrough

    For more information, see help context 2699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Strikethrough() const; //Returns the value of Strikethrough
    inline void SetStrikethrough(bool value); //Sets the value of the Strikethrough property

    /*
    Property Underline

    For more information, see help context 2700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Underline() const; //Returns the value of Underline
    inline void SetUnderline(bool value); //Sets the value of the Underline property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AutoFormatRules : public QAxObject
{
public:
    explicit _AutoFormatRules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Add(const QString& Name);

    /*
    Method Insert

    For more information, see help context 2720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Insert(const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 2718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

    /*
    Method Save

    For more information, see help context 3214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _AutoFormatRule : public QAxObject
{
public:
    explicit _AutoFormatRule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2704 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Filter

    For more information, see help context 2708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Font

    For more information, see help context 2710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* Font() const; //Returns the value of Font
    inline void SetFont(Outlook::ViewFont* value); //Sets the value of the Font property

    /*
    Property Name

    For more information, see help context 2707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2705 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 2711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TimelineView : public QAxObject
{
public:
    explicit _TimelineView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DefaultExpandCollapseSetting

    For more information, see help context 2663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting() const; //Returns the value of DefaultExpandCollapseSetting
    inline void SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value); //Sets the value of the DefaultExpandCollapseSetting property

    /*
    Property EndField

    For more information, see help context 2661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EndField() const; //Returns the value of EndField
    inline void SetEndField(const QString& value); //Sets the value of the EndField property

    /*
    Property Filter

    For more information, see help context 2659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property GroupByFields

    For more information, see help context 2662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* GroupByFields() const; //Returns the value of GroupByFields

    /*
    Property ItemFont

    For more information, see help context 2669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* ItemFont() const; //Returns the value of ItemFont

    /*
    Property Language

    For more information, see help context 2651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property LowerScaleFont

    For more information, see help context 2668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* LowerScaleFont() const; //Returns the value of LowerScaleFont

    /*
    Property MaxLabelWidth

    For more information, see help context 2665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLabelWidth() const; //Returns the value of MaxLabelWidth
    inline void SetMaxLabelWidth(int value); //Sets the value of the MaxLabelWidth property

    /*
    Property Name

    For more information, see help context 2653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowLabelWhenViewingByMonth

    For more information, see help context 2666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowLabelWhenViewingByMonth() const; //Returns the value of ShowLabelWhenViewingByMonth
    inline void SetShowLabelWhenViewingByMonth(bool value); //Sets the value of the ShowLabelWhenViewingByMonth property

    /*
    Property ShowWeekNumbers

    For more information, see help context 2664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowWeekNumbers() const; //Returns the value of ShowWeekNumbers
    inline void SetShowWeekNumbers(bool value); //Sets the value of the ShowWeekNumbers property

    /*
    Property Standard

    For more information, see help context 2655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property StartField

    For more information, see help context 2660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StartField() const; //Returns the value of StartField
    inline void SetStartField(const QString& value); //Sets the value of the StartField property

    /*
    Property TimelineViewMode

    For more information, see help context 2670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTimelineViewMode TimelineViewMode() const; //Returns the value of TimelineViewMode
    inline void SetTimelineViewMode(Outlook::OlTimelineViewMode value); //Sets the value of the TimelineViewMode property

    /*
    Property UpperScaleFont

    For more information, see help context 2667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* UpperScaleFont() const; //Returns the value of UpperScaleFont

    /*
    Property ViewType

    For more information, see help context 2656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MailModule : public QAxObject
{
public:
    explicit _MailModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2813 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2820 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2818 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationGroups : public QAxObject
{
public:
    explicit _NavigationGroups(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Create

    For more information, see help context 2858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationGroup* Create(const QString& GroupDisplayName);

    /*
    Method Delete

    For more information, see help context 2859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete(Outlook::NavigationGroup* Group);

    /*
    Method GetDefaultNavigationGroup

    For more information, see help context 2860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationGroup* GetDefaultNavigationGroup(Outlook::OlGroupType DefaultFolderGroup);

    /*
    Method Item

    For more information, see help context 2857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroup* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationGroup : public QAxObject
{
public:
    explicit _NavigationGroup(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property GroupType

    For more information, see help context 2886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGroupType GroupType() const; //Returns the value of GroupType

    /*
    Property Name

    For more information, see help context 2888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property NavigationFolders

    For more information, see help context 2887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationFolders* NavigationFolders() const; //Returns the value of NavigationFolders

    /*
    Property Parent

    For more information, see help context 2885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationFolders : public QAxObject
{
public:
    explicit _NavigationFolders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationFolder* Add(Outlook::MAPIFolder* Folder);

    /*
    Method Item

    For more information, see help context 2896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationFolder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(Outlook::NavigationFolder* RemovableFolder);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NavigationFolder : public QAxObject
{
public:
    explicit _NavigationFolder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayName

    For more information, see help context 2909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property Folder

    For more information, see help context 2904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder

    /*
    Property IsRemovable

    For more information, see help context 2908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRemovable() const; //Returns the value of IsRemovable

    /*
    Property IsSelected

    For more information, see help context 2905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSelected() const; //Returns the value of IsSelected
    inline void SetIsSelected(bool value); //Sets the value of the IsSelected property

    /*
    Property IsSideBySide

    For more information, see help context 2906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSideBySide() const; //Returns the value of IsSideBySide
    inline void SetIsSideBySide(bool value); //Sets the value of the IsSideBySide property

    /*
    Property Parent

    For more information, see help context 2903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _CalendarModule : public QAxObject
{
public:
    explicit _CalendarModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ContactsModule : public QAxObject
{
public:
    explicit _ContactsModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2837 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TasksModule : public QAxObject
{
public:
    explicit _TasksModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _JournalModule : public QAxObject
{
public:
    explicit _JournalModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2867 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _NotesModule : public QAxObject
{
public:
    explicit _NotesModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface NavigationPaneEvents_12

// skipping event interface NavigationGroupsEvents_12

class OUTLOOK_EXPORT _BusinessCardView : public QAxObject
{
public:
    explicit _BusinessCardView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CardSize

    For more information, see help context 2937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int CardSize() const; //Returns the value of CardSize
    inline void SetCardSize(int value); //Sets the value of the CardSize property

    /*
    Property Class

    For more information, see help context 2918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property HeadingsFont

    For more information, see help context 2935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* HeadingsFont() const; //Returns the value of HeadingsFont

    /*
    Property Language

    For more information, see help context 2926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 2928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 2936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 2931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2925 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _FormRegionStartup : public QAxObject
{
public:
    explicit _FormRegionStartup(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Method BeforeFormRegionShow

    For more information, see help context 2947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void BeforeFormRegionShow(Outlook::FormRegion* FormRegion);

    /*
    Method GetFormRegionIcon

    For more information, see help context 3307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionIcon(const QString& FormRegionName, int LCID, Outlook::OlFormRegionIcon Icon);

    /*
    Method GetFormRegionManifest

    For more information, see help context 3305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionManifest(const QString& FormRegionName, int LCID);

    /*
    Method GetFormRegionStorage

    For more information, see help context 2946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionStorage(const QString& FormRegionName, IDispatch* Item, int LCID, Outlook::OlFormRegionMode FormRegionMode, Outlook::OlFormRegionSize FormRegionSize);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _FormRegion : public QAxObject
{
public:
    explicit _FormRegion(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Detail

    For more information, see help context 2392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Detail() const; //Returns the value of Detail
    inline void SetDetail(const QString& value); //Sets the value of the Detail property

    /*
    Property DisplayName

    For more information, see help context 2399 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property EnableAutoLayout

    For more information, see help context 3265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableAutoLayout() const; //Returns the value of EnableAutoLayout
    inline void SetEnableAutoLayout(bool value); //Sets the value of the EnableAutoLayout property

    /*
    Property Form

    For more information, see help context 2391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Form() const; //Returns the value of Form

    /*
    Property FormRegionMode

    For more information, see help context 2395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFormRegionMode FormRegionMode() const; //Returns the value of FormRegionMode

    /*
    Property Inspector

    For more information, see help context 2394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* Inspector() const; //Returns the value of Inspector

    /*
    Property InternalName

    For more information, see help context 2400 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString InternalName() const; //Returns the value of InternalName

    /*
    Property IsExpanded

    For more information, see help context 2389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsExpanded() const; //Returns the value of IsExpanded

    /*
    Property Item

    For more information, see help context 2393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Language

    For more information, see help context 2396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Language() const; //Returns the value of Language

    /*
    Property Parent

    For more information, see help context 2388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SuppressControlReplacement

    For more information, see help context 3024 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SuppressControlReplacement() const; //Returns the value of SuppressControlReplacement
    inline void SetSuppressControlReplacement(bool value); //Sets the value of the SuppressControlReplacement property

    /*
    Property Visible

    For more information, see help context 3457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Method Reflow

    For more information, see help context 2398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reflow();

    /*
    Method Select

    For more information, see help context 3216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Select();

    /*
    Method SetControlItemProperty

    For more information, see help context 2401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetControlItemProperty(IDispatch* Control, const QString& PropertyName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _SolutionsModule : public QAxObject
{
public:
    explicit _SolutionsModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 3365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationModuleType

    For more information, see help context 3364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 3363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 3366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 3362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 3367 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Method AddSolution

    For more information, see help context 3368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddSolution(Outlook::MAPIFolder* Solution, Outlook::OlSolutionScope Scope);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _CalendarView : public QAxObject
{
public:
    explicit _CalendarView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 2607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property BoldDatesWithItems

    For more information, see help context 2634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool BoldDatesWithItems() const; //Returns the value of BoldDatesWithItems
    inline void SetBoldDatesWithItems(bool value); //Sets the value of the BoldDatesWithItems property

    /*
    Property BoldSubjects

    For more information, see help context 3232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool BoldSubjects() const; //Returns the value of BoldSubjects
    inline void SetBoldSubjects(bool value); //Sets the value of the BoldSubjects property

    /*
    Property CalendarViewMode

    For more information, see help context 2627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCalendarViewMode CalendarViewMode() const; //Returns the value of CalendarViewMode
    inline void SetCalendarViewMode(Outlook::OlCalendarViewMode value); //Sets the value of the CalendarViewMode property

    /*
    Property Class

    For more information, see help context 2608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DayWeekFont

    For more information, see help context 3027 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* DayWeekFont() const; //Returns the value of DayWeekFont

    /*
    Property DayWeekTimeFont

    For more information, see help context 3026 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* DayWeekTimeFont() const; //Returns the value of DayWeekTimeFont

    /*
    Property DayWeekTimeScale

    For more information, see help context 3025 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDayWeekTimeScale DayWeekTimeScale() const; //Returns the value of DayWeekTimeScale
    inline void SetDayWeekTimeScale(Outlook::OlDayWeekTimeScale value); //Sets the value of the DayWeekTimeScale property

    /*
    Property DaysInMultiDayMode

    For more information, see help context 2640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DaysInMultiDayMode() const; //Returns the value of DaysInMultiDayMode
    inline void SetDaysInMultiDayMode(int value); //Sets the value of the DaysInMultiDayMode property

    /*
    Property DisplayedDates

    For more information, see help context 3028 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant DisplayedDates() const; //Returns the value of DisplayedDates

    /*
    Property EndField

    For more information, see help context 2626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EndField() const; //Returns the value of EndField
    inline void SetEndField(const QString& value); //Sets the value of the EndField property

    /*
    Property Filter

    For more information, see help context 2624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 2616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MonthFont

    For more information, see help context 2638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* MonthFont() const; //Returns the value of MonthFont

    /*
    Property MonthShowEndTime

    For more information, see help context 2632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool MonthShowEndTime() const; //Returns the value of MonthShowEndTime
    inline void SetMonthShowEndTime(bool value); //Sets the value of the MonthShowEndTime property

    /*
    Property Name

    For more information, see help context 2618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property SelectedEndTime

    For more information, see help context 3314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SelectedEndTime() const; //Returns the value of SelectedEndTime

    /*
    Property SelectedStartTime

    For more information, see help context 3313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SelectedStartTime() const; //Returns the value of SelectedStartTime

    /*
    Property Session

    For more information, see help context 2609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 2620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property StartField

    For more information, see help context 2625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StartField() const; //Returns the value of StartField
    inline void SetStartField(const QString& value); //Sets the value of the StartField property

    /*
    Property ViewType

    For more information, see help context 2621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TableView : public QAxObject
{
public:
    explicit _TableView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property AllowInCellEditing

    For more information, see help context 2526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowInCellEditing() const; //Returns the value of AllowInCellEditing
    inline void SetAllowInCellEditing(bool value); //Sets the value of the AllowInCellEditing property

    /*
    Property AlwaysExpandConversation

    For more information, see help context 3520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlwaysExpandConversation() const; //Returns the value of AlwaysExpandConversation
    inline void SetAlwaysExpandConversation(bool value); //Sets the value of the AlwaysExpandConversation property

    /*
    Property Application

    For more information, see help context 2499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property AutoPreview

    For more information, see help context 2536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoPreview AutoPreview() const; //Returns the value of AutoPreview
    inline void SetAutoPreview(Outlook::OlAutoPreview value); //Sets the value of the AutoPreview property

    /*
    Property AutoPreviewFont

    For more information, see help context 2535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* AutoPreviewFont() const; //Returns the value of AutoPreviewFont

    /*
    Property AutomaticColumnSizing

    For more information, see help context 2523 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutomaticColumnSizing() const; //Returns the value of AutomaticColumnSizing
    inline void SetAutomaticColumnSizing(bool value); //Sets the value of the AutomaticColumnSizing property

    /*
    Property AutomaticGrouping

    For more information, see help context 2521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutomaticGrouping() const; //Returns the value of AutomaticGrouping
    inline void SetAutomaticGrouping(bool value); //Sets the value of the AutomaticGrouping property

    /*
    Property Class

    For more information, see help context 2500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ColumnFont

    For more information, see help context 2534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* ColumnFont() const; //Returns the value of ColumnFont

    /*
    Property DefaultExpandCollapseSetting

    For more information, see help context 2522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting() const; //Returns the value of DefaultExpandCollapseSetting
    inline void SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value); //Sets the value of the DefaultExpandCollapseSetting property

    /*
    Property Filter

    For more information, see help context 2516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property GridLineStyle

    For more information, see help context 2528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGridLineStyle GridLineStyle() const; //Returns the value of GridLineStyle
    inline void SetGridLineStyle(Outlook::OlGridLineStyle value); //Sets the value of the GridLineStyle property

    /*
    Property GroupByFields

    For more information, see help context 2518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* GroupByFields() const; //Returns the value of GroupByFields

    /*
    Property HideReadingPaneHeaderInfo

    For more information, see help context 2531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideReadingPaneHeaderInfo() const; //Returns the value of HideReadingPaneHeaderInfo
    inline void SetHideReadingPaneHeaderInfo(bool value); //Sets the value of the HideReadingPaneHeaderInfo property

    /*
    Property Language

    For more information, see help context 2508 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MaxLinesInMultiLineView

    For more information, see help context 2520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLinesInMultiLineView() const; //Returns the value of MaxLinesInMultiLineView
    inline void SetMaxLinesInMultiLineView(int value); //Sets the value of the MaxLinesInMultiLineView property

    /*
    Property MultiLine

    For more information, see help context 2524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMultiLine MultiLine() const; //Returns the value of MultiLine
    inline void SetMultiLine(Outlook::OlMultiLine value); //Sets the value of the MultiLine property

    /*
    Property MultiLineWidth

    For more information, see help context 2525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MultiLineWidth() const; //Returns the value of MultiLineWidth
    inline void SetMultiLineWidth(int value); //Sets the value of the MultiLineWidth property

    /*
    Property Name

    For more information, see help context 2510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RowFont

    For more information, see help context 2533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* RowFont() const; //Returns the value of RowFont

    /*
    Property SaveOption

    For more information, see help context 2511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowConversationByDate

    For more information, see help context 3515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowConversationByDate() const; //Returns the value of ShowConversationByDate
    inline void SetShowConversationByDate(bool value); //Sets the value of the ShowConversationByDate property

    /*
    Property ShowConversationSendersAboveSubject

    For more information, see help context 3557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowConversationSendersAboveSubject() const; //Returns the value of ShowConversationSendersAboveSubject
    inline void SetShowConversationSendersAboveSubject(bool value); //Sets the value of the ShowConversationSendersAboveSubject property

    /*
    Property ShowFullConversations

    For more information, see help context 3516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowFullConversations() const; //Returns the value of ShowFullConversations
    inline void SetShowFullConversations(bool value); //Sets the value of the ShowFullConversations property

    /*
    Property ShowItemsInGroups

    For more information, see help context 2529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowItemsInGroups() const; //Returns the value of ShowItemsInGroups
    inline void SetShowItemsInGroups(bool value); //Sets the value of the ShowItemsInGroups property

    /*
    Property ShowNewItemRow

    For more information, see help context 2527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowNewItemRow() const; //Returns the value of ShowNewItemRow
    inline void SetShowNewItemRow(bool value); //Sets the value of the ShowNewItemRow property

    /*
    Property ShowReadingPane

    For more information, see help context 2530 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowReadingPane() const; //Returns the value of ShowReadingPane
    inline void SetShowReadingPane(bool value); //Sets the value of the ShowReadingPane property

    /*
    Property ShowUnreadAndFlaggedMessages

    For more information, see help context 2532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowUnreadAndFlaggedMessages() const; //Returns the value of ShowUnreadAndFlaggedMessages
    inline void SetShowUnreadAndFlaggedMessages(bool value); //Sets the value of the ShowUnreadAndFlaggedMessages property

    /*
    Property SortFields

    For more information, see help context 2519 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewFields

    For more information, see help context 2517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFields* ViewFields() const; //Returns the value of ViewFields

    /*
    Property ViewType

    For more information, see help context 2513 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GetTable

    For more information, see help context 3315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method GoToDate

    For more information, see help context 2515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MobileItem : public QAxObject
{
public:
    explicit _MobileItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 3323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 3319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 3324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property BillingInformation

    For more information, see help context 3325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 3326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 3327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 3320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 3328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property ConversationIndex

    For more information, see help context 3329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 3330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property Count

    For more information, see help context 3413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property CreationTime

    For more information, see help context 3331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property EntryID

    For more information, see help context 3332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 3333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 3334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 3373 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 3335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property ItemProperties

    For more information, see help context 3415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 3336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property MAPIOBJECT

    For more information, see help context 3337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MessageClass

    For more information, see help context 3338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 3339 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property MobileFormat

    For more information, see help context 3374 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMobileFormat MobileFormat() const; //Returns the value of MobileFormat

    /*
    Property NoAging

    For more information, see help context 3340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 3341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 3342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 3322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 3458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property ReceivedByEntryID

    For more information, see help context 3459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 3460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedTime

    For more information, see help context 3416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property Recipients

    For more information, see help context 3379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReplyRecipientNames

    For more information, see help context 3411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 3412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property SMILBody

    For more information, see help context 3375 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SMILBody() const; //Returns the value of SMILBody
    inline void SetSMILBody(const QString& value); //Sets the value of the SMILBody property

    /*
    Property Saved

    For more information, see help context 3343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 3417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 3461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 3462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 3463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 3344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 3418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 3434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 3321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 3345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 3346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 3414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property To

    For more information, see help context 3409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property UnRead

    For more information, see help context 3347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 3348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 3349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 3350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 3351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 3352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 3352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 3410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* Forward();

    /*
    Method Move

    For more information, see help context 3353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 3354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 3376 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 3377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 3355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 3356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 3356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 3378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send(bool ForceSend);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _JournalItem : public QAxObject
{
public:
    explicit _JournalItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1287 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ContactNames

    For more information, see help context 1265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ContactNames() const; //Returns the value of ContactNames
    inline void SetContactNames(const QString& value); //Sets the value of the ContactNames property

    /*
    Property ConversationID

    For more information, see help context 3471 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1238 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DocPosted

    For more information, see help context 1266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocPosted() const; //Returns the value of DocPosted
    inline void SetDocPosted(bool value); //Sets the value of the DocPosted property

    /*
    Property DocPrinted

    For more information, see help context 1267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocPrinted() const; //Returns the value of DocPrinted
    inline void SetDocPrinted(bool value); //Sets the value of the DocPrinted property

    /*
    Property DocRouted

    For more information, see help context 1268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocRouted() const; //Returns the value of DocRouted
    inline void SetDocRouted(bool value); //Sets the value of the DocRouted property

    /*
    Property DocSaved

    For more information, see help context 1269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocSaved() const; //Returns the value of DocSaved
    inline void SetDocSaved(bool value); //Sets the value of the DocSaved property

    /*
    Property DownloadState

    For more information, see help context 1281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Duration

    For more information, see help context 1270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Duration() const; //Returns the value of Duration
    inline void SetDuration(int value); //Sets the value of the Duration property

    /*
    Property End

    For more information, see help context 1271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime End() const; //Returns the value of End
    inline void SetEnd(const QDateTime& value); //Sets the value of the End property

    /*
    Property EntryID

    For more information, see help context 1240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1247 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1248 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Recipients

    For more information, see help context 1273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Saved

    For more information, see help context 1251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1252 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Start

    For more information, see help context 1274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Start() const; //Returns the value of Start
    inline void SetStart(const QDateTime& value); //Sets the value of the Start property

    /*
    Property Subject

    For more information, see help context 1254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Type

    For more information, see help context 1272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Property UnRead

    For more information, see help context 1255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1256 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3405 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1261 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1262 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method StartTimer

    For more information, see help context 1278 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StartTimer();

    /*
    Method StopTimer

    For more information, see help context 1279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopTimer();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _PostItem : public QAxObject
{
public:
    explicit _PostItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1513 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 1558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property Categories

    For more information, see help context 1517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1519 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FormDescription

    For more information, see help context 1523 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 1548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 1525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1530 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReceivedTime

    For more information, see help context 1549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1578 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 1533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SenderEmailAddress

    For more information, see help context 1567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property SentOn

    For more information, see help context 1551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 1511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TaskCompletedDate

    For more information, see help context 1574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method ClearConversationIndex

    For more information, see help context 1552 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1540 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method Post

    For more information, see help context 1554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Post();

    /*
    Method PrintOut

    For more information, see help context 1544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method Save

    For more information, see help context 1545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method SetACLs

    For more information, see help context 1563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SetACLs();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TaskItem : public QAxObject
{
public:
    explicit _TaskItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property ActualWork

    For more information, see help context 1720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ActualWork() const; //Returns the value of ActualWork
    inline void SetActualWork(int value); //Sets the value of the ActualWork property

    /*
    Property Application

    For more information, see help context 1682 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1688 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property CardData

    For more information, see help context 1721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CardData() const; //Returns the value of CardData
    inline void SetCardData(const QString& value); //Sets the value of the CardData property

    /*
    Property Categories

    For more information, see help context 1690 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1683 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Complete

    For more information, see help context 1722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Complete() const; //Returns the value of Complete
    inline void SetComplete(bool value); //Sets the value of the Complete property

    /*
    Property Conflicts

    For more information, see help context 1766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ContactNames

    For more information, see help context 1724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ContactNames() const; //Returns the value of ContactNames
    inline void SetContactNames(const QString& value); //Sets the value of the ContactNames property

    /*
    Property Contacts

    For more information, see help context 1723 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Contacts() const; //Returns the value of Contacts
    inline void SetContacts(const QString& value); //Sets the value of the Contacts property

    /*
    Property ConversationID

    For more information, see help context 3474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DateCompleted

    For more information, see help context 1725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DateCompleted() const; //Returns the value of DateCompleted
    inline void SetDateCompleted(const QDateTime& value); //Sets the value of the DateCompleted property

    /*
    Property DelegationState

    For more information, see help context 1726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskDelegationState DelegationState() const; //Returns the value of DelegationState

    /*
    Property Delegator

    For more information, see help context 1727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Delegator() const; //Returns the value of Delegator

    /*
    Property DownloadState

    For more information, see help context 1759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property DueDate

    For more information, see help context 1728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DueDate() const; //Returns the value of DueDate
    inline void SetDueDate(const QDateTime& value); //Sets the value of the DueDate property

    /*
    Property EntryID

    For more information, see help context 1695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsRecurring

    For more information, see help context 1729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRecurring() const; //Returns the value of IsRecurring

    /*
    Property ItemProperties

    For more information, see help context 1761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1702 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property Ordinal

    For more information, see help context 1730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Ordinal() const; //Returns the value of Ordinal
    inline void SetOrdinal(int value); //Sets the value of the Ordinal property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1704 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1705 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Owner

    For more information, see help context 1731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Owner() const; //Returns the value of Owner
    inline void SetOwner(const QString& value); //Sets the value of the Owner property

    /*
    Property Ownership

    For more information, see help context 1732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskOwnership Ownership() const; //Returns the value of Ownership

    /*
    Property Parent

    For more information, see help context 1685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PercentComplete

    For more information, see help context 1733 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PercentComplete() const; //Returns the value of PercentComplete
    inline void SetPercentComplete(int value); //Sets the value of the PercentComplete property

    /*
    Property PropertyAccessor

    For more information, see help context 1767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Recipients

    For more information, see help context 1734 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1735 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property ResponseState

    For more information, see help context 1740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskResponse ResponseState() const; //Returns the value of ResponseState

    /*
    Property Role

    For more information, see help context 1741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Role() const; //Returns the value of Role
    inline void SetRole(const QString& value); //Sets the value of the Role property

    /*
    Property Saved

    For more information, see help context 1706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SchedulePlusPriority

    For more information, see help context 1742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SchedulePlusPriority() const; //Returns the value of SchedulePlusPriority
    inline void SetSchedulePlusPriority(const QString& value); //Sets the value of the SchedulePlusPriority property

    /*
    Property SendUsingAccount

    For more information, see help context 1768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sensitivity

    For more information, see help context 1707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1684 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property StartDate

    For more information, see help context 1743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartDate() const; //Returns the value of StartDate
    inline void SetStartDate(const QDateTime& value); //Sets the value of the StartDate property

    /*
    Property Status

    For more information, see help context 1744 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskStatus Status() const; //Returns the value of Status
    inline void SetStatus(Outlook::OlTaskStatus value); //Sets the value of the Status property

    /*
    Property StatusOnCompletionRecipients

    For more information, see help context 1745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StatusOnCompletionRecipients() const; //Returns the value of StatusOnCompletionRecipients
    inline void SetStatusOnCompletionRecipients(const QString& value); //Sets the value of the StatusOnCompletionRecipients property

    /*
    Property StatusUpdateRecipients

    For more information, see help context 1746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StatusUpdateRecipients() const; //Returns the value of StatusUpdateRecipients
    inline void SetStatusUpdateRecipients(const QString& value); //Sets the value of the StatusUpdateRecipients property

    /*
    Property Subject

    For more information, see help context 1709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TeamTask

    For more information, see help context 1747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TeamTask() const; //Returns the value of TeamTask
    inline void SetTeamTask(bool value); //Sets the value of the TeamTask property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property TotalWork

    For more information, see help context 1748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TotalWork() const; //Returns the value of TotalWork
    inline void SetTotalWork(int value); //Sets the value of the TotalWork property

    /*
    Property UnRead

    For more information, see help context 1710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Assign

    For more information, see help context 1749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* Assign();

    /*
    Method CancelResponseState

    For more information, see help context 1750 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void CancelResponseState();

    /*
    Method ClearRecurrencePattern

    For more information, see help context 1751 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearRecurrencePattern();

    /*
    Method Close

    For more information, see help context 1712 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetRecurrencePattern

    For more information, see help context 1752 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RecurrencePattern* GetRecurrencePattern();

    /*
    Method MarkComplete

    For more information, see help context 1753 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkComplete();

    /*
    Method Move

    For more information, see help context 1716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Respond

    For more information, see help context 1754 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* Respond(Outlook::OlTaskResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog);

    /*
    Method Save

    For more information, see help context 1718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1755 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method SkipRecurrence

    For more information, see help context 1756 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SkipRecurrence();

    /*
    Method StatusReport

    For more information, see help context 1757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* StatusReport();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// skipping event interface AccountSelectorEvents

class OUTLOOK_EXPORT _DistListItem : public QAxObject
{
public:
    explicit _DistListItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property CheckSum

    For more information, see help context 1150 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int CheckSum() const; //Returns the value of CheckSum

    /*
    Property Class

    For more information, see help context 1111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DLName

    For more information, see help context 1148 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DLName() const; //Returns the value of DLName
    inline void SetDLName(const QString& value); //Sets the value of the DLName property

    /*
    Property DownloadState

    For more information, see help context 1157 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1124 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1125 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1126 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1163 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1127 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1153 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1128 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1162 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MemberCount

    For more information, see help context 1149 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MemberCount() const; //Returns the value of MemberCount

    /*
    Property Members

    For more information, see help context 1151 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Members() const; //Returns the value of Members
    inline void SetMembers(const QVariant& value); //Sets the value of the Members property

    /*
    Property MessageClass

    For more information, see help context 1129 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1130 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1131 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OneOffMembers

    For more information, see help context 1152 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant OneOffMembers() const; //Returns the value of OneOffMembers
    inline void SetOneOffMembers(const QVariant& value); //Sets the value of the OneOffMembers property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1132 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1177 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 1134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TaskCompletedDate

    For more information, see help context 1171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3034 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method AddMember

    For more information, see help context 1159 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddMember(Outlook::Recipient* Recipient);

    /*
    Method AddMembers

    For more information, see help context 1154 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddMembers(Outlook::Recipients* Recipients);

    /*
    Method ClearTaskFlag

    For more information, see help context 3036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1141 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetMember

    For more information, see help context 1156 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetMember(int Index);

    /*
    Method MarkAsTask

    For more information, see help context 3035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method RemoveMember

    For more information, see help context 1160 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveMember(Outlook::Recipient* Recipient);

    /*
    Method RemoveMembers

    For more information, see help context 1155 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveMembers(Outlook::Recipients* Recipients);

    /*
    Method Save

    For more information, see help context 1146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1158 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ReportItem : public QAxObject
{
public:
    explicit _ReportItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3493 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1673 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RetentionExpirationDate

    For more information, see help context 3563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property Saved

    For more information, see help context 1658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3492 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _RemoteItem : public QAxObject
{
public:
    explicit _RemoteItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HasAttachment

    For more information, see help context 1620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasAttachment() const; //Returns the value of HasAttachment

    /*
    Property Importance

    For more information, see help context 1598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RemoteMessageClass

    For more information, see help context 1621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteMessageClass() const; //Returns the value of RemoteMessageClass

    /*
    Property Saved

    For more information, see help context 1606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TransferSize

    For more information, see help context 1622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TransferSize() const; //Returns the value of TransferSize

    /*
    Property TransferTime

    For more information, see help context 1623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TransferTime() const; //Returns the value of TransferTime

    /*
    Property UnRead

    For more information, see help context 1610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TaskRequestItem : public QAxObject
{
public:
    explicit _TaskRequestItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1913 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1876 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1914 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1881 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1912 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1910 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1911 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1890 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1915 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1899 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TaskRequestAcceptItem : public QAxObject
{
public:
    explicit _TaskRequestAcceptItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1816 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1785 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1813 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1793 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1794 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1795 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1801 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1802 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1811 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TaskRequestDeclineItem : public QAxObject
{
public:
    explicit _TaskRequestDeclineItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1826 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1820 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1831 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1861 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1836 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1837 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1841 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1866 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1821 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1846 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1851 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _TaskRequestUpdateItem : public QAxObject
{
public:
    explicit _TaskRequestUpdateItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Actions

    For more information, see help context 1921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1925 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1956 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1938 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1945 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1948 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ConversationHeader : public QAxObject
{
public:
    explicit _ConversationHeader(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConversationID

    For more information, see help context 3542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationTopic

    For more information, see help context 3543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property Parent

    For more information, see help context 3545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetConversation

    For more information, see help context 3541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetItems

    For more information, see help context 3544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetItems();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _PeopleView : public QAxObject
{
public:
    explicit _PeopleView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3578 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3581 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 3588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 3582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3575 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _ThreadView : public QAxObject
{
public:
    explicit _ThreadView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 3616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _MessageListView : public QAxObject
{
public:
    explicit _MessageListView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 3668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// Actual coclasses
class OUTLOOK_EXPORT _RecipientControl : public QAxWidget
{
public:
    explicit _RecipientControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    _RecipientControl(_DRecipientControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property BackColor

    For more information, see help context 1000003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(int value); //Sets the value of the BackColor property

    /*
    Property Enabled

    For more information, see help context 1000002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(int value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Font() const; //Returns the value of Font
    inline void SetFont(IDispatch* value); //Sets the value of the Font property

    /*
    Property ForeColor

    For more information, see help context 1000004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(int value); //Sets the value of the ForeColor property

    /*
    Property ReadOnly

    For more information, see help context 1000005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReadOnly() const; //Returns the value of ReadOnly
    inline void SetReadOnly(int value); //Sets the value of the ReadOnly property

    /*
    Property SpecialEffect

    For more information, see help context 1000007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SpecialEffect() const; //Returns the value of SpecialEffect
    inline void SetSpecialEffect(int value); //Sets the value of the SpecialEffect property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT _DocSiteControl : public QAxWidget
{
public:
    explicit _DocSiteControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    _DocSiteControl(_DDocSiteControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ReadOnly

    For more information, see help context 1000012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReadOnly() const; //Returns the value of ReadOnly
    inline void SetReadOnly(int value); //Sets the value of the ReadOnly property

    /*
    Property SuppressAttachments

    For more information, see help context 1000013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SuppressAttachments() const; //Returns the value of SuppressAttachments
    inline void SetSuppressAttachments(int value); //Sets the value of the SuppressAttachments property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkTextBox : public QAxWidget
{
public:
    explicit OlkTextBox(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkTextBox(_OlkTextBox *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoSize

    For more information, see help context 1000035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoTab

    For more information, see help context 1000036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoTab() const; //Returns the value of AutoTab
    inline void SetAutoTab(bool value); //Sets the value of the AutoTab property

    /*
    Property AutoWordSelect

    For more information, see help context 1000037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property DragBehavior

    For more information, see help context 1000041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDragBehavior DragBehavior() const; //Returns the value of DragBehavior
    inline void SetDragBehavior(Outlook::OlDragBehavior value); //Sets the value of the DragBehavior property

    /*
    Property EnableRichText

    For more information, see help context 1000495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableRichText() const; //Returns the value of EnableRichText
    inline void SetEnableRichText(bool value); //Sets the value of the EnableRichText property

    /*
    Property Enabled

    For more information, see help context 1000042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property EnterKeyBehavior

    For more information, see help context 1000044 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnterKeyBehavior() const; //Returns the value of EnterKeyBehavior
    inline void SetEnterKeyBehavior(bool value); //Sets the value of the EnterKeyBehavior property

    /*
    Property Font

    For more information, see help context 1000045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property IntegralHeight

    For more information, see help context 1000048 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IntegralHeight() const; //Returns the value of IntegralHeight
    inline void SetIntegralHeight(bool value); //Sets the value of the IntegralHeight property

    /*
    Property Locked

    For more information, see help context 1000049 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MaxLength

    For more information, see help context 1000050 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLength() const; //Returns the value of MaxLength
    inline void SetMaxLength(int value); //Sets the value of the MaxLength property

    /*
    Property MouseIcon

    For more information, see help context 1000051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property MultiLine

    For more information, see help context 1000053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool MultiLine() const; //Returns the value of MultiLine
    inline void SetMultiLine(bool value); //Sets the value of the MultiLine property

    /*
    Property PasswordChar

    For more information, see help context 1000054 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PasswordChar() const; //Returns the value of PasswordChar
    inline void SetPasswordChar(const QString& value); //Sets the value of the PasswordChar property

    /*
    Property Scrollbars

    For more information, see help context 1000055 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlScrollBars Scrollbars() const; //Returns the value of Scrollbars
    inline void SetScrollbars(Outlook::OlScrollBars value); //Sets the value of the Scrollbars property

    /*
    Property SelLength

    For more information, see help context 1000063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelLength() const; //Returns the value of SelLength
    inline void SetSelLength(int value); //Sets the value of the SelLength property

    /*
    Property SelStart

    For more information, see help context 1000062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelStart() const; //Returns the value of SelStart
    inline void SetSelStart(int value); //Sets the value of the SelStart property

    /*
    Property SelText

    For more information, see help context 1000064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SelText() const; //Returns the value of SelText

    /*
    Property SelectionMargin

    For more information, see help context 1000056 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SelectionMargin() const; //Returns the value of SelectionMargin
    inline void SetSelectionMargin(bool value); //Sets the value of the SelectionMargin property

    /*
    Property TabKeyBehavior

    For more information, see help context 1000057 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TabKeyBehavior() const; //Returns the value of TabKeyBehavior
    inline void SetTabKeyBehavior(bool value); //Sets the value of the TabKeyBehavior property

    /*
    Property Text

    For more information, see help context 1000058 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000059 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Value

    For more information, see help context 1000060 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

    /*
    Method Clear

    For more information, see help context 1000068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method Cut

    For more information, see help context 1000065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Cut();

    /*
    Method Paste

    For more information, see help context 1000067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Paste();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkLabel : public QAxWidget
{
public:
    explicit OlkLabel(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkLabel(_OlkLabel *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Accelerator

    For more information, see help context 1000086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property AutoSize

    For more information, see help context 1000087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property BackColor

    For more information, see help context 1000088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property BorderStyle

    For more information, see help context 1000090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Caption

    For more information, see help context 1000091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property TextAlign

    For more information, see help context 1000097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property UseHeaderColor

    For more information, see help context 1000497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UseHeaderColor() const; //Returns the value of UseHeaderColor
    inline void SetUseHeaderColor(bool value); //Sets the value of the UseHeaderColor property

    /*
    Property Value

    For more information, see help context 1000099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000098 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkCommandButton : public QAxWidget
{
public:
    explicit OlkCommandButton(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkCommandButton(_OlkCommandButton *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Accelerator

    For more information, see help context 1000109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property AutoSize

    For more information, see help context 1000110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property Caption

    For more information, see help context 1000111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property DisplayDropArrow

    For more information, see help context 1000501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DisplayDropArrow() const; //Returns the value of DisplayDropArrow
    inline void SetDisplayDropArrow(bool value); //Sets the value of the DisplayDropArrow property

    /*
    Property Enabled

    For more information, see help context 1000112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property MouseIcon

    For more information, see help context 1000114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property Picture

    For more information, see help context 1000496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap Picture() const; //Returns the value of Picture
    inline void SetPicture(const QPixmap& value); //Sets the value of the Picture property

    /*
    Property PictureAlignment

    For more information, see help context 1000500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPictureAlignment PictureAlignment() const; //Returns the value of PictureAlignment
    inline void SetPictureAlignment(Outlook::OlPictureAlignment value); //Sets the value of the PictureAlignment property

    /*
    Property TextAlign

    For more information, see help context 1000117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property WordWrap

    For more information, see help context 1000116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkCheckBox : public QAxWidget
{
public:
    explicit OlkCheckBox(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkCheckBox(_OlkCheckBox *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Accelerator

    For more information, see help context 1000134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property Alignment

    For more information, see help context 1000135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property BackColor

    For more information, see help context 1000136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Caption

    For more information, see help context 1000138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000141 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property TripleState

    For more information, see help context 1000144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TripleState() const; //Returns the value of TripleState
    inline void SetTripleState(bool value); //Sets the value of the TripleState property

    /*
    Property Value

    For more information, see help context 1000145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkOptionButton : public QAxWidget
{
public:
    explicit OlkOptionButton(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkOptionButton(_OlkOptionButton *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Accelerator

    For more information, see help context 1000164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Accelerator() const; //Returns the value of Accelerator
    inline void SetAccelerator(const QString& value); //Sets the value of the Accelerator property

    /*
    Property Alignment

    For more information, see help context 1000165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property BackColor

    For more information, see help context 1000166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Caption

    For more information, see help context 1000168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property GroupName

    For more information, see help context 1000172 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GroupName() const; //Returns the value of GroupName
    inline void SetGroupName(const QString& value); //Sets the value of the GroupName property

    /*
    Property MouseIcon

    For more information, see help context 1000173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property Value

    For more information, see help context 1000175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Property WordWrap

    For more information, see help context 1000176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WordWrap() const; //Returns the value of WordWrap
    inline void SetWordWrap(bool value); //Sets the value of the WordWrap property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkComboBox : public QAxWidget
{
public:
    explicit OlkComboBox(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkComboBox(_OlkComboBox *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoSize

    For more information, see help context 1000194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoTab

    For more information, see help context 1000195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoTab() const; //Returns the value of AutoTab
    inline void SetAutoTab(bool value); //Sets the value of the AutoTab property

    /*
    Property AutoWordSelect

    For more information, see help context 1000196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property DragBehavior

    For more information, see help context 1000199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDragBehavior DragBehavior() const; //Returns the value of DragBehavior
    inline void SetDragBehavior(Outlook::OlDragBehavior value); //Sets the value of the DragBehavior property

    /*
    Property Enabled

    For more information, see help context 1000200 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property ListCount

    For more information, see help context 1000220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListIndex

    For more information, see help context 1000219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property Locked

    For more information, see help context 1000207 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MaxLength

    For more information, see help context 1000210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLength() const; //Returns the value of MaxLength
    inline void SetMaxLength(int value); //Sets the value of the MaxLength property

    /*
    Property MouseIcon

    For more information, see help context 1000211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property SelLength

    For more information, see help context 1000222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelLength() const; //Returns the value of SelLength
    inline void SetSelLength(int value); //Sets the value of the SelLength property

    /*
    Property SelStart

    For more information, see help context 1000221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelStart() const; //Returns the value of SelStart
    inline void SetSelStart(int value); //Sets the value of the SelStart property

    /*
    Property SelText

    For more information, see help context 1000223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SelText() const; //Returns the value of SelText

    /*
    Property SelectionMargin

    For more information, see help context 1000213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SelectionMargin() const; //Returns the value of SelectionMargin
    inline void SetSelectionMargin(bool value); //Sets the value of the SelectionMargin property

    /*
    Property Style

    For more information, see help context 1000214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlComboBoxStyle Style() const; //Returns the value of Style
    inline void SetStyle(Outlook::OlComboBoxStyle value); //Sets the value of the Style property

    /*
    Property Text

    For more information, see help context 1000215 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property TopIndex

    For more information, see help context 1000217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TopIndex() const; //Returns the value of TopIndex
    inline void SetTopIndex(int value); //Sets the value of the TopIndex property

    /*
    Property Value

    For more information, see help context 1000218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method AddItem

    For more information, see help context 1000230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText);

    /*
    Method AddItem

    For more information, see help context 1000230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 1000229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method Cut

    For more information, see help context 1000226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Cut();

    /*
    Method DropDown

    For more information, see help context 1000232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

    /*
    Method GetItem

    For more information, see help context 1000224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetItem(int Index);

    /*
    Method Paste

    For more information, see help context 1000228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Paste();

    /*
    Method RemoveItem

    For more information, see help context 1000231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveItem(int Index);

    /*
    Method SetItem

    For more information, see help context 1000225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetItem(int Index, const QString& Item);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkListBox : public QAxWidget
{
public:
    explicit OlkListBox(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkListBox(_OlkListBox *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property BackColor

    For more information, see help context 1000252 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BorderStyle

    For more information, see help context 1000251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Enabled

    For more information, see help context 1000253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property ListCount

    For more information, see help context 1000267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListCount() const; //Returns the value of ListCount

    /*
    Property ListIndex

    For more information, see help context 1000266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ListIndex() const; //Returns the value of ListIndex
    inline void SetListIndex(int value); //Sets the value of the ListIndex property

    /*
    Property Locked

    For more information, see help context 1000257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MatchEntry

    For more information, see help context 1000258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMatchEntry MatchEntry() const; //Returns the value of MatchEntry
    inline void SetMatchEntry(Outlook::OlMatchEntry value); //Sets the value of the MatchEntry property

    /*
    Property MouseIcon

    For more information, see help context 1000259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property MultiSelect

    For more information, see help context 1000261 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMultiSelect MultiSelect() const; //Returns the value of MultiSelect
    inline void SetMultiSelect(Outlook::OlMultiSelect value); //Sets the value of the MultiSelect property

    /*
    Property Text

    For more information, see help context 1000262 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property TopIndex

    For more information, see help context 1000264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TopIndex() const; //Returns the value of TopIndex
    inline void SetTopIndex(int value); //Sets the value of the TopIndex property

    /*
    Property Value

    For more information, see help context 1000265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method AddItem

    For more information, see help context 1000276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText);

    /*
    Method AddItem

    For more information, see help context 1000276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddItem(const QString& ItemText, const QVariant& Index);

    /*
    Method Clear

    For more information, see help context 1000275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Clear();

    /*
    Method Copy

    For more information, see help context 1000273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Copy();

    /*
    Method GetItem

    For more information, see help context 1000268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetItem(int Index);

    /*
    Method GetSelected

    For more information, see help context 1000270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool GetSelected(int Index);

    /*
    Method RemoveItem

    For more information, see help context 1000277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveItem(int Index);

    /*
    Method SetItem

    For more information, see help context 1000269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetItem(int Index, const QString& Item);

    /*
    Method SetSelected

    For more information, see help context 1000271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetSelected(int Index, bool Selected);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkInfoBar : public QAxWidget
{
public:
    explicit OlkInfoBar(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkInfoBar(_OlkInfoBar *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property MouseIcon

    For more information, see help context 1000295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkContactPhoto : public QAxWidget
{
public:
    explicit OlkContactPhoto(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkContactPhoto(_OlkContactPhoto *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Enabled

    For more information, see help context 1000306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property MouseIcon

    For more information, see help context 1000307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkBusinessCardControl : public QAxWidget
{
public:
    explicit OlkBusinessCardControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkBusinessCardControl(_OlkBusinessCardControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property MouseIcon

    For more information, see help context 1000324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkPageControl : public QAxWidget
{
public:
    explicit OlkPageControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkPageControl(_OlkPageControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Page

    For more information, see help context 1000336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPageType Page() const; //Returns the value of Page
    inline void SetPage(Outlook::OlPageType value); //Sets the value of the Page property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkDateControl : public QAxWidget
{
public:
    explicit OlkDateControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkDateControl(_OlkDateControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoSize

    For more information, see help context 1000341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoWordSelect

    For more information, see help context 1000342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Date

    For more information, see help context 1000345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Date() const; //Returns the value of Date
    inline void SetDate(const QDateTime& value); //Sets the value of the Date property

    /*
    Property Enabled

    For more information, see help context 1000347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property Locked

    For more information, see help context 1000352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property ShowNoneButton

    For more information, see help context 1000355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowNoneButton() const; //Returns the value of ShowNoneButton
    inline void SetShowNoneButton(bool value); //Sets the value of the ShowNoneButton property

    /*
    Property Text

    For more information, see help context 1000356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Value

    For more information, see help context 1000358 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkTimeControl : public QAxWidget
{
public:
    explicit OlkTimeControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkTimeControl(_OlkTimeControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoSize

    For more information, see help context 1000378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property AutoWordSelect

    For more information, see help context 1000379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoWordSelect() const; //Returns the value of AutoWordSelect
    inline void SetAutoWordSelect(bool value); //Sets the value of the AutoWordSelect property

    /*
    Property BackColor

    For more information, see help context 1000380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Enabled

    For more information, see help context 1000383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property EnterFieldBehavior

    For more information, see help context 1000384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEnterFieldBehavior EnterFieldBehavior() const; //Returns the value of EnterFieldBehavior
    inline void SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value); //Sets the value of the EnterFieldBehavior property

    /*
    Property Font

    For more information, see help context 1000385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property HideSelection

    For more information, see help context 1000387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideSelection() const; //Returns the value of HideSelection
    inline void SetHideSelection(bool value); //Sets the value of the HideSelection property

    /*
    Property IntervalTime

    For more information, see help context 1000397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime IntervalTime() const; //Returns the value of IntervalTime
    inline void SetIntervalTime(const QDateTime& value); //Sets the value of the IntervalTime property

    /*
    Property Locked

    For more information, see help context 1000388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000390 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property ReferenceTime

    For more information, see help context 1000391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReferenceTime() const; //Returns the value of ReferenceTime
    inline void SetReferenceTime(const QDateTime& value); //Sets the value of the ReferenceTime property

    /*
    Property Style

    For more information, see help context 1000392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTimeStyle Style() const; //Returns the value of Style
    inline void SetStyle(Outlook::OlTimeStyle value); //Sets the value of the Style property

    /*
    Property Text

    For more information, see help context 1000394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

    /*
    Property TextAlign

    For more information, see help context 1000395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTextAlign TextAlign() const; //Returns the value of TextAlign
    inline void SetTextAlign(Outlook::OlTextAlign value); //Sets the value of the TextAlign property

    /*
    Property Time

    For more information, see help context 1000393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Time() const; //Returns the value of Time
    inline void SetTime(const QDateTime& value); //Sets the value of the Time property

    /*
    Property Value

    For more information, see help context 1000396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkCategory : public QAxWidget
{
public:
    explicit OlkCategory(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkCategory(_OlkCategory *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AutoSize

    For more information, see help context 1000439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoSize() const; //Returns the value of AutoSize
    inline void SetAutoSize(bool value); //Sets the value of the AutoSize property

    /*
    Property BackColor

    For more information, see help context 1000440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor BackColor() const; //Returns the value of BackColor
    inline void SetBackColor(const QColor& value); //Sets the value of the BackColor property

    /*
    Property BackStyle

    For more information, see help context 1000441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBackStyle BackStyle() const; //Returns the value of BackStyle
    inline void SetBackStyle(Outlook::OlBackStyle value); //Sets the value of the BackStyle property

    /*
    Property Enabled

    For more information, see help context 1000442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property ForeColor

    For more information, see help context 1000443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkFrameHeader : public QAxWidget
{
public:
    explicit OlkFrameHeader(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkFrameHeader(_OlkFrameHeader *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Alignment

    For more information, see help context 1000494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlignment Alignment() const; //Returns the value of Alignment
    inline void SetAlignment(Outlook::OlAlignment value); //Sets the value of the Alignment property

    /*
    Property Caption

    For more information, see help context 1000462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property Enabled

    For more information, see help context 1000465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Font

    For more information, see help context 1000463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline stdole::Font* Font() const; //Returns the value of Font

    /*
    Property ForeColor

    For more information, see help context 1000464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor ForeColor() const; //Returns the value of ForeColor
    inline void SetForeColor(const QColor& value); //Sets the value of the ForeColor property

    /*
    Property MouseIcon

    For more information, see help context 1000466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkSenderPhoto : public QAxWidget
{
public:
    explicit OlkSenderPhoto(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkSenderPhoto(_OlkSenderPhoto *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Enabled

    For more information, see help context 1000478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property MouseIcon

    For more information, see help context 1000479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000480 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property PreferredHeight

    For more information, see help context 1000482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PreferredHeight() const; //Returns the value of PreferredHeight

    /*
    Property PreferredWidth

    For more information, see help context 1000481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PreferredWidth() const; //Returns the value of PreferredWidth

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT PropertyAccessor : public QAxObject
{
public:
    explicit PropertyAccessor(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    PropertyAccessor(_PropertyAccessor *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 1966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 1967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 1969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 1968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method BinaryToString

    For more information, see help context 1977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BinaryToString(const QVariant& Value);

    /*
    Method DeleteProperties

    For more information, see help context 1979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant DeleteProperties(QVariant& SchemaNames);

    /*
    Method DeleteProperty

    For more information, see help context 1978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeleteProperty(const QString& SchemaName);

    /*
    Method GetProperties

    For more information, see help context 1972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetProperties(const QVariant& SchemaNames);

    /*
    Method GetProperty

    For more information, see help context 1970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetProperty(const QString& SchemaName);

    /*
    Method LocalTimeToUTC

    For more information, see help context 1975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LocalTimeToUTC(const QDateTime& Value);

    /*
    Method SetProperties

    For more information, see help context 1973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant SetProperties(const QVariant& SchemaNames, const QVariant& Values);

    /*
    Method SetProperty

    For more information, see help context 1971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetProperty(const QString& SchemaName, const QVariant& Value);

    /*
    Method StringToBinary

    For more information, see help context 1976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant StringToBinary(const QString& Value);

    /*
    Method UTCToLocalTime

    For more information, see help context 1974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime UTCToLocalTime(const QDateTime& Value);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationModule : public QAxObject
{
public:
    explicit NavigationModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationModule(_NavigationModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationModuleType

    For more information, see help context 3241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationModules : public QAxObject
{
public:
    explicit NavigationModules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationModules(_NavigationModules *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2795 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetNavigationModule

    For more information, see help context 3240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModule* GetNavigationModule(Outlook::OlNavigationModuleType ModuleType);

    /*
    Method Item

    For more information, see help context 2800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationModule* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Store : public QAxObject
{
public:
    explicit Store(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Store(_Store *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 3512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Categories* Categories() const; //Returns the value of Categories

    /*
    Property Class

    For more information, see help context 797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayName

    For more information, see help context 800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property ExchangeStoreType

    For more information, see help context 802 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeStoreType ExchangeStoreType() const; //Returns the value of ExchangeStoreType

    /*
    Property FilePath

    For more information, see help context 803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FilePath() const; //Returns the value of FilePath

    /*
    Property IsCachedExchange

    For more information, see help context 804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsCachedExchange() const; //Returns the value of IsCachedExchange

    /*
    Property IsConversationEnabled

    For more information, see help context 3518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConversationEnabled() const; //Returns the value of IsConversationEnabled

    /*
    Property IsDataFileStore

    For more information, see help context 805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsDataFileStore() const; //Returns the value of IsDataFileStore

    /*
    Property IsInstantSearchEnabled

    For more information, see help context 3264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsInstantSearchEnabled() const; //Returns the value of IsInstantSearchEnabled

    /*
    Property IsOpen

    For more information, see help context 808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsOpen() const; //Returns the value of IsOpen

    /*
    Property MAPIOBJECT

    For more information, see help context 809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Parent

    For more information, see help context 799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 811 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StoreID

    For more information, see help context 801 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StoreID() const; //Returns the value of StoreID

    /*
    Method CreateUnifiedGroup

    For more information, see help context 3631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CreateUnifiedGroup(const QString& Name, const QString& Alias, const QString& Description, bool FAutoSubscribeMembers, Outlook::OlUnifiedGroupType GroupType);

    /*
    Method DeleteUnifiedGroup

    For more information, see help context 3632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeleteUnifiedGroup(const QString& GroupSmtpAddress);

    /*
    Method GetDefaultFolder

    For more information, see help context 3437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetDefaultFolder(Outlook::OlDefaultFolders FolderType);

    /*
    Method GetRootFolder

    For more information, see help context 806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetRootFolder();

    /*
    Method GetRules

    For more information, see help context 810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Rules* GetRules();

    /*
    Method GetSearchFolders

    For more information, see help context 807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* GetSearchFolders();

    /*
    Method GetSpecialFolder

    For more information, see help context 812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetSpecialFolder(Outlook::OlSpecialFolders FolderType);

    /*
    Method RefreshQuotaDisplay

    For more information, see help context 3380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshQuotaDisplay();

    /*
    Method VerifyGroupFollowInfo

    For more information, see help context 3676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool VerifyGroupFollowInfo(int GroupFollowOption);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Rules : public QAxObject
{
public:
    explicit Rules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Rules(_Rules *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2154 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2155 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2158 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property IsRssRulesProcessingEnabled

    For more information, see help context 3249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRssRulesProcessingEnabled() const; //Returns the value of IsRssRulesProcessingEnabled
    inline void SetIsRssRulesProcessingEnabled(bool value); //Sets the value of the IsRssRulesProcessingEnabled property

    /*
    Property Parent

    For more information, see help context 2157 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2156 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Create

    For more information, see help context 2160 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Rule* Create(const QString& Name, Outlook::OlRuleType RuleType);

    /*
    Method Item

    For more information, see help context 2159 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Rule* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2162 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method Save

    For more information, see help context 2161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method Save

    For more information, see help context 2161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save(const QVariant& ShowProgress);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RuleActions : public QAxObject
{
public:
    explicit RuleActions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    RuleActions(_RuleActions *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2178 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssignToCategory

    For more information, see help context 2196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AssignToCategoryRuleAction* AssignToCategory() const; //Returns the value of AssignToCategory

    /*
    Property CC

    For more information, see help context 2192 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* CC() const; //Returns the value of CC

    /*
    Property Class

    For more information, see help context 2179 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ClearCategories

    For more information, see help context 3233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* ClearCategories() const; //Returns the value of ClearCategories

    /*
    Property CopyToFolder

    For more information, see help context 2184 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MoveOrCopyRuleAction* CopyToFolder() const; //Returns the value of CopyToFolder

    /*
    Property Count

    For more information, see help context 2182 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Delete

    For more information, see help context 2186 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* Delete() const; //Returns the value of Delete

    /*
    Property DeletePermanently

    For more information, see help context 2185 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* DeletePermanently() const; //Returns the value of DeletePermanently

    /*
    Property DesktopAlert

    For more information, see help context 2187 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* DesktopAlert() const; //Returns the value of DesktopAlert

    /*
    Property Forward

    For more information, see help context 2193 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* Forward() const; //Returns the value of Forward

    /*
    Property ForwardAsAttachment

    For more information, see help context 2194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* ForwardAsAttachment() const; //Returns the value of ForwardAsAttachment

    /*
    Property MarkAsTask

    For more information, see help context 2198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MarkAsTaskRuleAction* MarkAsTask() const; //Returns the value of MarkAsTask

    /*
    Property MoveToFolder

    For more information, see help context 2191 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MoveOrCopyRuleAction* MoveToFolder() const; //Returns the value of MoveToFolder

    /*
    Property NewItemAlert

    For more information, see help context 2199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NewItemAlertRuleAction* NewItemAlert() const; //Returns the value of NewItemAlert

    /*
    Property NotifyDelivery

    For more information, see help context 2188 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* NotifyDelivery() const; //Returns the value of NotifyDelivery

    /*
    Property NotifyRead

    For more information, see help context 2189 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* NotifyRead() const; //Returns the value of NotifyRead

    /*
    Property Parent

    For more information, see help context 2181 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PlaySound

    For more information, see help context 2197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PlaySoundRuleAction* PlaySound() const; //Returns the value of PlaySound

    /*
    Property Redirect

    For more information, see help context 2195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SendRuleAction* Redirect() const; //Returns the value of Redirect

    /*
    Property Session

    For more information, see help context 2180 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Stop

    For more information, see help context 2190 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleAction* Stop() const; //Returns the value of Stop

    /*
    Method Item

    For more information, see help context 2183 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_RuleAction* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MoveOrCopyRuleAction : public QAxObject
{
public:
    explicit MoveOrCopyRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MoveOrCopyRuleAction(_MoveOrCopyRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2208 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Folder

    For more information, see help context 2214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder
    inline void SetFolder(Outlook::MAPIFolder* value); //Sets the value of the Folder property

    /*
    Property Parent

    For more information, see help context 2211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RuleAction : public QAxObject
{
public:
    explicit RuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    RuleAction(_RuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2206 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2205 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SendRuleAction : public QAxObject
{
public:
    explicit SendRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SendRuleAction(_SendRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 2222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Session

    For more information, see help context 2218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AssignToCategoryRuleAction : public QAxObject
{
public:
    explicit AssignToCategoryRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AssignToCategoryRuleAction(_AssignToCategoryRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 2269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Categories() const; //Returns the value of Categories
    inline void SetCategories(const QVariant& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 2264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT PlaySoundRuleAction : public QAxObject
{
public:
    explicit PlaySoundRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    PlaySoundRuleAction(_PlaySoundRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FilePath

    For more information, see help context 2277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FilePath() const; //Returns the value of FilePath
    inline void SetFilePath(const QString& value); //Sets the value of the FilePath property

    /*
    Property Parent

    For more information, see help context 2274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MarkAsTaskRuleAction : public QAxObject
{
public:
    explicit MarkAsTaskRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MarkAsTaskRuleAction(_MarkAsTaskRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FlagTo

    For more information, see help context 2285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagTo() const; //Returns the value of FlagTo
    inline void SetFlagTo(const QString& value); //Sets the value of the FlagTo property

    /*
    Property MarkInterval

    For more information, see help context 2286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMarkInterval MarkInterval() const; //Returns the value of MarkInterval
    inline void SetMarkInterval(Outlook::OlMarkInterval value); //Sets the value of the MarkInterval property

    /*
    Property Parent

    For more information, see help context 2282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NewItemAlertRuleAction : public QAxObject
{
public:
    explicit NewItemAlertRuleAction(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NewItemAlertRuleAction(_NewItemAlertRuleAction *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property ActionType

    For more information, see help context 2293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleActionType ActionType() const; //Returns the value of ActionType

    /*
    Property Application

    For more information, see help context 2288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2289 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2290 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Text

    For more information, see help context 2294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Text() const; //Returns the value of Text
    inline void SetText(const QString& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RuleConditions : public QAxObject
{
public:
    explicit RuleConditions(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    RuleConditions(_RuleConditions *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Account

    For more information, see help context 2310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AccountRuleCondition* Account() const; //Returns the value of Account

    /*
    Property AnyCategory

    For more information, see help context 3234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* AnyCategory() const; //Returns the value of AnyCategory

    /*
    Property Application

    For more information, see help context 2296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Body

    For more information, see help context 2311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* Body() const; //Returns the value of Body

    /*
    Property BodyOrSubject

    For more information, see help context 2312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* BodyOrSubject() const; //Returns the value of BodyOrSubject

    /*
    Property CC

    For more information, see help context 2302 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* CC() const; //Returns the value of CC

    /*
    Property Category

    For more information, see help context 2313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::CategoryRuleCondition* Category() const; //Returns the value of Category

    /*
    Property Class

    For more information, see help context 2297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2300 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property FormName

    For more information, see help context 2314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormNameRuleCondition* FormName() const; //Returns the value of FormName

    /*
    Property From

    For more information, see help context 2315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ToOrFromRuleCondition* From() const; //Returns the value of From

    /*
    Property FromAnyRSSFeed

    For more information, see help context 3250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* FromAnyRSSFeed() const; //Returns the value of FromAnyRSSFeed

    /*
    Property FromRssFeed

    For more information, see help context 3251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FromRssFeedRuleCondition* FromRssFeed() const; //Returns the value of FromRssFeed

    /*
    Property HasAttachment

    For more information, see help context 2303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* HasAttachment() const; //Returns the value of HasAttachment

    /*
    Property Importance

    For more information, see help context 2304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ImportanceRuleCondition* Importance() const; //Returns the value of Importance

    /*
    Property MeetingInviteOrUpdate

    For more information, see help context 2305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* MeetingInviteOrUpdate() const; //Returns the value of MeetingInviteOrUpdate

    /*
    Property MessageHeader

    For more information, see help context 2316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* MessageHeader() const; //Returns the value of MessageHeader

    /*
    Property NotTo

    For more information, see help context 2306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* NotTo() const; //Returns the value of NotTo

    /*
    Property OnLocalMachine

    For more information, see help context 2322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnLocalMachine() const; //Returns the value of OnLocalMachine

    /*
    Property OnOtherMachine

    For more information, see help context 2323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnOtherMachine() const; //Returns the value of OnOtherMachine

    /*
    Property OnlyToMe

    For more information, see help context 2307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* OnlyToMe() const; //Returns the value of OnlyToMe

    /*
    Property Parent

    For more information, see help context 2299 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RecipientAddress

    For more information, see help context 2317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressRuleCondition* RecipientAddress() const; //Returns the value of RecipientAddress

    /*
    Property SenderAddress

    For more information, see help context 2318 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressRuleCondition* SenderAddress() const; //Returns the value of SenderAddress

    /*
    Property SenderInAddressList

    For more information, see help context 2319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SenderInAddressListRuleCondition* SenderInAddressList() const; //Returns the value of SenderInAddressList

    /*
    Property Sensitivity

    For more information, see help context 3650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SensitivityRuleCondition* Sensitivity() const; //Returns the value of Sensitivity

    /*
    Property SentTo

    For more information, see help context 2321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ToOrFromRuleCondition* SentTo() const; //Returns the value of SentTo

    /*
    Property Session

    For more information, see help context 2298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Subject

    For more information, see help context 2320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TextRuleCondition* Subject() const; //Returns the value of Subject

    /*
    Property ToMe

    For more information, see help context 2308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* ToMe() const; //Returns the value of ToMe

    /*
    Property ToOrCc

    For more information, see help context 2309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleCondition* ToOrCc() const; //Returns the value of ToOrCc

    /*
    Method Item

    For more information, see help context 2301 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_RuleCondition* Item(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RuleCondition : public QAxObject
{
public:
    explicit RuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    RuleCondition(_RuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ImportanceRuleCondition : public QAxObject
{
public:
    explicit ImportanceRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ImportanceRuleCondition(_ImportanceRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Importance

    For more information, see help context 2338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property Parent

    For more information, see help context 2335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AccountRuleCondition : public QAxObject
{
public:
    explicit AccountRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AccountRuleCondition(_AccountRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Account

    For more information, see help context 2383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* Account() const; //Returns the value of Account
    inline void SetAccount(Outlook::Account* value); //Sets the value of the Account property

    /*
    Property Application

    For more information, see help context 2377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Account : public QAxObject
{
public:
    explicit Account(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Account(_Account *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AccountType

    For more information, see help context 740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAccountType AccountType() const; //Returns the value of AccountType

    /*
    Property Application

    For more information, see help context 736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoDiscoverConnectionMode

    For more information, see help context 3436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoDiscoverConnectionMode AutoDiscoverConnectionMode() const; //Returns the value of AutoDiscoverConnectionMode

    /*
    Property AutoDiscoverXml

    For more information, see help context 3422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AutoDiscoverXml() const; //Returns the value of AutoDiscoverXml

    /*
    Property Class

    For more information, see help context 737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentUser

    For more information, see help context 3381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CurrentUser() const; //Returns the value of CurrentUser

    /*
    Property DeliveryStore

    For more information, see help context 3423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* DeliveryStore() const; //Returns the value of DeliveryStore

    /*
    Property DisplayName

    For more information, see help context 741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property ExchangeConnectionMode

    For more information, see help context 3424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeConnectionMode ExchangeConnectionMode() const; //Returns the value of ExchangeConnectionMode

    /*
    Property ExchangeMailboxServerName

    For more information, see help context 3550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerName() const; //Returns the value of ExchangeMailboxServerName

    /*
    Property ExchangeMailboxServerVersion

    For more information, see help context 3551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerVersion() const; //Returns the value of ExchangeMailboxServerVersion

    /*
    Property IOlkAccount

    For more information, see help context 3594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* IOlkAccount() const; //Returns the value of IOlkAccount

    /*
    Property Parent

    For more information, see help context 739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SmtpAddress

    For more information, see help context 743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SmtpAddress() const; //Returns the value of SmtpAddress

    /*
    Property UserName

    For more information, see help context 742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString UserName() const; //Returns the value of UserName

    /*
    Method GetAddressEntryFromID

    For more information, see help context 3427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetAddressEntryFromID(const QString& ID);

    /*
    Method GetRecipientFromID

    For more information, see help context 3428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetRecipientFromID(const QString& EntryID);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TextRuleCondition : public QAxObject
{
public:
    explicit TextRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TextRuleCondition(_TextRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2472 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2477 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2476 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Text

    For more information, see help context 2478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Text() const; //Returns the value of Text
    inline void SetText(const QVariant& value); //Sets the value of the Text property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT CategoryRuleCondition : public QAxObject
{
public:
    explicit CategoryRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    CategoryRuleCondition(_CategoryRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Categories

    For more information, see help context 2446 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Categories() const; //Returns the value of Categories
    inline void SetCategories(const QVariant& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 2441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT FormNameRuleCondition : public QAxObject
{
public:
    explicit FormNameRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    FormNameRuleCondition(_FormNameRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2448 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FormName

    For more information, see help context 2454 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant FormName() const; //Returns the value of FormName
    inline void SetFormName(const QVariant& value); //Sets the value of the FormName property

    /*
    Property Parent

    For more information, see help context 2451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ToOrFromRuleCondition : public QAxObject
{
public:
    explicit ToOrFromRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ToOrFromRuleCondition(_ToOrFromRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2456 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 2462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Session

    For more information, see help context 2458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AddressRuleCondition : public QAxObject
{
public:
    explicit AddressRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AddressRuleCondition(_AddressRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Address

    For more information, see help context 2955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Address() const; //Returns the value of Address
    inline void SetAddress(const QVariant& value); //Sets the value of the Address property

    /*
    Property Application

    For more information, see help context 2949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SenderInAddressListRuleCondition : public QAxObject
{
public:
    explicit SenderInAddressListRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SenderInAddressListRuleCondition(_SenderInAddressListRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AddressList

    For more information, see help context 2470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* AddressList() const; //Returns the value of AddressList
    inline void SetAddressList(Outlook::AddressList* value); //Sets the value of the AddressList property

    /*
    Property Application

    For more information, see help context 2464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 2469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 2468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 2467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT FromRssFeedRuleCondition : public QAxObject
{
public:
    explicit FromRssFeedRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    FromRssFeedRuleCondition(_FromRssFeedRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 3258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 3257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property FromRssFeed

    For more information, see help context 3259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant FromRssFeed() const; //Returns the value of FromRssFeed
    inline void SetFromRssFeed(const QVariant& value); //Sets the value of the FromRssFeed property

    /*
    Property Parent

    For more information, see help context 3256 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SensitivityRuleCondition : public QAxObject
{
public:
    explicit SensitivityRuleCondition(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SensitivityRuleCondition(_SensitivityRuleCondition *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConditionType

    For more information, see help context 3648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleConditionType ConditionType() const; //Returns the value of ConditionType

    /*
    Property Enabled

    For more information, see help context 3647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Parent

    For more information, see help context 3646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Sensitivity

    For more information, see help context 3649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 3645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Rule : public QAxObject
{
public:
    explicit Rule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Rule(_Rule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 2174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleActions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 2164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Conditions

    For more information, see help context 2175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleConditions* Conditions() const; //Returns the value of Conditions

    /*
    Property Enabled

    For more information, see help context 2171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Exceptions

    For more information, see help context 2176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RuleConditions* Exceptions() const; //Returns the value of Exceptions

    /*
    Property ExecutionOrder

    For more information, see help context 2169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ExecutionOrder() const; //Returns the value of ExecutionOrder
    inline void SetExecutionOrder(int value); //Sets the value of the ExecutionOrder property

    /*
    Property IsLocalRule

    For more information, see help context 2172 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsLocalRule() const; //Returns the value of IsLocalRule

    /*
    Property Name

    For more information, see help context 2168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2167 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RuleType

    For more information, see help context 2170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRuleType RuleType() const; //Returns the value of RuleType

    /*
    Property Session

    For more information, see help context 2166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute();

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders);

    /*
    Method Execute

    For more information, see help context 2173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders, const QVariant& RuleExecuteOption);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Categories : public QAxObject
{
public:
    explicit Categories(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Categories(_Categories *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name, const QVariant& Color);

    /*
    Method Add

    For more information, see help context 2437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Category* Add(const QString& Name, const QVariant& Color, const QVariant& ShortcutKey);

    /*
    Method Item

    For more information, see help context 2436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Category* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2438 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Category : public QAxObject
{
public:
    explicit Category(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Category(_Category *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CategoryBorderColor

    For more information, see help context 3266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryBorderColor() const; //Returns the value of CategoryBorderColor

    /*
    Property CategoryGradientBottomColor

    For more information, see help context 3268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryGradientBottomColor() const; //Returns the value of CategoryGradientBottomColor

    /*
    Property CategoryGradientTopColor

    For more information, see help context 3267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QColor CategoryGradientTopColor() const; //Returns the value of CategoryGradientTopColor

    /*
    Property CategoryID

    For more information, see help context 2429 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CategoryID() const; //Returns the value of CategoryID

    /*
    Property Class

    For more information, see help context 2423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 2427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlCategoryColor value); //Sets the value of the Color property

    /*
    Property Name

    For more information, see help context 2426 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2425 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShortcutKey

    For more information, see help context 2428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryShortcutKey ShortcutKey() const; //Returns the value of ShortcutKey
    inline void SetShortcutKey(Outlook::OlCategoryShortcutKey value); //Sets the value of the ShortcutKey property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Table : public QAxObject
{
public:
    explicit Table(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Table(_Table *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Columns

    For more information, see help context 2236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Columns* Columns() const; //Returns the value of Columns

    /*
    Property EndOfTable

    For more information, see help context 2237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EndOfTable() const; //Returns the value of EndOfTable

    /*
    Property Parent

    For more information, see help context 2227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method FindNextRow

    For more information, see help context 2229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* FindNextRow();

    /*
    Method FindRow

    For more information, see help context 2228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* FindRow(const QString& Filter);

    /*
    Method GetArray

    For more information, see help context 2230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetArray(int MaxRows);

    /*
    Method GetNextRow

    For more information, see help context 2231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Row* GetNextRow();

    /*
    Method GetRowCount

    For more information, see help context 2232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int GetRowCount();

    /*
    Method MoveToStart

    For more information, see help context 2233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MoveToStart();

    /*
    Method Restrict

    For more information, see help context 2234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* Restrict(const QString& Filter);

    /*
    Method Sort

    For more information, see help context 2235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& SortProperty);

    /*
    Method Sort

    For more information, see help context 2235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& SortProperty, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Row : public QAxObject
{
public:
    explicit Row(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Row(_Row *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 2242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method BinaryToString

    For more information, see help context 2243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BinaryToString(const QVariant& Index);

    /*
    Method GetValues

    For more information, see help context 2244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetValues();

    /*
    Method Item

    For more information, see help context 2245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Item(const QVariant& Index);

    /*
    Method LocalTimeToUTC

    For more information, see help context 2246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LocalTimeToUTC(const QVariant& Index);

    /*
    Method UTCToLocalTime

    For more information, see help context 2247 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime UTCToLocalTime(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Columns : public QAxObject
{
public:
    explicit Columns(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Columns(_Columns *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2735 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Column* Add(const QString& Name);

    /*
    Method Item

    For more information, see help context 2740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Column* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Column : public QAxObject
{
public:
    explicit Column(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Column(_Column *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 2748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT CalendarSharing : public QAxObject
{
public:
    explicit CalendarSharing(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    CalendarSharing(_CalendarSharing *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CalendarDetail

    For more information, see help context 2413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCalendarDetail CalendarDetail() const; //Returns the value of CalendarDetail
    inline void SetCalendarDetail(Outlook::OlCalendarDetail value); //Sets the value of the CalendarDetail property

    /*
    Property Class

    For more information, see help context 2408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property EndDate

    For more information, see help context 2414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndDate() const; //Returns the value of EndDate
    inline void SetEndDate(const QDateTime& value); //Sets the value of the EndDate property

    /*
    Property Folder

    For more information, see help context 2415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder

    /*
    Property IncludeAttachments

    For more information, see help context 2416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeAttachments() const; //Returns the value of IncludeAttachments
    inline void SetIncludeAttachments(bool value); //Sets the value of the IncludeAttachments property

    /*
    Property IncludePrivateDetails

    For more information, see help context 2417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludePrivateDetails() const; //Returns the value of IncludePrivateDetails
    inline void SetIncludePrivateDetails(bool value); //Sets the value of the IncludePrivateDetails property

    /*
    Property IncludeWholeCalendar

    For more information, see help context 2420 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeWholeCalendar() const; //Returns the value of IncludeWholeCalendar
    inline void SetIncludeWholeCalendar(bool value); //Sets the value of the IncludeWholeCalendar property

    /*
    Property Parent

    For more information, see help context 2410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RestrictToWorkingHours

    For more information, see help context 2418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RestrictToWorkingHours() const; //Returns the value of RestrictToWorkingHours
    inline void SetRestrictToWorkingHours(bool value); //Sets the value of the RestrictToWorkingHours property

    /*
    Property Session

    For more information, see help context 2409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StartDate

    For more information, see help context 2419 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartDate() const; //Returns the value of StartDate
    inline void SetStartDate(const QDateTime& value); //Sets the value of the StartDate property

    /*
    Method ForwardAsICal

    For more information, see help context 2412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsICal(Outlook::OlCalendarMailFormat MailFormat);

    /*
    Method SaveAsICal

    For more information, see help context 2411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAsICal(const QString& Path);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MailItem : public QAxObject
{
public:
    explicit MailItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MailItem(_MailItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AlternateRecipientAllowed

    For more information, see help context 1328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlternateRecipientAllowed() const; //Returns the value of AlternateRecipientAllowed
    inline void SetAlternateRecipientAllowed(bool value); //Sets the value of the AlternateRecipientAllowed property

    /*
    Property Application

    For more information, see help context 1290 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 1329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property AutoResolvedWinner

    For more information, see help context 1381 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BCC

    For more information, see help context 1330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BCC() const; //Returns the value of BCC
    inline void SetBCC(const QString& value); //Sets the value of the BCC property

    /*
    Property BillingInformation

    For more information, see help context 1296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 1372 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property CC

    For more information, see help context 1331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CC() const; //Returns the value of CC
    inline void SetCC(const QString& value); //Sets the value of the CC property

    /*
    Property Categories

    For more information, see help context 1298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1299 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1300 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1301 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1302 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 1332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 1333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 1373 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EnableSharedAttachments

    For more information, see help context 1385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableSharedAttachments() const; //Returns the value of EnableSharedAttachments
    inline void SetEnableSharedAttachments(bool value); //Sets the value of the EnableSharedAttachments property

    /*
    Property EntryID

    For more information, see help context 1303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 1335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 1379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 1336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 1337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 1304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 1338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property HasCoverSheet

    For more information, see help context 1380 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasCoverSheet() const; //Returns the value of HasCoverSheet
    inline void SetHasCoverSheet(bool value); //Sets the value of the HasCoverSheet property

    /*
    Property Importance

    For more information, see help context 1306 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1375 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsIPFax

    For more information, see help context 1378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsIPFax() const; //Returns the value of IsIPFax
    inline void SetIsIPFax(bool value); //Sets the value of the IsIPFax property

    /*
    Property IsMarkedAsTask

    For more information, see help context 3041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1371 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1370 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1376 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 1339 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Permission

    For more information, see help context 1386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermission Permission() const; //Returns the value of Permission
    inline void SetPermission(Outlook::OlPermission value); //Sets the value of the Permission property

    /*
    Property PermissionService

    For more information, see help context 1387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermissionService PermissionService() const; //Returns the value of PermissionService
    inline void SetPermissionService(Outlook::OlPermissionService value); //Sets the value of the PermissionService property

    /*
    Property PermissionTemplateGuid

    For more information, see help context 3507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PermissionTemplateGuid() const; //Returns the value of PermissionTemplateGuid
    inline void SetPermissionTemplateGuid(const QString& value); //Sets the value of the PermissionTemplateGuid property

    /*
    Property PropertyAccessor

    For more information, see help context 1388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReadReceiptRequested

    For more information, see help context 1340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReadReceiptRequested() const; //Returns the value of ReadReceiptRequested
    inline void SetReadReceiptRequested(bool value); //Sets the value of the ReadReceiptRequested property

    /*
    Property ReceivedByEntryID

    For more information, see help context 1341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 1342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedOnBehalfOfEntryID

    For more information, see help context 1343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfEntryID() const; //Returns the value of ReceivedOnBehalfOfEntryID

    /*
    Property ReceivedOnBehalfOfName

    For more information, see help context 1344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfName() const; //Returns the value of ReceivedOnBehalfOfName

    /*
    Property ReceivedTime

    For more information, see help context 1345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property RecipientReassignmentProhibited

    For more information, see help context 1346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RecipientReassignmentProhibited() const; //Returns the value of RecipientReassignmentProhibited
    inline void SetRecipientReassignmentProhibited(bool value); //Sets the value of the RecipientReassignmentProhibited property

    /*
    Property Recipients

    For more information, see help context 1347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property RemoteStatus

    For more information, see help context 1353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus RemoteStatus() const; //Returns the value of RemoteStatus
    inline void SetRemoteStatus(Outlook::OlRemoteStatus value); //Sets the value of the RemoteStatus property

    /*
    Property ReplyRecipientNames

    For more information, see help context 1354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 1355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RetentionExpirationDate

    For more information, see help context 3559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 1356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 1314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 1390 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sender

    For more information, see help context 3488 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Sender() const; //Returns the value of Sender
    inline void SetSender(Outlook::AddressEntry* value); //Sets the value of the Sender property

    /*
    Property SenderEmailAddress

    For more information, see help context 1383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1357 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 1358 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 1359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property SentOnBehalfOfName

    For more information, see help context 1360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SentOnBehalfOfName() const; //Returns the value of SentOnBehalfOfName
    inline void SetSentOnBehalfOfName(const QString& value); //Sets the value of the SentOnBehalfOfName property

    /*
    Property Session

    For more information, see help context 1292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 1361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property TaskCompletedDate

    For more information, see help context 1395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property To

    For more information, see help context 1362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1318 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Property VotingOptions

    For more information, see help context 1363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString VotingOptions() const; //Returns the value of VotingOptions
    inline void SetVotingOptions(const QString& value); //Sets the value of the VotingOptions property

    /*
    Property VotingResponse

    For more information, see help context 1364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString VotingResponse() const; //Returns the value of VotingResponse
    inline void SetVotingResponse(const QString& value); //Sets the value of the VotingResponse property

    /*
    Method AddBusinessCard

    For more information, see help context 1389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCard(Outlook::ContactItem* contact);

    /*
    Method ClearConversationIndex

    For more information, see help context 1365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3039 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1367 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1369 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1374 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ContactItem : public QAxObject
{
public:
    explicit ContactItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ContactItem(_ContactItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Account

    For more information, see help context 964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Account() const; //Returns the value of Account
    inline void SetAccount(const QString& value); //Sets the value of the Account property

    /*
    Property Actions

    For more information, see help context 930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Anniversary

    For more information, see help context 965 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Anniversary() const; //Returns the value of Anniversary
    inline void SetAnniversary(const QDateTime& value); //Sets the value of the Anniversary property

    /*
    Property Application

    For more information, see help context 926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssistantName

    For more information, see help context 966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantName() const; //Returns the value of AssistantName
    inline void SetAssistantName(const QString& value); //Sets the value of the AssistantName property

    /*
    Property AssistantTelephoneNumber

    For more information, see help context 967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantTelephoneNumber() const; //Returns the value of AssistantTelephoneNumber
    inline void SetAssistantTelephoneNumber(const QString& value); //Sets the value of the AssistantTelephoneNumber property

    /*
    Property Attachments

    For more information, see help context 931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Birthday

    For more information, see help context 968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Birthday() const; //Returns the value of Birthday
    inline void SetBirthday(const QDateTime& value); //Sets the value of the Birthday property

    /*
    Property Body

    For more information, see help context 933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Business2TelephoneNumber

    For more information, see help context 969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Business2TelephoneNumber() const; //Returns the value of Business2TelephoneNumber
    inline void SetBusiness2TelephoneNumber(const QString& value); //Sets the value of the Business2TelephoneNumber property

    /*
    Property BusinessAddress

    For more information, see help context 970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddress() const; //Returns the value of BusinessAddress
    inline void SetBusinessAddress(const QString& value); //Sets the value of the BusinessAddress property

    /*
    Property BusinessAddressCity

    For more information, see help context 971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressCity() const; //Returns the value of BusinessAddressCity
    inline void SetBusinessAddressCity(const QString& value); //Sets the value of the BusinessAddressCity property

    /*
    Property BusinessAddressCountry

    For more information, see help context 972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressCountry() const; //Returns the value of BusinessAddressCountry
    inline void SetBusinessAddressCountry(const QString& value); //Sets the value of the BusinessAddressCountry property

    /*
    Property BusinessAddressPostOfficeBox

    For more information, see help context 974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressPostOfficeBox() const; //Returns the value of BusinessAddressPostOfficeBox
    inline void SetBusinessAddressPostOfficeBox(const QString& value); //Sets the value of the BusinessAddressPostOfficeBox property

    /*
    Property BusinessAddressPostalCode

    For more information, see help context 973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressPostalCode() const; //Returns the value of BusinessAddressPostalCode
    inline void SetBusinessAddressPostalCode(const QString& value); //Sets the value of the BusinessAddressPostalCode property

    /*
    Property BusinessAddressState

    For more information, see help context 975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressState() const; //Returns the value of BusinessAddressState
    inline void SetBusinessAddressState(const QString& value); //Sets the value of the BusinessAddressState property

    /*
    Property BusinessAddressStreet

    For more information, see help context 976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessAddressStreet() const; //Returns the value of BusinessAddressStreet
    inline void SetBusinessAddressStreet(const QString& value); //Sets the value of the BusinessAddressStreet property

    /*
    Property BusinessCardLayoutXml

    For more information, see help context 3227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessCardLayoutXml() const; //Returns the value of BusinessCardLayoutXml
    inline void SetBusinessCardLayoutXml(const QString& value); //Sets the value of the BusinessCardLayoutXml property

    /*
    Property BusinessCardType

    For more information, see help context 3230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBusinessCardType BusinessCardType() const; //Returns the value of BusinessCardType

    /*
    Property BusinessFaxNumber

    For more information, see help context 977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessFaxNumber() const; //Returns the value of BusinessFaxNumber
    inline void SetBusinessFaxNumber(const QString& value); //Sets the value of the BusinessFaxNumber property

    /*
    Property BusinessHomePage

    For more information, see help context 978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessHomePage() const; //Returns the value of BusinessHomePage
    inline void SetBusinessHomePage(const QString& value); //Sets the value of the BusinessHomePage property

    /*
    Property BusinessTelephoneNumber

    For more information, see help context 979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessTelephoneNumber() const; //Returns the value of BusinessTelephoneNumber
    inline void SetBusinessTelephoneNumber(const QString& value); //Sets the value of the BusinessTelephoneNumber property

    /*
    Property CallbackTelephoneNumber

    For more information, see help context 980 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CallbackTelephoneNumber() const; //Returns the value of CallbackTelephoneNumber
    inline void SetCallbackTelephoneNumber(const QString& value); //Sets the value of the CallbackTelephoneNumber property

    /*
    Property CarTelephoneNumber

    For more information, see help context 981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CarTelephoneNumber() const; //Returns the value of CarTelephoneNumber
    inline void SetCarTelephoneNumber(const QString& value); //Sets the value of the CarTelephoneNumber property

    /*
    Property Categories

    For more information, see help context 934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Children

    For more information, see help context 982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Children() const; //Returns the value of Children
    inline void SetChildren(const QString& value); //Sets the value of the Children property

    /*
    Property Class

    For more information, see help context 927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property CompanyAndFullName

    For more information, see help context 983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyAndFullName() const; //Returns the value of CompanyAndFullName

    /*
    Property CompanyLastFirstNoSpace

    For more information, see help context 984 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyLastFirstNoSpace() const; //Returns the value of CompanyLastFirstNoSpace

    /*
    Property CompanyLastFirstSpaceOnly

    For more information, see help context 985 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyLastFirstSpaceOnly() const; //Returns the value of CompanyLastFirstSpaceOnly

    /*
    Property CompanyMainTelephoneNumber

    For more information, see help context 986 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyMainTelephoneNumber() const; //Returns the value of CompanyMainTelephoneNumber
    inline void SetCompanyMainTelephoneNumber(const QString& value); //Sets the value of the CompanyMainTelephoneNumber property

    /*
    Property CompanyName

    For more information, see help context 987 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyName() const; //Returns the value of CompanyName
    inline void SetCompanyName(const QString& value); //Sets the value of the CompanyName property

    /*
    Property ComputerNetworkName

    For more information, see help context 988 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ComputerNetworkName() const; //Returns the value of ComputerNetworkName
    inline void SetComputerNetworkName(const QString& value); //Sets the value of the ComputerNetworkName property

    /*
    Property Conflicts

    For more information, see help context 1089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 938 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property CustomerID

    For more information, see help context 989 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CustomerID() const; //Returns the value of CustomerID
    inline void SetCustomerID(const QString& value); //Sets the value of the CustomerID property

    /*
    Property Department

    For more information, see help context 990 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Department() const; //Returns the value of Department
    inline void SetDepartment(const QString& value); //Sets the value of the Department property

    /*
    Property DownloadState

    For more information, see help context 1083 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Email1Address

    For more information, see help context 991 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1Address() const; //Returns the value of Email1Address
    inline void SetEmail1Address(const QString& value); //Sets the value of the Email1Address property

    /*
    Property Email1AddressType

    For more information, see help context 992 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1AddressType() const; //Returns the value of Email1AddressType
    inline void SetEmail1AddressType(const QString& value); //Sets the value of the Email1AddressType property

    /*
    Property Email1DisplayName

    For more information, see help context 993 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1DisplayName() const; //Returns the value of Email1DisplayName
    inline void SetEmail1DisplayName(const QString& value); //Sets the value of the Email1DisplayName property

    /*
    Property Email1EntryID

    For more information, see help context 994 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email1EntryID() const; //Returns the value of Email1EntryID

    /*
    Property Email2Address

    For more information, see help context 995 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2Address() const; //Returns the value of Email2Address
    inline void SetEmail2Address(const QString& value); //Sets the value of the Email2Address property

    /*
    Property Email2AddressType

    For more information, see help context 996 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2AddressType() const; //Returns the value of Email2AddressType
    inline void SetEmail2AddressType(const QString& value); //Sets the value of the Email2AddressType property

    /*
    Property Email2DisplayName

    For more information, see help context 997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2DisplayName() const; //Returns the value of Email2DisplayName
    inline void SetEmail2DisplayName(const QString& value); //Sets the value of the Email2DisplayName property

    /*
    Property Email2EntryID

    For more information, see help context 998 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email2EntryID() const; //Returns the value of Email2EntryID

    /*
    Property Email3Address

    For more information, see help context 999 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3Address() const; //Returns the value of Email3Address
    inline void SetEmail3Address(const QString& value); //Sets the value of the Email3Address property

    /*
    Property Email3AddressType

    For more information, see help context 1000 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3AddressType() const; //Returns the value of Email3AddressType
    inline void SetEmail3AddressType(const QString& value); //Sets the value of the Email3AddressType property

    /*
    Property Email3DisplayName

    For more information, see help context 1001 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3DisplayName() const; //Returns the value of Email3DisplayName
    inline void SetEmail3DisplayName(const QString& value); //Sets the value of the Email3DisplayName property

    /*
    Property Email3EntryID

    For more information, see help context 1002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Email3EntryID() const; //Returns the value of Email3EntryID

    /*
    Property EntryID

    For more information, see help context 939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FTPSite

    For more information, see help context 1005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FTPSite() const; //Returns the value of FTPSite
    inline void SetFTPSite(const QString& value); //Sets the value of the FTPSite property

    /*
    Property FileAs

    For more information, see help context 1003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FileAs() const; //Returns the value of FileAs
    inline void SetFileAs(const QString& value); //Sets the value of the FileAs property

    /*
    Property FirstName

    For more information, see help context 1004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FirstName() const; //Returns the value of FirstName
    inline void SetFirstName(const QString& value); //Sets the value of the FirstName property

    /*
    Property FormDescription

    For more information, see help context 940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property FullName

    For more information, see help context 1006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullName() const; //Returns the value of FullName
    inline void SetFullName(const QString& value); //Sets the value of the FullName property

    /*
    Property FullNameAndCompany

    For more information, see help context 1007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullNameAndCompany() const; //Returns the value of FullNameAndCompany

    /*
    Property Gender

    For more information, see help context 1008 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGender Gender() const; //Returns the value of Gender
    inline void SetGender(Outlook::OlGender value); //Sets the value of the Gender property

    /*
    Property GetInspector

    For more information, see help context 941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property GovernmentIDNumber

    For more information, see help context 1009 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GovernmentIDNumber() const; //Returns the value of GovernmentIDNumber
    inline void SetGovernmentIDNumber(const QString& value); //Sets the value of the GovernmentIDNumber property

    /*
    Property HasPicture

    For more information, see help context 1092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasPicture() const; //Returns the value of HasPicture

    /*
    Property Hobby

    For more information, see help context 1010 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Hobby() const; //Returns the value of Hobby
    inline void SetHobby(const QString& value); //Sets the value of the Hobby property

    /*
    Property Home2TelephoneNumber

    For more information, see help context 1011 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Home2TelephoneNumber() const; //Returns the value of Home2TelephoneNumber
    inline void SetHome2TelephoneNumber(const QString& value); //Sets the value of the Home2TelephoneNumber property

    /*
    Property HomeAddress

    For more information, see help context 1012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddress() const; //Returns the value of HomeAddress
    inline void SetHomeAddress(const QString& value); //Sets the value of the HomeAddress property

    /*
    Property HomeAddressCity

    For more information, see help context 1013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressCity() const; //Returns the value of HomeAddressCity
    inline void SetHomeAddressCity(const QString& value); //Sets the value of the HomeAddressCity property

    /*
    Property HomeAddressCountry

    For more information, see help context 1014 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressCountry() const; //Returns the value of HomeAddressCountry
    inline void SetHomeAddressCountry(const QString& value); //Sets the value of the HomeAddressCountry property

    /*
    Property HomeAddressPostOfficeBox

    For more information, see help context 1016 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressPostOfficeBox() const; //Returns the value of HomeAddressPostOfficeBox
    inline void SetHomeAddressPostOfficeBox(const QString& value); //Sets the value of the HomeAddressPostOfficeBox property

    /*
    Property HomeAddressPostalCode

    For more information, see help context 1015 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressPostalCode() const; //Returns the value of HomeAddressPostalCode
    inline void SetHomeAddressPostalCode(const QString& value); //Sets the value of the HomeAddressPostalCode property

    /*
    Property HomeAddressState

    For more information, see help context 1017 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressState() const; //Returns the value of HomeAddressState
    inline void SetHomeAddressState(const QString& value); //Sets the value of the HomeAddressState property

    /*
    Property HomeAddressStreet

    For more information, see help context 1018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeAddressStreet() const; //Returns the value of HomeAddressStreet
    inline void SetHomeAddressStreet(const QString& value); //Sets the value of the HomeAddressStreet property

    /*
    Property HomeFaxNumber

    For more information, see help context 1019 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeFaxNumber() const; //Returns the value of HomeFaxNumber
    inline void SetHomeFaxNumber(const QString& value); //Sets the value of the HomeFaxNumber property

    /*
    Property HomeTelephoneNumber

    For more information, see help context 1020 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HomeTelephoneNumber() const; //Returns the value of HomeTelephoneNumber
    inline void SetHomeTelephoneNumber(const QString& value); //Sets the value of the HomeTelephoneNumber property

    /*
    Property IMAddress

    For more information, see help context 1085 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString IMAddress() const; //Returns the value of IMAddress
    inline void SetIMAddress(const QString& value); //Sets the value of the IMAddress property

    /*
    Property ISDNNumber

    For more information, see help context 1023 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ISDNNumber() const; //Returns the value of ISDNNumber
    inline void SetISDNNumber(const QString& value); //Sets the value of the ISDNNumber property

    /*
    Property Importance

    For more information, see help context 942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property Initials

    For more information, see help context 1021 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Initials() const; //Returns the value of Initials
    inline void SetInitials(const QString& value); //Sets the value of the Initials property

    /*
    Property InternetFreeBusyAddress

    For more information, see help context 1022 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString InternetFreeBusyAddress() const; //Returns the value of InternetFreeBusyAddress
    inline void SetInternetFreeBusyAddress(const QString& value); //Sets the value of the InternetFreeBusyAddress property

    /*
    Property IsConflict

    For more information, see help context 1087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3033 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1081 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property JobTitle

    For more information, see help context 1024 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString JobTitle() const; //Returns the value of JobTitle
    inline void SetJobTitle(const QString& value); //Sets the value of the JobTitle property

    /*
    Property Journal

    For more information, see help context 1025 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Journal() const; //Returns the value of Journal
    inline void SetJournal(bool value); //Sets the value of the Journal property

    /*
    Property Language

    For more information, see help context 1026 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LastFirstAndSuffix

    For more information, see help context 1027 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstAndSuffix() const; //Returns the value of LastFirstAndSuffix

    /*
    Property LastFirstNoSpace

    For more information, see help context 1028 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpace() const; //Returns the value of LastFirstNoSpace

    /*
    Property LastFirstNoSpaceAndSuffix

    For more information, see help context 1082 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpaceAndSuffix() const; //Returns the value of LastFirstNoSpaceAndSuffix

    /*
    Property LastFirstNoSpaceCompany

    For more information, see help context 1029 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstNoSpaceCompany() const; //Returns the value of LastFirstNoSpaceCompany

    /*
    Property LastFirstSpaceOnly

    For more information, see help context 1030 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstSpaceOnly() const; //Returns the value of LastFirstSpaceOnly

    /*
    Property LastFirstSpaceOnlyCompany

    For more information, see help context 1031 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastFirstSpaceOnlyCompany() const; //Returns the value of LastFirstSpaceOnlyCompany

    /*
    Property LastModificationTime

    For more information, see help context 943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property LastName

    For more information, see help context 1032 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastName() const; //Returns the value of LastName
    inline void SetLastName(const QString& value); //Sets the value of the LastName property

    /*
    Property LastNameAndFirstName

    For more information, see help context 1033 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastNameAndFirstName() const; //Returns the value of LastNameAndFirstName

    /*
    Property Links

    For more information, see help context 1080 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MailingAddress

    For more information, see help context 1034 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddress() const; //Returns the value of MailingAddress
    inline void SetMailingAddress(const QString& value); //Sets the value of the MailingAddress property

    /*
    Property MailingAddressCity

    For more information, see help context 1035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressCity() const; //Returns the value of MailingAddressCity
    inline void SetMailingAddressCity(const QString& value); //Sets the value of the MailingAddressCity property

    /*
    Property MailingAddressCountry

    For more information, see help context 1036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressCountry() const; //Returns the value of MailingAddressCountry
    inline void SetMailingAddressCountry(const QString& value); //Sets the value of the MailingAddressCountry property

    /*
    Property MailingAddressPostOfficeBox

    For more information, see help context 1038 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressPostOfficeBox() const; //Returns the value of MailingAddressPostOfficeBox
    inline void SetMailingAddressPostOfficeBox(const QString& value); //Sets the value of the MailingAddressPostOfficeBox property

    /*
    Property MailingAddressPostalCode

    For more information, see help context 1037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressPostalCode() const; //Returns the value of MailingAddressPostalCode
    inline void SetMailingAddressPostalCode(const QString& value); //Sets the value of the MailingAddressPostalCode property

    /*
    Property MailingAddressState

    For more information, see help context 1039 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressState() const; //Returns the value of MailingAddressState
    inline void SetMailingAddressState(const QString& value); //Sets the value of the MailingAddressState property

    /*
    Property MailingAddressStreet

    For more information, see help context 1040 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MailingAddressStreet() const; //Returns the value of MailingAddressStreet
    inline void SetMailingAddressStreet(const QString& value); //Sets the value of the MailingAddressStreet property

    /*
    Property ManagerName

    For more information, see help context 1041 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ManagerName() const; //Returns the value of ManagerName
    inline void SetManagerName(const QString& value); //Sets the value of the ManagerName property

    /*
    Property MarkForDownload

    For more information, see help context 1086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 945 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property MiddleName

    For more information, see help context 1042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MiddleName() const; //Returns the value of MiddleName
    inline void SetMiddleName(const QString& value); //Sets the value of the MiddleName property

    /*
    Property Mileage

    For more information, see help context 946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property MobileTelephoneNumber

    For more information, see help context 1043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MobileTelephoneNumber() const; //Returns the value of MobileTelephoneNumber
    inline void SetMobileTelephoneNumber(const QString& value); //Sets the value of the MobileTelephoneNumber property

    /*
    Property NetMeetingAlias

    For more information, see help context 1044 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingAlias() const; //Returns the value of NetMeetingAlias
    inline void SetNetMeetingAlias(const QString& value); //Sets the value of the NetMeetingAlias property

    /*
    Property NetMeetingServer

    For more information, see help context 1045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingServer() const; //Returns the value of NetMeetingServer
    inline void SetNetMeetingServer(const QString& value); //Sets the value of the NetMeetingServer property

    /*
    Property NickName

    For more information, see help context 1046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NickName() const; //Returns the value of NickName
    inline void SetNickName(const QString& value); //Sets the value of the NickName property

    /*
    Property NoAging

    For more information, see help context 947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OfficeLocation

    For more information, see help context 1047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OfficeLocation() const; //Returns the value of OfficeLocation
    inline void SetOfficeLocation(const QString& value); //Sets the value of the OfficeLocation property

    /*
    Property OrganizationalIDNumber

    For more information, see help context 1048 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OrganizationalIDNumber() const; //Returns the value of OrganizationalIDNumber
    inline void SetOrganizationalIDNumber(const QString& value); //Sets the value of the OrganizationalIDNumber property

    /*
    Property OtherAddress

    For more information, see help context 1049 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddress() const; //Returns the value of OtherAddress
    inline void SetOtherAddress(const QString& value); //Sets the value of the OtherAddress property

    /*
    Property OtherAddressCity

    For more information, see help context 1050 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressCity() const; //Returns the value of OtherAddressCity
    inline void SetOtherAddressCity(const QString& value); //Sets the value of the OtherAddressCity property

    /*
    Property OtherAddressCountry

    For more information, see help context 1051 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressCountry() const; //Returns the value of OtherAddressCountry
    inline void SetOtherAddressCountry(const QString& value); //Sets the value of the OtherAddressCountry property

    /*
    Property OtherAddressPostOfficeBox

    For more information, see help context 1053 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressPostOfficeBox() const; //Returns the value of OtherAddressPostOfficeBox
    inline void SetOtherAddressPostOfficeBox(const QString& value); //Sets the value of the OtherAddressPostOfficeBox property

    /*
    Property OtherAddressPostalCode

    For more information, see help context 1052 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressPostalCode() const; //Returns the value of OtherAddressPostalCode
    inline void SetOtherAddressPostalCode(const QString& value); //Sets the value of the OtherAddressPostalCode property

    /*
    Property OtherAddressState

    For more information, see help context 1054 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressState() const; //Returns the value of OtherAddressState
    inline void SetOtherAddressState(const QString& value); //Sets the value of the OtherAddressState property

    /*
    Property OtherAddressStreet

    For more information, see help context 1055 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherAddressStreet() const; //Returns the value of OtherAddressStreet
    inline void SetOtherAddressStreet(const QString& value); //Sets the value of the OtherAddressStreet property

    /*
    Property OtherFaxNumber

    For more information, see help context 1056 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherFaxNumber() const; //Returns the value of OtherFaxNumber
    inline void SetOtherFaxNumber(const QString& value); //Sets the value of the OtherFaxNumber property

    /*
    Property OtherTelephoneNumber

    For more information, see help context 1057 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OtherTelephoneNumber() const; //Returns the value of OtherTelephoneNumber
    inline void SetOtherTelephoneNumber(const QString& value); //Sets the value of the OtherTelephoneNumber property

    /*
    Property OutlookInternalVersion

    For more information, see help context 948 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property PagerNumber

    For more information, see help context 1058 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PagerNumber() const; //Returns the value of PagerNumber
    inline void SetPagerNumber(const QString& value); //Sets the value of the PagerNumber property

    /*
    Property Parent

    For more information, see help context 929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PersonalHomePage

    For more information, see help context 1059 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PersonalHomePage() const; //Returns the value of PersonalHomePage
    inline void SetPersonalHomePage(const QString& value); //Sets the value of the PersonalHomePage property

    /*
    Property PrimaryTelephoneNumber

    For more information, see help context 1060 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimaryTelephoneNumber() const; //Returns the value of PrimaryTelephoneNumber
    inline void SetPrimaryTelephoneNumber(const QString& value); //Sets the value of the PrimaryTelephoneNumber property

    /*
    Property Profession

    For more information, see help context 1061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Profession() const; //Returns the value of Profession
    inline void SetProfession(const QString& value); //Sets the value of the Profession property

    /*
    Property PropertyAccessor

    For more information, see help context 1093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property RadioTelephoneNumber

    For more information, see help context 1062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RadioTelephoneNumber() const; //Returns the value of RadioTelephoneNumber
    inline void SetRadioTelephoneNumber(const QString& value); //Sets the value of the RadioTelephoneNumber property

    /*
    Property ReferredBy

    For more information, see help context 1063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReferredBy() const; //Returns the value of ReferredBy
    inline void SetReferredBy(const QString& value); //Sets the value of the ReferredBy property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1107 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SelectedMailingAddress

    For more information, see help context 1064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMailingAddress SelectedMailingAddress() const; //Returns the value of SelectedMailingAddress
    inline void SetSelectedMailingAddress(Outlook::OlMailingAddress value); //Sets the value of the SelectedMailingAddress property

    /*
    Property Sensitivity

    For more information, see help context 951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Spouse

    For more information, see help context 1065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Spouse() const; //Returns the value of Spouse
    inline void SetSpouse(const QString& value); //Sets the value of the Spouse property

    /*
    Property Subject

    For more information, see help context 953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Suffix

    For more information, see help context 1066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Suffix() const; //Returns the value of Suffix
    inline void SetSuffix(const QString& value); //Sets the value of the Suffix property

    /*
    Property TTYTDDTelephoneNumber

    For more information, see help context 1069 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TTYTDDTelephoneNumber() const; //Returns the value of TTYTDDTelephoneNumber
    inline void SetTTYTDDTelephoneNumber(const QString& value); //Sets the value of the TTYTDDTelephoneNumber property

    /*
    Property TaskCompletedDate

    For more information, see help context 1102 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1100 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1101 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property TelexNumber

    For more information, see help context 1067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TelexNumber() const; //Returns the value of TelexNumber
    inline void SetTelexNumber(const QString& value); //Sets the value of the TelexNumber property

    /*
    Property Title

    For more information, see help context 1068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Title() const; //Returns the value of Title
    inline void SetTitle(const QString& value); //Sets the value of the Title property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3030 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property User1

    For more information, see help context 1070 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User1() const; //Returns the value of User1
    inline void SetUser1(const QString& value); //Sets the value of the User1 property

    /*
    Property User2

    For more information, see help context 1071 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User2() const; //Returns the value of User2
    inline void SetUser2(const QString& value); //Sets the value of the User2 property

    /*
    Property User3

    For more information, see help context 1072 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User3() const; //Returns the value of User3
    inline void SetUser3(const QString& value); //Sets the value of the User3 property

    /*
    Property User4

    For more information, see help context 1073 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString User4() const; //Returns the value of User4
    inline void SetUser4(const QString& value); //Sets the value of the User4 property

    /*
    Property UserCertificate

    For more information, see help context 1074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString UserCertificate() const; //Returns the value of UserCertificate
    inline void SetUserCertificate(const QString& value); //Sets the value of the UserCertificate property

    /*
    Property UserProperties

    For more information, see help context 955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Property WebPage

    For more information, see help context 1075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString WebPage() const; //Returns the value of WebPage
    inline void SetWebPage(const QString& value); //Sets the value of the WebPage property

    /*
    Property YomiCompanyName

    For more information, see help context 1076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiCompanyName() const; //Returns the value of YomiCompanyName
    inline void SetYomiCompanyName(const QString& value); //Sets the value of the YomiCompanyName property

    /*
    Property YomiFirstName

    For more information, see help context 1077 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiFirstName() const; //Returns the value of YomiFirstName
    inline void SetYomiFirstName(const QString& value); //Sets the value of the YomiFirstName property

    /*
    Property YomiLastName

    For more information, see help context 1078 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiLastName() const; //Returns the value of YomiLastName
    inline void SetYomiLastName(const QString& value); //Sets the value of the YomiLastName property

    /*
    Method AddBusinessCardLogoPicture

    For more information, see help context 3229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCardLogoPicture(const QString& Path);

    /*
    Method AddPicture

    For more information, see help context 1090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddPicture(const QString& Path);

    /*
    Method ClearTaskFlag

    For more information, see help context 3032 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 956 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method ForwardAsBusinessCard

    For more information, see help context 1094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsBusinessCard();

    /*
    Method ForwardAsVcard

    For more information, see help context 1079 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsVcard();

    /*
    Method GetConversation

    For more information, see help context 3404 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3031 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method RemovePicture

    For more information, see help context 1091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemovePicture();

    /*
    Method ResetBusinessCard

    For more information, see help context 3228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetBusinessCard();

    /*
    Method Save

    For more information, see help context 962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method SaveBusinessCardImage

    For more information, see help context 1096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveBusinessCardImage(const QString& Path);

    /*
    Method ShowBusinessCardEditor

    For more information, see help context 1095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowBusinessCardEditor();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1084 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method ShowCheckAddressDialog

    For more information, see help context 3592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckAddressDialog(Outlook::OlMailingAddress MailingAddress);

    /*
    Method ShowCheckFullNameDialog

    For more information, see help context 3593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckFullNameDialog();

    /*
    Method ShowCheckPhoneDialog

    For more information, see help context 1097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCheckPhoneDialog(Outlook::OlContactPhoneNumber PhoneNumber);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SimpleItems : public QAxObject
{
public:
    explicit SimpleItems(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SimpleItems(_SimpleItems *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 3397 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 3396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 3398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT UserDefinedProperties : public QAxObject
{
public:
    explicit UserDefinedProperties(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    UserDefinedProperties(_UserDefinedProperties *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type);

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat);

    /*
    Method Add

    For more information, see help context 588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat, const QVariant& Formula);

    /*
    Method Find

    For more information, see help context 589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperty* Find(const QString& Name);

    /*
    Method Item

    For more information, see help context 587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_UserDefinedProperty* Item(const QVariant& Index);

    /*
    Method Refresh

    For more information, see help context 591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Refresh();

    /*
    Method Remove

    For more information, see help context 590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT UserDefinedProperty : public QAxObject
{
public:
    explicit UserDefinedProperty(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    UserDefinedProperty(_UserDefinedProperty *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 1 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayFormat

    For more information, see help context 8 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DisplayFormat() const; //Returns the value of DisplayFormat

    /*
    Property Formula

    For more information, see help context 5 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Formula() const; //Returns the value of Formula

    /*
    Property Name

    For more information, see help context 6 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 4 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 7 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType Type() const; //Returns the value of Type

    /*
    Method Delete

    For more information, see help context 3047 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ExchangeUser : public QAxObject
{
public:
    explicit ExchangeUser(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ExchangeUser(_ExchangeUser *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Address

    For more information, see help context 2065 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property AddressEntryUserType

    For more information, see help context 2080 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressEntryUserType AddressEntryUserType() const; //Returns the value of AddressEntryUserType

    /*
    Property Alias

    For more information, see help context 2085 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Alias() const; //Returns the value of Alias

    /*
    Property Application

    For more information, see help context 2061 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AssistantName

    For more information, see help context 2086 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AssistantName() const; //Returns the value of AssistantName
    inline void SetAssistantName(const QString& value); //Sets the value of the AssistantName property

    /*
    Property BusinessTelephoneNumber

    For more information, see help context 2087 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BusinessTelephoneNumber() const; //Returns the value of BusinessTelephoneNumber
    inline void SetBusinessTelephoneNumber(const QString& value); //Sets the value of the BusinessTelephoneNumber property

    /*
    Property City

    For more information, see help context 2088 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString City() const; //Returns the value of City
    inline void SetCity(const QString& value); //Sets the value of the City property

    /*
    Property Class

    For more information, see help context 2062 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Comments

    For more information, see help context 2089 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Comments() const; //Returns the value of Comments
    inline void SetComments(const QString& value); //Sets the value of the Comments property

    /*
    Property CompanyName

    For more information, see help context 2090 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CompanyName() const; //Returns the value of CompanyName
    inline void SetCompanyName(const QString& value); //Sets the value of the CompanyName property

    /*
    Property Department

    For more information, see help context 2091 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Department() const; //Returns the value of Department
    inline void SetDepartment(const QString& value); //Sets the value of the Department property

    /*
    Property DisplayType

    For more information, see help context 2066 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property FirstName

    For more information, see help context 2092 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FirstName() const; //Returns the value of FirstName
    inline void SetFirstName(const QString& value); //Sets the value of the FirstName property

    /*
    Property ID

    For more information, see help context 2067 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property JobTitle

    For more information, see help context 2093 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString JobTitle() const; //Returns the value of JobTitle
    inline void SetJobTitle(const QString& value); //Sets the value of the JobTitle property

    /*
    Property LastName

    For more information, see help context 2094 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString LastName() const; //Returns the value of LastName
    inline void SetLastName(const QString& value); //Sets the value of the LastName property

    /*
    Property MAPIOBJECT

    For more information, see help context 2069 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT
    inline void SetMAPIOBJECT(IUnknown* value); //Sets the value of the MAPIOBJECT property

    /*
    Property Manager

    For more information, see help context 2068 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Manager() const; //Returns the value of Manager

    /*
    Property Members

    For more information, see help context 2070 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* Members() const; //Returns the value of Members

    /*
    Property MobileTelephoneNumber

    For more information, see help context 2095 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MobileTelephoneNumber() const; //Returns the value of MobileTelephoneNumber
    inline void SetMobileTelephoneNumber(const QString& value); //Sets the value of the MobileTelephoneNumber property

    /*
    Property Name

    For more information, see help context 2071 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property OfficeLocation

    For more information, see help context 2096 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OfficeLocation() const; //Returns the value of OfficeLocation
    inline void SetOfficeLocation(const QString& value); //Sets the value of the OfficeLocation property

    /*
    Property Parent

    For more information, see help context 2064 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PostalCode

    For more information, see help context 2097 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PostalCode() const; //Returns the value of PostalCode
    inline void SetPostalCode(const QString& value); //Sets the value of the PostalCode property

    /*
    Property PrimarySmtpAddress

    For more information, see help context 2098 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimarySmtpAddress() const; //Returns the value of PrimarySmtpAddress

    /*
    Property PropertyAccessor

    For more information, see help context 2082 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2063 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StateOrProvince

    For more information, see help context 2099 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StateOrProvince() const; //Returns the value of StateOrProvince
    inline void SetStateOrProvince(const QString& value); //Sets the value of the StateOrProvince property

    /*
    Property StreetAddress

    For more information, see help context 2100 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StreetAddress() const; //Returns the value of StreetAddress
    inline void SetStreetAddress(const QString& value); //Sets the value of the StreetAddress property

    /*
    Property Type

    For more information, see help context 2072 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Property YomiCompanyName

    For more information, see help context 2102 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiCompanyName() const; //Returns the value of YomiCompanyName
    inline void SetYomiCompanyName(const QString& value); //Sets the value of the YomiCompanyName property

    /*
    Property YomiDepartment

    For more information, see help context 2106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiDepartment() const; //Returns the value of YomiDepartment
    inline void SetYomiDepartment(const QString& value); //Sets the value of the YomiDepartment property

    /*
    Property YomiDisplayName

    For more information, see help context 2105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiDisplayName() const; //Returns the value of YomiDisplayName
    inline void SetYomiDisplayName(const QString& value); //Sets the value of the YomiDisplayName property

    /*
    Property YomiFirstName

    For more information, see help context 2103 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiFirstName() const; //Returns the value of YomiFirstName
    inline void SetYomiFirstName(const QString& value); //Sets the value of the YomiFirstName property

    /*
    Property YomiLastName

    For more information, see help context 2104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString YomiLastName() const; //Returns the value of YomiLastName
    inline void SetYomiLastName(const QString& value); //Sets the value of the YomiLastName property

    /*
    Method Delete

    For more information, see help context 2073 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Details

    For more information, see help context 2074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details();

    /*
    Method Details

    For more information, see help context 2074 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details(const QVariant& HWnd);

    /*
    Method GetContact

    For more information, see help context 2078 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ContactItem* GetContact();

    /*
    Method GetDirectReports

    For more information, see help context 2083 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetDirectReports();

    /*
    Method GetExchangeDistributionList

    For more information, see help context 2081 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeDistributionList* GetExchangeDistributionList();

    /*
    Method GetExchangeUser

    For more information, see help context 2079 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUser();

    /*
    Method GetExchangeUserManager

    For more information, see help context 3238 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUserManager();

    /*
    Method GetFreeBusy

    For more information, see help context 2075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method GetFreeBusy

    For more information, see help context 2075 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method GetMemberOfList

    For more information, see help context 2084 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetMemberOfList();

    /*
    Method GetPicture

    For more information, see help context 3485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap GetPicture();

    /*
    Method GetUnifiedGroup

    For more information, see help context 3624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType);

    /*
    Method GetUnifiedGroupFromStore

    For more information, see help context 3625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID);

    /*
    Method IsUnifiedGroup

    For more information, see help context 3622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUnifiedGroup();

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update();

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent);

    /*
    Method Update

    For more information, see help context 2076 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent, const QVariant& Refresh);

    /*
    Method UpdateFreeBusy

    For more information, see help context 2077 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void UpdateFreeBusy();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ExchangeDistributionList : public QAxObject
{
public:
    explicit ExchangeDistributionList(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ExchangeDistributionList(_ExchangeDistributionList *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Address

    For more information, see help context 2112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Address() const; //Returns the value of Address
    inline void SetAddress(const QString& value); //Sets the value of the Address property

    /*
    Property AddressEntryUserType

    For more information, see help context 2127 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAddressEntryUserType AddressEntryUserType() const; //Returns the value of AddressEntryUserType

    /*
    Property Alias

    For more information, see help context 2132 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Alias() const; //Returns the value of Alias

    /*
    Property Application

    For more information, see help context 2108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Comments

    For more information, see help context 2133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Comments() const; //Returns the value of Comments
    inline void SetComments(const QString& value); //Sets the value of the Comments property

    /*
    Property DisplayType

    For more information, see help context 2113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayType DisplayType() const; //Returns the value of DisplayType

    /*
    Property ID

    For more information, see help context 2114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property MAPIOBJECT

    For more information, see help context 2116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT
    inline void SetMAPIOBJECT(IUnknown* value); //Sets the value of the MAPIOBJECT property

    /*
    Property Manager

    For more information, see help context 2115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* Manager() const; //Returns the value of Manager

    /*
    Property Members

    For more information, see help context 2117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* Members() const; //Returns the value of Members

    /*
    Property Name

    For more information, see help context 2118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PrimarySmtpAddress

    For more information, see help context 2134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PrimarySmtpAddress() const; //Returns the value of PrimarySmtpAddress

    /*
    Property PropertyAccessor

    For more information, see help context 2129 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Type

    For more information, see help context 2119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Method Delete

    For more information, see help context 2120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Details

    For more information, see help context 2121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details();

    /*
    Method Details

    For more information, see help context 2121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Details(const QVariant& HWnd);

    /*
    Method GetContact

    For more information, see help context 2125 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ContactItem* GetContact();

    /*
    Method GetExchangeDistributionList

    For more information, see help context 2128 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeDistributionList* GetExchangeDistributionList();

    /*
    Method GetExchangeDistributionListMembers

    For more information, see help context 3239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetExchangeDistributionListMembers();

    /*
    Method GetExchangeUser

    For more information, see help context 2126 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ExchangeUser* GetExchangeUser();

    /*
    Method GetFreeBusy

    For more information, see help context 2122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar);

    /*
    Method GetFreeBusy

    For more information, see help context 2122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat);

    /*
    Method GetMemberOfList

    For more information, see help context 2130 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetMemberOfList();

    /*
    Method GetOwners

    For more information, see help context 2135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntries* GetOwners();

    /*
    Method GetUnifiedGroup

    For more information, see help context 3629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType);

    /*
    Method GetUnifiedGroupFromStore

    For more information, see help context 3630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID);

    /*
    Method IsUnifiedGroup

    For more information, see help context 3628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsUnifiedGroup();

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update();

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent);

    /*
    Method Update

    For more information, see help context 2123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Update(const QVariant& MakePermanent, const QVariant& Refresh);

    /*
    Method UpdateFreeBusy

    For more information, see help context 2124 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void UpdateFreeBusy();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SyncObject : public QAxObject
{
public:
    explicit SyncObject(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SyncObject(_SyncObject *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 103 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 104 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 107 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 106 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 105 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Start

    For more information, see help context 108 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Start();

    /*
    Method Stop

    For more information, see help context 109 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Stop();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Accounts : public QAxObject
{
public:
    explicit Accounts(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Accounts(_Accounts *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 750 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Account* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Stores : public QAxObject
{
public:
    explicit Stores(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Stores(_Stores *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 818 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 816 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Store* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SelectNamesDialog : public QAxObject
{
public:
    explicit SelectNamesDialog(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SelectNamesDialog(_SelectNamesDialog *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AllowMultipleSelection

    For more information, see help context 831 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowMultipleSelection() const; //Returns the value of AllowMultipleSelection
    inline void SetAllowMultipleSelection(bool value); //Sets the value of the AllowMultipleSelection property

    /*
    Property Application

    For more information, see help context 821 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property BccLabel

    For more information, see help context 828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BccLabel() const; //Returns the value of BccLabel
    inline void SetBccLabel(const QString& value); //Sets the value of the BccLabel property

    /*
    Property Caption

    For more information, see help context 825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption
    inline void SetCaption(const QString& value); //Sets the value of the Caption property

    /*
    Property CcLabel

    For more information, see help context 829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CcLabel() const; //Returns the value of CcLabel
    inline void SetCcLabel(const QString& value); //Sets the value of the CcLabel property

    /*
    Property Class

    For more information, see help context 822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ForceResolution

    For more information, see help context 832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ForceResolution() const; //Returns the value of ForceResolution
    inline void SetForceResolution(bool value); //Sets the value of the ForceResolution property

    /*
    Property InitialAddressList

    For more information, see help context 835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* InitialAddressList() const; //Returns the value of InitialAddressList
    inline void SetInitialAddressList(Outlook::AddressList* value); //Sets the value of the InitialAddressList property

    /*
    Property NumberOfRecipientSelectors

    For more information, see help context 834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRecipientSelectors NumberOfRecipientSelectors() const; //Returns the value of NumberOfRecipientSelectors
    inline void SetNumberOfRecipientSelectors(Outlook::OlRecipientSelectors value); //Sets the value of the NumberOfRecipientSelectors property

    /*
    Property Parent

    For more information, see help context 824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Recipients

    For more information, see help context 827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients
    inline void SetRecipients(Outlook::Recipients* value); //Sets the value of the Recipients property

    /*
    Property Session

    For more information, see help context 823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowOnlyInitialAddressList

    For more information, see help context 833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowOnlyInitialAddressList() const; //Returns the value of ShowOnlyInitialAddressList
    inline void SetShowOnlyInitialAddressList(bool value); //Sets the value of the ShowOnlyInitialAddressList property

    /*
    Property ToLabel

    For more information, see help context 830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ToLabel() const; //Returns the value of ToLabel
    inline void SetToLabel(const QString& value); //Sets the value of the ToLabel property

    /*
    Method Display

    For more information, see help context 826 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Display();

    /*
    Method SetDefaultDisplayMode

    For more information, see help context 836 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetDefaultDisplayMode(Outlook::OlDefaultSelectNamesDisplayMode defaultMode);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SharingItem : public QAxObject
{
public:
    explicit SharingItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SharingItem(_SharingItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AllowWriteAccess

    For more information, see help context 700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowWriteAccess() const; //Returns the value of AllowWriteAccess
    inline void SetAllowWriteAccess(bool value); //Sets the value of the AllowWriteAccess property

    /*
    Property AlternateRecipientAllowed

    For more information, see help context 631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlternateRecipientAllowed() const; //Returns the value of AlternateRecipientAllowed
    inline void SetAlternateRecipientAllowed(bool value); //Sets the value of the AlternateRecipientAllowed property

    /*
    Property Application

    For more information, see help context 593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property BCC

    For more information, see help context 633 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BCC() const; //Returns the value of BCC
    inline void SetBCC(const QString& value); //Sets the value of the BCC property

    /*
    Property BillingInformation

    For more information, see help context 599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property CC

    For more information, see help context 634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CC() const; //Returns the value of CC
    inline void SetCC(const QString& value); //Sets the value of the CC property

    /*
    Property Categories

    For more information, see help context 601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EnableSharedAttachments

    For more information, see help context 688 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableSharedAttachments() const; //Returns the value of EnableSharedAttachments
    inline void SetEnableSharedAttachments(bool value); //Sets the value of the EnableSharedAttachments property

    /*
    Property EntryID

    For more information, see help context 606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 682 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property MAPIOBJECT

    For more information, see help context 611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Permission

    For more information, see help context 689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermission Permission() const; //Returns the value of Permission
    inline void SetPermission(Outlook::OlPermission value); //Sets the value of the Permission property

    /*
    Property PermissionService

    For more information, see help context 690 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlPermissionService PermissionService() const; //Returns the value of PermissionService
    inline void SetPermissionService(Outlook::OlPermissionService value); //Sets the value of the PermissionService property

    /*
    Property PermissionTemplateGuid

    For more information, see help context 3511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString PermissionTemplateGuid() const; //Returns the value of PermissionTemplateGuid
    inline void SetPermissionTemplateGuid(const QString& value); //Sets the value of the PermissionTemplateGuid property

    /*
    Property PropertyAccessor

    For more information, see help context 693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReadReceiptRequested

    For more information, see help context 643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReadReceiptRequested() const; //Returns the value of ReadReceiptRequested
    inline void SetReadReceiptRequested(bool value); //Sets the value of the ReadReceiptRequested property

    /*
    Property ReceivedByEntryID

    For more information, see help context 644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedOnBehalfOfEntryID

    For more information, see help context 646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfEntryID() const; //Returns the value of ReceivedOnBehalfOfEntryID

    /*
    Property ReceivedOnBehalfOfName

    For more information, see help context 647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedOnBehalfOfName() const; //Returns the value of ReceivedOnBehalfOfName

    /*
    Property ReceivedTime

    For more information, see help context 648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property RecipientReassignmentProhibited

    For more information, see help context 649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool RecipientReassignmentProhibited() const; //Returns the value of RecipientReassignmentProhibited
    inline void SetRecipientReassignmentProhibited(bool value); //Sets the value of the RecipientReassignmentProhibited property

    /*
    Property Recipients

    For more information, see help context 650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property RemoteID

    For more information, see help context 695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteID() const; //Returns the value of RemoteID

    /*
    Property RemoteName

    For more information, see help context 694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteName() const; //Returns the value of RemoteName

    /*
    Property RemotePath

    For more information, see help context 696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemotePath() const; //Returns the value of RemotePath

    /*
    Property RemoteStatus

    For more information, see help context 656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus RemoteStatus() const; //Returns the value of RemoteStatus
    inline void SetRemoteStatus(Outlook::OlRemoteStatus value); //Sets the value of the RemoteStatus property

    /*
    Property ReplyRecipientNames

    For more information, see help context 657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RequestedFolder

    For more information, see help context 702 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultFolders RequestedFolder() const; //Returns the value of RequestedFolder

    /*
    Property RetentionExpirationDate

    For more information, see help context 3565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property SentOnBehalfOfName

    For more information, see help context 663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SentOnBehalfOfName() const; //Returns the value of SentOnBehalfOfName
    inline void SetSentOnBehalfOfName(const QString& value); //Sets the value of the SentOnBehalfOfName property

    /*
    Property Session

    For more information, see help context 595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SharingProvider

    For more information, see help context 699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSharingProvider SharingProvider() const; //Returns the value of SharingProvider

    /*
    Property SharingProviderGuid

    For more information, see help context 697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SharingProviderGuid() const; //Returns the value of SharingProviderGuid

    /*
    Property Size

    For more information, see help context 619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property TaskCompletedDate

    For more information, see help context 3221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 3219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 3220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 3218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property To

    For more information, see help context 665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property Type

    For more information, see help context 701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSharingMsgType Type() const; //Returns the value of Type
    inline void SetType(Outlook::OlSharingMsgType value); //Sets the value of the Type property

    /*
    Property UnRead

    For more information, see help context 621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method AddBusinessCard

    For more information, see help context 3217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddBusinessCard(Outlook::ContactItem* contact);

    /*
    Method Allow

    For more information, see help context 691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Allow();

    /*
    Method ClearConversationIndex

    For more information, see help context 668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Deny

    For more information, see help context 692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* Deny();

    /*
    Method Display

    For more information, see help context 626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method OpenSharedFolder

    For more information, see help context 698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder();

    /*
    Method PrintOut

    For more information, see help context 628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Explorer : public QAxObject
{
public:
    explicit Explorer(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Explorer(_Explorer *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AccountSelector

    For more information, see help context 3553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AccountSelector* AccountSelector() const; //Returns the value of AccountSelector

    /*
    Property ActiveInlineResponse

    For more information, see help context 3595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveInlineResponse() const; //Returns the value of ActiveInlineResponse

    /*
    Property ActiveInlineResponseWordEditor

    For more information, see help context 3597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveInlineResponseWordEditor() const; //Returns the value of ActiveInlineResponseWordEditor

    /*
    Property Application

    For more information, see help context 2757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AttachmentSelection

    For more information, see help context 3479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AttachmentSelection* AttachmentSelection() const; //Returns the value of AttachmentSelection

    /*
    Property Caption

    For more information, see help context 2765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 2758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CommandBars

    For more information, see help context 2761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::CommandBars* CommandBars() const; //Returns the value of CommandBars

    /*
    Property CurrentFolder

    For more information, see help context 2762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* CurrentFolder() const; //Returns the value of CurrentFolder
    inline void SetCurrentFolder(Outlook::MAPIFolder* value); //Sets the value of the CurrentFolder property

    /*
    Property CurrentView

    For more information, see help context 2766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant CurrentView() const; //Returns the value of CurrentView
    inline void SetCurrentView(const QVariant& value); //Sets the value of the CurrentView property

    /*
    Property DisplayMode

    For more information, see help context 3600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDisplayMode DisplayMode() const; //Returns the value of DisplayMode

    /*
    Property HTMLDocument

    For more information, see help context 2778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* HTMLDocument() const; //Returns the value of HTMLDocument

    /*
    Property Height

    For more information, see help context 2767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left

    For more information, see help context 2768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property NavigationPane

    For more information, see help context 2782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationPane* NavigationPane() const; //Returns the value of NavigationPane

    /*
    Property Panes

    For more information, see help context 2769 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Panes* Panes() const; //Returns the value of Panes

    /*
    Property Parent

    For more information, see help context 2760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PreviewPane

    For more information, see help context 3639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_PreviewPane* PreviewPane() const; //Returns the value of PreviewPane

    /*
    Property Selection

    For more information, see help context 2770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Selection* Selection() const; //Returns the value of Selection

    /*
    Property Session

    For more information, see help context 2759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Top

    For more information, see help context 2771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Views

    For more information, see help context 2777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Views() const; //Returns the value of Views

    /*
    Property Width

    For more information, see help context 2772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property WindowState

    For more information, see help context 2773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlWindowState WindowState() const; //Returns the value of WindowState
    inline void SetWindowState(Outlook::OlWindowState value); //Sets the value of the WindowState property

    /*
    Method Activate

    For more information, see help context 2774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Activate();

    /*
    Method AddToSelection

    For more information, see help context 3309 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToSelection(IDispatch* Item);

    /*
    Method ClearSearch

    For more information, see help context 2783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearSearch();

    /*
    Method ClearSelection

    For more information, see help context 3312 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearSelection();

    /*
    Method Close

    For more information, see help context 2763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close();

    /*
    Method DeselectFolder

    For more information, see help context 2780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DeselectFolder(Outlook::MAPIFolder* Folder);

    /*
    Method Display

    For more information, see help context 2764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method IsFolderSelected

    For more information, see help context 2781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsFolderSelected(Outlook::MAPIFolder* Folder);

    /*
    Method IsItemSelectableInView

    For more information, see help context 3308 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsItemSelectableInView(IDispatch* Item);

    /*
    Method IsPaneVisible

    For more information, see help context 2775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsPaneVisible(Outlook::OlPane Pane);

    /*
    Method RemoveFromSelection

    For more information, see help context 3310 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveFromSelection(IDispatch* Item);

    /*
    Method Search

    For more information, see help context 2784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Search(const QString& Query, Outlook::OlSearchScope SearchScope);

    /*
    Method SelectAllItems

    For more information, see help context 3311 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SelectAllItems();

    /*
    Method SelectFolder

    For more information, see help context 2779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SelectFolder(Outlook::MAPIFolder* Folder);

    /*
    Method ShowPane

    For more information, see help context 2776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowPane(Outlook::OlPane Pane, bool Visible);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Inspector : public QAxObject
{
public:
    explicit Inspector(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Inspector(_Inspector *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AttachmentSelection

    For more information, see help context 3486 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AttachmentSelection* AttachmentSelection() const; //Returns the value of AttachmentSelection

    /*
    Property Caption

    For more information, see help context 2973 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 2958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CommandBars

    For more information, see help context 2961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::CommandBars* CommandBars() const; //Returns the value of CommandBars

    /*
    Property CurrentItem

    For more information, see help context 2962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CurrentItem() const; //Returns the value of CurrentItem

    /*
    Property EditorType

    For more information, see help context 2963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlEditorType EditorType() const; //Returns the value of EditorType

    /*
    Property HTMLEditor

    For more information, see help context 2971 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* HTMLEditor() const; //Returns the value of HTMLEditor

    /*
    Property Height

    For more information, see help context 2974 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property Left

    For more information, see help context 2975 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property ModifiedFormPages

    For more information, see help context 2964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ModifiedFormPages() const; //Returns the value of ModifiedFormPages

    /*
    Property Parent

    For more information, see help context 2960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Top

    For more information, see help context 2976 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width

    For more information, see help context 2977 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property WindowState

    For more information, see help context 2978 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlWindowState WindowState() const; //Returns the value of WindowState
    inline void SetWindowState(Outlook::OlWindowState value); //Sets the value of the WindowState property

    /*
    Property WordEditor

    For more information, see help context 2972 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* WordEditor() const; //Returns the value of WordEditor

    /*
    Method Activate

    For more information, see help context 2979 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Activate();

    /*
    Method Close

    For more information, see help context 2965 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Display

    For more information, see help context 2966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 2966 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method HideFormPage

    For more information, see help context 2967 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void HideFormPage(const QString& PageName);

    /*
    Method IsWordMail

    For more information, see help context 2968 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsWordMail();

    /*
    Method NewFormRegion

    For more information, see help context 2981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* NewFormRegion();

    /*
    Method OpenFormRegion

    For more information, see help context 2982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* OpenFormRegion(const QString& Path);

    /*
    Method SaveFormRegion

    For more information, see help context 2983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveFormRegion(IDispatch* Page, const QString& FileName);

    /*
    Method SetControlItemProperty

    For more information, see help context 2980 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetControlItemProperty(IDispatch* Control, const QString& PropertyName);

    /*
    Method SetCurrentFormPage

    For more information, see help context 2969 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetCurrentFormPage(const QString& PageName);

    /*
    Method SetSchedulingStartTime

    For more information, see help context 3555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetSchedulingStartTime(const QDateTime& Start);

    /*
    Method ShowFormPage

    For more information, see help context 2970 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowFormPage(const QString& PageName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TimeZones : public QAxObject
{
public:
    explicit TimeZones(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TimeZones(_TimeZones *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3291 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3292 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 3295 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property CurrentTimeZone

    For more information, see help context 3298 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* CurrentTimeZone() const; //Returns the value of CurrentTimeZone

    /*
    Property Parent

    For more information, see help context 3294 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3293 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method ConvertTime

    For more information, see help context 3297 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ConvertTime(const QDateTime& SourceDateTime, Outlook::_TimeZone* SourceTimeZone, Outlook::_TimeZone* DestinationTimeZone);

    /*
    Method Item

    For more information, see help context 3296 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OlkTimeZoneControl : public QAxWidget
{
public:
    explicit OlkTimeZoneControl(QWidget *parent = nullptr, Qt::WindowFlags f = {});
    OlkTimeZoneControl(_OlkTimeZoneControl *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AppointmentTimeField

    For more information, see help context 1000534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAppointmentTimeField AppointmentTimeField() const; //Returns the value of AppointmentTimeField
    inline void SetAppointmentTimeField(Outlook::OlAppointmentTimeField value); //Sets the value of the AppointmentTimeField property

    /*
    Property BorderStyle

    For more information, see help context 1000536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBorderStyle BorderStyle() const; //Returns the value of BorderStyle
    inline void SetBorderStyle(Outlook::OlBorderStyle value); //Sets the value of the BorderStyle property

    /*
    Property Enabled

    For more information, see help context 1000537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Locked

    For more information, see help context 1000505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Locked() const; //Returns the value of Locked
    inline void SetLocked(bool value); //Sets the value of the Locked property

    /*
    Property MouseIcon

    For more information, see help context 1000506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap MouseIcon() const; //Returns the value of MouseIcon
    inline void SetMouseIcon(const QPixmap& value); //Sets the value of the MouseIcon property

    /*
    Property MousePointer

    For more information, see help context 1000507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMousePointer MousePointer() const; //Returns the value of MousePointer
    inline void SetMousePointer(Outlook::OlMousePointer value); //Sets the value of the MousePointer property

    /*
    Property SelectedTimeZoneIndex

    For more information, see help context 1000533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int SelectedTimeZoneIndex() const; //Returns the value of SelectedTimeZoneIndex
    inline void SetSelectedTimeZoneIndex(int value); //Sets the value of the SelectedTimeZoneIndex property

    /*
    Property Value

    For more information, see help context 1000511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Value() const; //Returns the value of Value
    inline void SetValue(const QVariant& value); //Sets the value of the Value property

    /*
    Method DropDown

    For more information, see help context 1000514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void DropDown();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AppointmentItem : public QAxObject
{
public:
    explicit AppointmentItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AppointmentItem(_AppointmentItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property AllDayEvent

    For more information, see help context 876 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllDayEvent() const; //Returns the value of AllDayEvent
    inline void SetAllDayEvent(bool value); //Sets the value of the AllDayEvent property

    /*
    Property Application

    For more information, see help context 838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 3642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property BusyStatus

    For more information, see help context 877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBusyStatus BusyStatus() const; //Returns the value of BusyStatus
    inline void SetBusyStatus(Outlook::OlBusyStatus value); //Sets the value of the BusyStatus property

    /*
    Property Categories

    For more information, see help context 846 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property ConferenceServerAllowExternal

    For more information, see help context 911 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ConferenceServerAllowExternal() const; //Returns the value of ConferenceServerAllowExternal
    inline void SetConferenceServerAllowExternal(bool value); //Sets the value of the ConferenceServerAllowExternal property

    /*
    Property ConferenceServerPassword

    For more information, see help context 912 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConferenceServerPassword() const; //Returns the value of ConferenceServerPassword
    inline void SetConferenceServerPassword(const QString& value); //Sets the value of the ConferenceServerPassword property

    /*
    Property Conflicts

    For more information, see help context 921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DoNotForwardMeeting

    For more information, see help context 3674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DoNotForwardMeeting() const; //Returns the value of DoNotForwardMeeting
    inline void SetDoNotForwardMeeting(bool value); //Sets the value of the DoNotForwardMeeting property

    /*
    Property DownloadState

    For more information, see help context 914 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Duration

    For more information, see help context 878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Duration() const; //Returns the value of Duration
    inline void SetDuration(int value); //Sets the value of the Duration property

    /*
    Property End

    For more information, see help context 879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime End() const; //Returns the value of End
    inline void SetEnd(const QDateTime& value); //Sets the value of the End property

    /*
    Property EndInEndTimeZone

    For more information, see help context 3274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndInEndTimeZone() const; //Returns the value of EndInEndTimeZone
    inline void SetEndInEndTimeZone(const QDateTime& value); //Sets the value of the EndInEndTimeZone property

    /*
    Property EndTimeZone

    For more information, see help context 3276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* EndTimeZone() const; //Returns the value of EndTimeZone
    inline void SetEndTimeZone(Outlook::_TimeZone* value); //Sets the value of the EndTimeZone property

    /*
    Property EndUTC

    For more information, see help context 3272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime EndUTC() const; //Returns the value of EndUTC
    inline void SetEndUTC(const QDateTime& value); //Sets the value of the EndUTC property

    /*
    Property EntryID

    For more information, see help context 851 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FDelegateAppt

    For more information, see help context 3677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool FDelegateAppt() const; //Returns the value of FDelegateAppt

    /*
    Property FOthersAppt

    For more information, see help context 3675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool FOthersAppt() const; //Returns the value of FOthersAppt

    /*
    Property ForceUpdateToAllAttendees

    For more information, see help context 3226 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ForceUpdateToAllAttendees() const; //Returns the value of ForceUpdateToAllAttendees
    inline void SetForceUpdateToAllAttendees(bool value); //Sets the value of the ForceUpdateToAllAttendees property

    /*
    Property FormDescription

    For more information, see help context 852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property GlobalAppointmentID

    For more information, see help context 924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GlobalAppointmentID() const; //Returns the value of GlobalAppointmentID

    /*
    Property Importance

    For more information, see help context 854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 916 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsOnlineMeeting

    For more information, see help context 880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsOnlineMeeting() const; //Returns the value of IsOnlineMeeting
    inline void SetIsOnlineMeeting(bool value); //Sets the value of the IsOnlineMeeting property

    /*
    Property IsRecurring

    For more information, see help context 881 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRecurring() const; //Returns the value of IsRecurring

    /*
    Property ItemProperties

    For more information, see help context 913 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 910 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property Location

    For more information, see help context 882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Location() const; //Returns the value of Location
    inline void SetLocation(const QString& value); //Sets the value of the Location property

    /*
    Property MAPIOBJECT

    For more information, see help context 856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MeetingStatus

    For more information, see help context 883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMeetingStatus MeetingStatus() const; //Returns the value of MeetingStatus
    inline void SetMeetingStatus(Outlook::OlMeetingStatus value); //Sets the value of the MeetingStatus property

    /*
    Property MeetingWorkspaceURL

    For more information, see help context 919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MeetingWorkspaceURL() const; //Returns the value of MeetingWorkspaceURL

    /*
    Property MessageClass

    For more information, see help context 857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NetMeetingAutoStart

    For more information, see help context 884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NetMeetingAutoStart() const; //Returns the value of NetMeetingAutoStart
    inline void SetNetMeetingAutoStart(bool value); //Sets the value of the NetMeetingAutoStart property

    /*
    Property NetMeetingDocPathName

    For more information, see help context 908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingDocPathName() const; //Returns the value of NetMeetingDocPathName
    inline void SetNetMeetingDocPathName(const QString& value); //Sets the value of the NetMeetingDocPathName property

    /*
    Property NetMeetingOrganizerAlias

    For more information, see help context 885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingOrganizerAlias() const; //Returns the value of NetMeetingOrganizerAlias
    inline void SetNetMeetingOrganizerAlias(const QString& value); //Sets the value of the NetMeetingOrganizerAlias property

    /*
    Property NetMeetingServer

    For more information, see help context 886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetMeetingServer() const; //Returns the value of NetMeetingServer
    inline void SetNetMeetingServer(const QString& value); //Sets the value of the NetMeetingServer property

    /*
    Property NetMeetingType

    For more information, see help context 887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNetMeetingType NetMeetingType() const; //Returns the value of NetMeetingType
    inline void SetNetMeetingType(Outlook::OlNetMeetingType value); //Sets the value of the NetMeetingType property

    /*
    Property NetShowURL

    For more information, see help context 909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString NetShowURL() const; //Returns the value of NetShowURL
    inline void SetNetShowURL(const QString& value); //Sets the value of the NetShowURL property

    /*
    Property NoAging

    For more information, see help context 859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OptionalAttendees

    For more information, see help context 888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OptionalAttendees() const; //Returns the value of OptionalAttendees
    inline void SetOptionalAttendees(const QString& value); //Sets the value of the OptionalAttendees property

    /*
    Property Organizer

    For more information, see help context 889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Organizer() const; //Returns the value of Organizer

    /*
    Property OutlookInternalVersion

    For more information, see help context 860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 861 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 841 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Recipients

    For more information, see help context 890 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property RecurrenceState

    For more information, see help context 891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRecurrenceState RecurrenceState() const; //Returns the value of RecurrenceState

    /*
    Property ReminderMinutesBeforeStart

    For more information, see help context 892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ReminderMinutesBeforeStart() const; //Returns the value of ReminderMinutesBeforeStart
    inline void SetReminderMinutesBeforeStart(int value); //Sets the value of the ReminderMinutesBeforeStart property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReplyTime

    For more information, see help context 897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReplyTime() const; //Returns the value of ReplyTime
    inline void SetReplyTime(const QDateTime& value); //Sets the value of the ReplyTime property

    /*
    Property RequiredAttendees

    For more information, see help context 898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RequiredAttendees() const; //Returns the value of RequiredAttendees
    inline void SetRequiredAttendees(const QString& value); //Sets the value of the RequiredAttendees property

    /*
    Property Resources

    For more information, see help context 899 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Resources() const; //Returns the value of Resources
    inline void SetResources(const QString& value); //Sets the value of the Resources property

    /*
    Property ResponseRequested

    For more information, see help context 900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ResponseRequested() const; //Returns the value of ResponseRequested
    inline void SetResponseRequested(bool value); //Sets the value of the ResponseRequested property

    /*
    Property ResponseStatus

    For more information, see help context 901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlResponseStatus ResponseStatus() const; //Returns the value of ResponseStatus

    /*
    Property Saved

    For more information, see help context 862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sensitivity

    For more information, see help context 863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Start

    For more information, see help context 902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Start() const; //Returns the value of Start
    inline void SetStart(const QDateTime& value); //Sets the value of the Start property

    /*
    Property StartInStartTimeZone

    For more information, see help context 3273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartInStartTimeZone() const; //Returns the value of StartInStartTimeZone
    inline void SetStartInStartTimeZone(const QDateTime& value); //Sets the value of the StartInStartTimeZone property

    /*
    Property StartTimeZone

    For more information, see help context 3275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_TimeZone* StartTimeZone() const; //Returns the value of StartTimeZone
    inline void SetStartTimeZone(Outlook::_TimeZone* value); //Sets the value of the StartTimeZone property

    /*
    Property StartUTC

    For more information, see help context 3271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartUTC() const; //Returns the value of StartUTC
    inline void SetStartUTC(const QDateTime& value); //Sets the value of the StartUTC property

    /*
    Property Subject

    For more information, see help context 865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 866 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 867 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method ClearRecurrencePattern

    For more information, see help context 903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearRecurrencePattern();

    /*
    Method Close

    For more information, see help context 868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method CopyTo

    For more information, see help context 3517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_AppointmentItem* CopyTo(Outlook::MAPIFolder* DestinationFolder, Outlook::OlAppointmentCopyOptions CopyOptions);

    /*
    Method Delete

    For more information, see help context 870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method ForwardAsVcal

    For more information, see help context 904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ForwardAsVcal();

    /*
    Method GetConversation

    For more information, see help context 3403 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetOrganizer

    For more information, see help context 3556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetOrganizer();

    /*
    Method GetRecurrencePattern

    For more information, see help context 905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RecurrencePattern* GetRecurrencePattern();

    /*
    Method Move

    For more information, see help context 872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response);

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI);

    /*
    Method Respond

    For more information, see help context 906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog);

    /*
    Method Save

    For more information, see help context 874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 915 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MeetingItem : public QAxObject
{
public:
    explicit MeetingItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MeetingItem(_MeetingItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1402 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1403 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoForwarded

    For more information, see help context 1436 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoForwarded() const; //Returns the value of AutoForwarded
    inline void SetAutoForwarded(bool value); //Sets the value of the AutoForwarded property

    /*
    Property AutoResolvedWinner

    For more information, see help context 1467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1404 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1405 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 3643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property Categories

    For more information, see help context 1406 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1399 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1468 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3472 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DeferredDeliveryTime

    For more information, see help context 1437 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DeferredDeliveryTime() const; //Returns the value of DeferredDeliveryTime
    inline void SetDeferredDeliveryTime(const QDateTime& value); //Sets the value of the DeferredDeliveryTime property

    /*
    Property DeleteAfterSubmit

    For more information, see help context 1438 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DeleteAfterSubmit() const; //Returns the value of DeleteAfterSubmit
    inline void SetDeleteAfterSubmit(bool value); //Sets the value of the DeleteAfterSubmit property

    /*
    Property DownloadState

    For more information, see help context 1460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FlagDueBy

    For more information, see help context 1440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime FlagDueBy() const; //Returns the value of FlagDueBy
    inline void SetFlagDueBy(const QDateTime& value); //Sets the value of the FlagDueBy property

    /*
    Property FlagIcon

    For more information, see help context 1466 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagIcon FlagIcon() const; //Returns the value of FlagIcon
    inline void SetFlagIcon(Outlook::OlFlagIcon value); //Sets the value of the FlagIcon property

    /*
    Property FlagRequest

    For more information, see help context 1441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FlagRequest() const; //Returns the value of FlagRequest
    inline void SetFlagRequest(const QString& value); //Sets the value of the FlagRequest property

    /*
    Property FlagStatus

    For more information, see help context 1442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFlagStatus FlagStatus() const; //Returns the value of FlagStatus
    inline void SetFlagStatus(Outlook::OlFlagStatus value); //Sets the value of the FlagStatus property

    /*
    Property FormDescription

    For more information, see help context 1412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1464 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsLatestVersion

    For more information, see help context 3535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsLatestVersion() const; //Returns the value of IsLatestVersion

    /*
    Property ItemProperties

    For more information, see help context 1462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MeetingWorkspaceURL

    For more information, see help context 1465 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MeetingWorkspaceURL() const; //Returns the value of MeetingWorkspaceURL

    /*
    Property MessageClass

    For more information, see help context 1417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1419 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OriginatorDeliveryReportRequested

    For more information, see help context 1443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool OriginatorDeliveryReportRequested() const; //Returns the value of OriginatorDeliveryReportRequested
    inline void SetOriginatorDeliveryReportRequested(bool value); //Sets the value of the OriginatorDeliveryReportRequested property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1420 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1421 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1471 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReceivedTime

    For more information, see help context 1444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime
    inline void SetReceivedTime(const QDateTime& value); //Sets the value of the ReceivedTime property

    /*
    Property Recipients

    For more information, see help context 1445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderSet

    For more information, see help context 1446 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderTime

    For more information, see help context 1447 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property ReplyRecipients

    For more information, see help context 1448 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property RetentionExpirationDate

    For more information, see help context 3560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property SaveSentMessageFolder

    For more information, see help context 1449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* SaveSentMessageFolder() const; //Returns the value of SaveSentMessageFolder
    inline void SetSaveSentMessageFolder(Outlook::MAPIFolder* value); //Sets the value of the SaveSentMessageFolder property

    /*
    Property Saved

    For more information, see help context 1422 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 3509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 1469 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1470 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1423 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 1451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 1452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 1400 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1424 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1425 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 1453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property UnRead

    For more information, see help context 1426 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1427 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1428 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1429 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1430 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1431 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1454 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MeetingItem* Forward();

    /*
    Method GetAssociatedAppointment

    For more information, see help context 1455 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AppointmentItem* GetAssociatedAppointment(bool AddToCalendar);

    /*
    Method GetConversation

    For more information, see help context 3406 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1456 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1435 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AttachmentSelection : public QAxObject
{
public:
    explicit AttachmentSelection(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AttachmentSelection(_AttachmentSelection *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Location

    For more information, see help context 3482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSelectionLocation Location() const; //Returns the value of Location

    /*
    Property Parent

    For more information, see help context 2942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetSelection

    For more information, see help context 3534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Selection* GetSelection(Outlook::OlSelectionContents SelectionContents);

    /*
    Method Item

    For more information, see help context 2944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachment* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Folder : public QAxObject
{
public:
    explicit Folder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Folder(MAPIFolder *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AddressBookName

    For more information, see help context 2004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AddressBookName() const; //Returns the value of AddressBookName
    inline void SetAddressBookName(const QString& value); //Sets the value of the AddressBookName property

    /*
    Property Application

    For more information, see help context 1981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 1982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentView

    For more information, see help context 2009 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* CurrentView() const; //Returns the value of CurrentView

    /*
    Property CustomViewsOnly

    For more information, see help context 2010 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool CustomViewsOnly() const; //Returns the value of CustomViewsOnly
    inline void SetCustomViewsOnly(bool value); //Sets the value of the CustomViewsOnly property

    /*
    Property DefaultItemType

    For more information, see help context 1985 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlItemType DefaultItemType() const; //Returns the value of DefaultItemType

    /*
    Property DefaultMessageClass

    For more information, see help context 1986 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DefaultMessageClass() const; //Returns the value of DefaultMessageClass

    /*
    Property Description

    For more information, see help context 1987 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property EntryID

    For more information, see help context 1988 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FolderPath

    For more information, see help context 2006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FolderPath() const; //Returns the value of FolderPath

    /*
    Property Folders

    For more information, see help context 1989 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* Folders() const; //Returns the value of Folders

    /*
    Property FullFolderPath

    For more information, see help context 2013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullFolderPath() const; //Returns the value of FullFolderPath

    /*
    Property InAppFolderSyncObject

    For more information, see help context 2008 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool InAppFolderSyncObject() const; //Returns the value of InAppFolderSyncObject
    inline void SetInAppFolderSyncObject(bool value); //Sets the value of the InAppFolderSyncObject property

    /*
    Property IsSharePointFolder

    For more information, see help context 2014 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSharePointFolder() const; //Returns the value of IsSharePointFolder

    /*
    Property Items

    For more information, see help context 1990 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Items* Items() const; //Returns the value of Items

    /*
    Property MAPIOBJECT

    For more information, see help context 2012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Name

    For more information, see help context 1991 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 1984 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2019 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 1983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowAsOutlookAB

    For more information, see help context 2005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowAsOutlookAB() const; //Returns the value of ShowAsOutlookAB
    inline void SetShowAsOutlookAB(bool value); //Sets the value of the ShowAsOutlookAB property

    /*
    Property ShowItemCount

    For more information, see help context 2015 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlShowItemCount ShowItemCount() const; //Returns the value of ShowItemCount
    inline void SetShowItemCount(Outlook::OlShowItemCount value); //Sets the value of the ShowItemCount property

    /*
    Property Store

    For more information, see help context 2016 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* Store() const; //Returns the value of Store

    /*
    Property StoreID

    For more information, see help context 1992 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StoreID() const; //Returns the value of StoreID

    /*
    Property UnReadItemCount

    For more information, see help context 1993 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int UnReadItemCount() const; //Returns the value of UnReadItemCount

    /*
    Property UserDefinedProperties

    For more information, see help context 2021 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperties* UserDefinedProperties() const; //Returns the value of UserDefinedProperties

    /*
    Property UserPermissions

    For more information, see help context 1999 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* UserPermissions() const; //Returns the value of UserPermissions

    /*
    Property Views

    For more information, see help context 2011 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Views* Views() const; //Returns the value of Views

    /*
    Property WebViewAllowNavigation

    For more information, see help context 2002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewAllowNavigation() const; //Returns the value of WebViewAllowNavigation
    inline void SetWebViewAllowNavigation(bool value); //Sets the value of the WebViewAllowNavigation property

    /*
    Property WebViewOn

    For more information, see help context 2000 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewOn() const; //Returns the value of WebViewOn
    inline void SetWebViewOn(bool value); //Sets the value of the WebViewOn property

    /*
    Property WebViewURL

    For more information, see help context 2001 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString WebViewURL() const; //Returns the value of WebViewURL
    inline void SetWebViewURL(const QString& value); //Sets the value of the WebViewURL property

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites();

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI);

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI, const QVariant& Name);

    /*
    Method AddToPFFavorites

    For more information, see help context 2003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToPFFavorites();

    /*
    Method CopyTo

    For more information, see help context 1994 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* CopyTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method Delete

    For more information, see help context 1995 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1996 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method GetCalendarExporter

    For more information, see help context 2020 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::CalendarSharing* GetCalendarExporter();

    /*
    Method GetCustomIcon

    For more information, see help context 3316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap GetCustomIcon();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer(const QVariant& DisplayMode);

    /*
    Method GetStorage

    For more information, see help context 2017 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_StorageItem* GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter, const QVariant& TableContents);

    /*
    Method MoveTo

    For more information, see help context 1998 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MoveTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method SetCustomIcon

    For more information, see help context 3317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetCustomIcon(const QPixmap& Picture);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ColumnFormat : public QAxObject
{
public:
    explicit ColumnFormat(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ColumnFormat(_ColumnFormat *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Align

    For more information, see help context 2731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAlign Align() const; //Returns the value of Align
    inline void SetAlign(Outlook::OlAlign value); //Sets the value of the Align property

    /*
    Property Application

    For more information, see help context 2724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property FieldFormat

    For more information, see help context 2729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int FieldFormat() const; //Returns the value of FieldFormat
    inline void SetFieldFormat(int value); //Sets the value of the FieldFormat property

    /*
    Property FieldType

    For more information, see help context 2732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlUserPropertyType FieldType() const; //Returns the value of FieldType

    /*
    Property Label

    For more information, see help context 2728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Label() const; //Returns the value of Label
    inline void SetLabel(const QString& value); //Sets the value of the Label property

    /*
    Property Parent

    For more information, see help context 2727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Width

    For more information, see help context 2730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ViewField : public QAxObject
{
public:
    explicit ViewField(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ViewField(_ViewField *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2540 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ColumnFormat

    For more information, see help context 2544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ColumnFormat* ColumnFormat() const; //Returns the value of ColumnFormat

    /*
    Property Parent

    For more information, see help context 2542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ViewXMLSchemaName

    For more information, see help context 2543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ViewXMLSchemaName() const; //Returns the value of ViewXMLSchemaName

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OrderFields : public QAxObject
{
public:
    explicit OrderFields(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    OrderFields(_OrderFields *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2673 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Add(const QString& PropertyName);

    /*
    Method Add

    For more information, see help context 2678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Add(const QString& PropertyName, const QVariant& IsDescending);

    /*
    Method Insert

    For more information, see help context 2681 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Insert(const QString& PropertyName, const QVariant& Index);

    /*
    Method Insert

    For more information, see help context 2681 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderField* Insert(const QString& PropertyName, const QVariant& Index, const QVariant& IsDescending);

    /*
    Method Item

    For more information, see help context 2677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_OrderField* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OrderField : public QAxObject
{
public:
    explicit OrderField(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    OrderField(_OrderField *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2683 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2684 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property IsDescending

    For more information, see help context 2689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsDescending() const; //Returns the value of IsDescending
    inline void SetIsDescending(bool value); //Sets the value of the IsDescending property

    /*
    Property Parent

    For more information, see help context 2686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ViewXMLSchemaName

    For more information, see help context 2687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ViewXMLSchemaName() const; //Returns the value of ViewXMLSchemaName

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ViewFields : public QAxObject
{
public:
    explicit ViewFields(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ViewFields(_ViewFields *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2552 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewField* Add(const QString& PropertyName);

    /*
    Method Insert

    For more information, see help context 2553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewField* Insert(const QString& PropertyName, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 2551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_ViewField* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ViewFont : public QAxObject
{
public:
    explicit ViewFont(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ViewFont(_ViewFont *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Bold

    For more information, see help context 2695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Bold() const; //Returns the value of Bold
    inline void SetBold(bool value); //Sets the value of the Bold property

    /*
    Property Class

    For more information, see help context 2692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 2701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlColor value); //Sets the value of the Color property

    /*
    Property ExtendedColor

    For more information, see help context 3491 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCategoryColor ExtendedColor() const; //Returns the value of ExtendedColor
    inline void SetExtendedColor(Outlook::OlCategoryColor value); //Sets the value of the ExtendedColor property

    /*
    Property Italic

    For more information, see help context 2696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Italic() const; //Returns the value of Italic
    inline void SetItalic(bool value); //Sets the value of the Italic property

    /*
    Property Name

    For more information, see help context 2697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 2698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size
    inline void SetSize(int value); //Sets the value of the Size property

    /*
    Property Strikethrough

    For more information, see help context 2699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Strikethrough() const; //Returns the value of Strikethrough
    inline void SetStrikethrough(bool value); //Sets the value of the Strikethrough property

    /*
    Property Underline

    For more information, see help context 2700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Underline() const; //Returns the value of Underline
    inline void SetUnderline(bool value); //Sets the value of the Underline property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AutoFormatRules : public QAxObject
{
public:
    explicit AutoFormatRules(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AutoFormatRules(_AutoFormatRules *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Add(const QString& Name);

    /*
    Method Insert

    For more information, see help context 2720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Insert(const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 2718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRule* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method RemoveAll

    For more information, see help context 2722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveAll();

    /*
    Method Save

    For more information, see help context 3214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AutoFormatRule : public QAxObject
{
public:
    explicit AutoFormatRule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AutoFormatRule(_AutoFormatRule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2704 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Enabled

    For more information, see help context 2709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Enabled() const; //Returns the value of Enabled
    inline void SetEnabled(bool value); //Sets the value of the Enabled property

    /*
    Property Filter

    For more information, see help context 2708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Font

    For more information, see help context 2710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* Font() const; //Returns the value of Font
    inline void SetFont(Outlook::ViewFont* value); //Sets the value of the Font property

    /*
    Property Name

    For more information, see help context 2707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2705 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 2711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationFolders : public QAxObject
{
public:
    explicit NavigationFolders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationFolders(_NavigationFolders *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 2897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationFolder* Add(Outlook::MAPIFolder* Folder);

    /*
    Method Item

    For more information, see help context 2896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationFolder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 2898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(Outlook::NavigationFolder* RemovableFolder);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationFolder : public QAxObject
{
public:
    explicit NavigationFolder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationFolder(_NavigationFolder *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DisplayName

    For more information, see help context 2909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property Folder

    For more information, see help context 2904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Folder() const; //Returns the value of Folder

    /*
    Property IsRemovable

    For more information, see help context 2908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRemovable() const; //Returns the value of IsRemovable

    /*
    Property IsSelected

    For more information, see help context 2905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSelected() const; //Returns the value of IsSelected
    inline void SetIsSelected(bool value); //Sets the value of the IsSelected property

    /*
    Property IsSideBySide

    For more information, see help context 2906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSideBySide() const; //Returns the value of IsSideBySide
    inline void SetIsSideBySide(bool value); //Sets the value of the IsSideBySide property

    /*
    Property Parent

    For more information, see help context 2903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationGroup : public QAxObject
{
public:
    explicit NavigationGroup(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationGroup(_NavigationGroup *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property GroupType

    For more information, see help context 2886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGroupType GroupType() const; //Returns the value of GroupType

    /*
    Property Name

    For more information, see help context 2888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property NavigationFolders

    For more information, see help context 2887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationFolders* NavigationFolders() const; //Returns the value of NavigationFolders

    /*
    Property Parent

    For more information, see help context 2885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT FormRegion : public QAxObject
{
public:
    explicit FormRegion(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    FormRegion(_FormRegion *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Detail

    For more information, see help context 2392 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Detail() const; //Returns the value of Detail
    inline void SetDetail(const QString& value); //Sets the value of the Detail property

    /*
    Property DisplayName

    For more information, see help context 2399 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DisplayName() const; //Returns the value of DisplayName

    /*
    Property EnableAutoLayout

    For more information, see help context 3265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool EnableAutoLayout() const; //Returns the value of EnableAutoLayout
    inline void SetEnableAutoLayout(bool value); //Sets the value of the EnableAutoLayout property

    /*
    Property Form

    For more information, see help context 2391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Form() const; //Returns the value of Form

    /*
    Property FormRegionMode

    For more information, see help context 2395 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlFormRegionMode FormRegionMode() const; //Returns the value of FormRegionMode

    /*
    Property Inspector

    For more information, see help context 2394 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* Inspector() const; //Returns the value of Inspector

    /*
    Property InternalName

    For more information, see help context 2400 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString InternalName() const; //Returns the value of InternalName

    /*
    Property IsExpanded

    For more information, see help context 2389 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsExpanded() const; //Returns the value of IsExpanded

    /*
    Property Item

    For more information, see help context 2393 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property Language

    For more information, see help context 2396 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Language() const; //Returns the value of Language

    /*
    Property Parent

    For more information, see help context 2388 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2387 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SuppressControlReplacement

    For more information, see help context 3024 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SuppressControlReplacement() const; //Returns the value of SuppressControlReplacement
    inline void SetSuppressControlReplacement(bool value); //Sets the value of the SuppressControlReplacement property

    /*
    Property Visible

    For more information, see help context 3457 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Method Reflow

    For more information, see help context 2398 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reflow();

    /*
    Method Select

    For more information, see help context 3216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Select();

    /*
    Method SetControlItemProperty

    For more information, see help context 2401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetControlItemProperty(IDispatch* Control, const QString& PropertyName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MobileItem : public QAxObject
{
public:
    explicit MobileItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MobileItem(_MobileItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 3323 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 3319 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 3324 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property BillingInformation

    For more information, see help context 3325 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 3326 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 3327 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 3320 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 3328 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property ConversationIndex

    For more information, see help context 3329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 3330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property Count

    For more information, see help context 3413 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property CreationTime

    For more information, see help context 3331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property EntryID

    For more information, see help context 3332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 3333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 3334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 3373 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 3335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property ItemProperties

    For more information, see help context 3415 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 3336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property MAPIOBJECT

    For more information, see help context 3337 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MessageClass

    For more information, see help context 3338 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 3339 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property MobileFormat

    For more information, see help context 3374 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMobileFormat MobileFormat() const; //Returns the value of MobileFormat

    /*
    Property NoAging

    For more information, see help context 3340 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 3341 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 3342 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 3322 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 3458 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property ReceivedByEntryID

    For more information, see help context 3459 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByEntryID() const; //Returns the value of ReceivedByEntryID

    /*
    Property ReceivedByName

    For more information, see help context 3460 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReceivedByName() const; //Returns the value of ReceivedByName

    /*
    Property ReceivedTime

    For more information, see help context 3416 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property Recipients

    For more information, see help context 3379 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReplyRecipientNames

    For more information, see help context 3411 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReplyRecipientNames() const; //Returns the value of ReplyRecipientNames

    /*
    Property ReplyRecipients

    For more information, see help context 3412 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* ReplyRecipients() const; //Returns the value of ReplyRecipients

    /*
    Property SMILBody

    For more information, see help context 3375 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SMILBody() const; //Returns the value of SMILBody
    inline void SetSMILBody(const QString& value); //Sets the value of the SMILBody property

    /*
    Property Saved

    For more information, see help context 3343 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SendUsingAccount

    For more information, see help context 3417 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property SenderEmailAddress

    For more information, see help context 3461 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 3462 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 3463 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 3344 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Sent

    For more information, see help context 3418 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Sent() const; //Returns the value of Sent

    /*
    Property SentOn

    For more information, see help context 3434 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 3321 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 3345 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 3346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Submitted

    For more information, see help context 3414 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Submitted() const; //Returns the value of Submitted

    /*
    Property To

    For more information, see help context 3409 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString To() const; //Returns the value of To
    inline void SetTo(const QString& value); //Sets the value of the To property

    /*
    Property UnRead

    For more information, see help context 3347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 3348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 3349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 3350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 3351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 3352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 3352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 3410 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* Forward();

    /*
    Method Move

    For more information, see help context 3353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 3354 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 3376 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 3377 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MobileItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 3355 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 3356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 3356 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 3378 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send(bool ForceSend);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TaskItem : public QAxObject
{
public:
    explicit TaskItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TaskItem(_TaskItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1686 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property ActualWork

    For more information, see help context 1720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int ActualWork() const; //Returns the value of ActualWork
    inline void SetActualWork(int value); //Sets the value of the ActualWork property

    /*
    Property Application

    For more information, see help context 1682 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1687 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1688 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1689 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property CardData

    For more information, see help context 1721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CardData() const; //Returns the value of CardData
    inline void SetCardData(const QString& value); //Sets the value of the CardData property

    /*
    Property Categories

    For more information, see help context 1690 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1683 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1691 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Complete

    For more information, see help context 1722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Complete() const; //Returns the value of Complete
    inline void SetComplete(bool value); //Sets the value of the Complete property

    /*
    Property Conflicts

    For more information, see help context 1766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ContactNames

    For more information, see help context 1724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ContactNames() const; //Returns the value of ContactNames
    inline void SetContactNames(const QString& value); //Sets the value of the ContactNames property

    /*
    Property Contacts

    For more information, see help context 1723 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Contacts() const; //Returns the value of Contacts
    inline void SetContacts(const QString& value); //Sets the value of the Contacts property

    /*
    Property ConversationID

    For more information, see help context 3474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1692 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1693 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1694 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DateCompleted

    For more information, see help context 1725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DateCompleted() const; //Returns the value of DateCompleted
    inline void SetDateCompleted(const QDateTime& value); //Sets the value of the DateCompleted property

    /*
    Property DelegationState

    For more information, see help context 1726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskDelegationState DelegationState() const; //Returns the value of DelegationState

    /*
    Property Delegator

    For more information, see help context 1727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Delegator() const; //Returns the value of Delegator

    /*
    Property DownloadState

    For more information, see help context 1759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property DueDate

    For more information, see help context 1728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DueDate() const; //Returns the value of DueDate
    inline void SetDueDate(const QDateTime& value); //Sets the value of the DueDate property

    /*
    Property EntryID

    For more information, see help context 1695 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1696 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1697 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1698 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsRecurring

    For more information, see help context 1729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsRecurring() const; //Returns the value of IsRecurring

    /*
    Property ItemProperties

    For more information, see help context 1761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1699 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1700 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1701 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1702 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1703 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property Ordinal

    For more information, see help context 1730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Ordinal() const; //Returns the value of Ordinal
    inline void SetOrdinal(int value); //Sets the value of the Ordinal property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1704 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1705 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Owner

    For more information, see help context 1731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Owner() const; //Returns the value of Owner
    inline void SetOwner(const QString& value); //Sets the value of the Owner property

    /*
    Property Ownership

    For more information, see help context 1732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskOwnership Ownership() const; //Returns the value of Ownership

    /*
    Property Parent

    For more information, see help context 1685 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PercentComplete

    For more information, see help context 1733 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int PercentComplete() const; //Returns the value of PercentComplete
    inline void SetPercentComplete(int value); //Sets the value of the PercentComplete property

    /*
    Property PropertyAccessor

    For more information, see help context 1767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Recipients

    For more information, see help context 1734 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1736 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1737 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1738 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1739 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1735 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property ResponseState

    For more information, see help context 1740 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskResponse ResponseState() const; //Returns the value of ResponseState

    /*
    Property Role

    For more information, see help context 1741 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Role() const; //Returns the value of Role
    inline void SetRole(const QString& value); //Sets the value of the Role property

    /*
    Property Saved

    For more information, see help context 1706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SchedulePlusPriority

    For more information, see help context 1742 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SchedulePlusPriority() const; //Returns the value of SchedulePlusPriority
    inline void SetSchedulePlusPriority(const QString& value); //Sets the value of the SchedulePlusPriority property

    /*
    Property SendUsingAccount

    For more information, see help context 1768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Account* SendUsingAccount() const; //Returns the value of SendUsingAccount
    inline void SetSendUsingAccount(Outlook::Account* value); //Sets the value of the SendUsingAccount property

    /*
    Property Sensitivity

    For more information, see help context 1707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1684 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property StartDate

    For more information, see help context 1743 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StartDate() const; //Returns the value of StartDate
    inline void SetStartDate(const QDateTime& value); //Sets the value of the StartDate property

    /*
    Property Status

    For more information, see help context 1744 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTaskStatus Status() const; //Returns the value of Status
    inline void SetStatus(Outlook::OlTaskStatus value); //Sets the value of the Status property

    /*
    Property StatusOnCompletionRecipients

    For more information, see help context 1745 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StatusOnCompletionRecipients() const; //Returns the value of StatusOnCompletionRecipients
    inline void SetStatusOnCompletionRecipients(const QString& value); //Sets the value of the StatusOnCompletionRecipients property

    /*
    Property StatusUpdateRecipients

    For more information, see help context 1746 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StatusUpdateRecipients() const; //Returns the value of StatusUpdateRecipients
    inline void SetStatusUpdateRecipients(const QString& value); //Sets the value of the StatusUpdateRecipients property

    /*
    Property Subject

    For more information, see help context 1709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TeamTask

    For more information, see help context 1747 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool TeamTask() const; //Returns the value of TeamTask
    inline void SetTeamTask(bool value); //Sets the value of the TeamTask property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3046 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property TotalWork

    For more information, see help context 1748 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TotalWork() const; //Returns the value of TotalWork
    inline void SetTotalWork(int value); //Sets the value of the TotalWork property

    /*
    Property UnRead

    For more information, see help context 1710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Assign

    For more information, see help context 1749 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* Assign();

    /*
    Method CancelResponseState

    For more information, see help context 1750 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void CancelResponseState();

    /*
    Method ClearRecurrencePattern

    For more information, see help context 1751 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearRecurrencePattern();

    /*
    Method Close

    For more information, see help context 1712 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3408 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetRecurrencePattern

    For more information, see help context 1752 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::RecurrencePattern* GetRecurrencePattern();

    /*
    Method MarkComplete

    For more information, see help context 1753 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkComplete();

    /*
    Method Move

    For more information, see help context 1716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Respond

    For more information, see help context 1754 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* Respond(Outlook::OlTaskResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog);

    /*
    Method Save

    For more information, see help context 1718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method Send

    For more information, see help context 1755 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Send();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method SkipRecurrence

    For more information, see help context 1756 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SkipRecurrence();

    /*
    Method StatusReport

    For more information, see help context 1757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* StatusReport();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Application : public QAxObject
{
public:
    explicit Application(QObject *parent = nullptr);
    Application(_Application *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AnswerWizard

    For more information, see help context 724 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::AnswerWizard* AnswerWizard() const; //Returns the value of AnswerWizard

    /*
    Property Assistance

    For more information, see help context 3029 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::IAssistance* Assistance() const; //Returns the value of Assistance

    /*
    Property Assistant

    For more information, see help context 709 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::Assistant* Assistant() const; //Returns the value of Assistant

    /*
    Property COMAddIns

    For more information, see help context 719 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::COMAddIns* COMAddIns() const; //Returns the value of COMAddIns

    /*
    Property Class

    For more information, see help context 706 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DataPrivacyOptions

    For more information, see help context 3678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::DataPrivacyOptions* DataPrivacyOptions() const; //Returns the value of DataPrivacyOptions

    /*
    Property DefaultProfileName

    For more information, see help context 732 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DefaultProfileName() const; //Returns the value of DefaultProfileName

    /*
    Property Explorers

    For more information, see help context 720 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorers* Explorers() const; //Returns the value of Explorers

    /*
    Property FeatureInstall

    For more information, see help context 725 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::MsoFeatureInstall FeatureInstall() const; //Returns the value of FeatureInstall
    inline void SetFeatureInstall(Office::MsoFeatureInstall value); //Sets the value of the FeatureInstall property

    /*
    Property Inspectors

    For more information, see help context 721 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspectors* Inspectors() const; //Returns the value of Inspectors

    /*
    Property IsTrusted

    For more information, see help context 733 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsTrusted() const; //Returns the value of IsTrusted

    /*
    Property LanguageSettings

    For more information, see help context 722 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::LanguageSettings* LanguageSettings() const; //Returns the value of LanguageSettings

    /*
    Property MsoDebugOptions

    For more information, see help context 3641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::MsoDebugOptions* MsoDebugOptions() const; //Returns the value of MsoDebugOptions

    /*
    Property Name

    For more information, see help context 710 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 708 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PickerDialog

    For more information, see help context 3475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::PickerDialog* PickerDialog() const; //Returns the value of PickerDialog

    /*
    Property ProductCode

    For more information, see help context 723 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ProductCode() const; //Returns the value of ProductCode

    /*
    Property Reminders

    For more information, see help context 731 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Reminders* Reminders() const; //Returns the value of Reminders

    /*
    Property Session

    For more information, see help context 707 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property TimeZones

    For more information, see help context 3270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TimeZones* TimeZones() const; //Returns the value of TimeZones

    /*
    Property Version

    For more information, see help context 711 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Version() const; //Returns the value of Version

    /*
    Method ActiveExplorer

    For more information, see help context 712 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* ActiveExplorer();

    /*
    Method ActiveInspector

    For more information, see help context 713 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* ActiveInspector();

    /*
    Method ActiveWindow

    For more information, see help context 726 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* ActiveWindow();

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders);

    /*
    Method AdvancedSearch

    For more information, see help context 728 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Search* AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders, const QVariant& Tag);

    /*
    Method CopyFile

    For more information, see help context 727 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CopyFile(const QString& FilePath, const QString& DestFolderPath);

    /*
    Method CreateItem

    For more information, see help context 714 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItem(Outlook::OlItemType ItemType);

    /*
    Method CreateItemFromTemplate

    For more information, see help context 715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItemFromTemplate(const QString& TemplatePath);

    /*
    Method CreateItemFromTemplate

    For more information, see help context 715 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateItemFromTemplate(const QString& TemplatePath, const QVariant& InFolder);

    /*
    Method CreateObject

    For more information, see help context 716 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* CreateObject(const QString& ObjectName);

    /*
    Method GetNamespace

    For more information, see help context 717 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* GetNamespace(const QString& Type);

    /*
    Method GetNewNickNames

    For more information, see help context 730 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GetNewNickNames(QVariant& pvar);

    /*
    Method GetObjectReference

    For more information, see help context 734 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetObjectReference(IDispatch* Item, Outlook::OlReferenceType ReferenceType);

    /*
    Method IsSearchSynchronous

    For more information, see help context 729 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSearchSynchronous(const QString& LookInFolders);

    /*
    Method Quit

    For more information, see help context 718 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Quit();

    /*
    Method RefreshFormRegionDefinition

    For more information, see help context 3521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshFormRegionDefinition(const QString& RegionName);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT DistListItem : public QAxObject
{
public:
    explicit DistListItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    DistListItem(_DistListItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1114 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1110 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1115 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1164 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property CheckSum

    For more information, see help context 1150 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int CheckSum() const; //Returns the value of CheckSum

    /*
    Property Class

    For more information, see help context 1111 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1165 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DLName

    For more information, see help context 1148 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DLName() const; //Returns the value of DLName
    inline void SetDLName(const QString& value); //Sets the value of the DLName property

    /*
    Property DownloadState

    For more information, see help context 1157 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1123 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1124 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1125 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1126 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1163 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3037 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1161 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1127 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1153 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1128 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1162 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MemberCount

    For more information, see help context 1149 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MemberCount() const; //Returns the value of MemberCount

    /*
    Property Members

    For more information, see help context 1151 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant Members() const; //Returns the value of Members
    inline void SetMembers(const QVariant& value); //Sets the value of the Members property

    /*
    Property MessageClass

    For more information, see help context 1129 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1130 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1131 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OneOffMembers

    For more information, see help context 1152 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant OneOffMembers() const; //Returns the value of OneOffMembers
    inline void SetOneOffMembers(const QVariant& value); //Sets the value of the OneOffMembers property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1132 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1113 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1166 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1173 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1174 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1175 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1176 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1177 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 1134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1112 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TaskCompletedDate

    For more information, see help context 1171 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1169 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1170 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1168 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3034 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method AddMember

    For more information, see help context 1159 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddMember(Outlook::Recipient* Recipient);

    /*
    Method AddMembers

    For more information, see help context 1154 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddMembers(Outlook::Recipients* Recipients);

    /*
    Method ClearTaskFlag

    For more information, see help context 3036 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1141 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetMember

    For more information, see help context 1156 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetMember(int Index);

    /*
    Method MarkAsTask

    For more information, see help context 3035 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method RemoveMember

    For more information, see help context 1160 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveMember(Outlook::Recipient* Recipient);

    /*
    Method RemoveMembers

    For more information, see help context 1155 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveMembers(Outlook::Recipients* Recipients);

    /*
    Method Save

    For more information, see help context 1146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1158 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT DocumentItem : public QAxObject
{
public:
    explicit DocumentItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    DocumentItem(_DocumentItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1183 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1179 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1184 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1223 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1185 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1186 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1187 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1180 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1188 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1224 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationIndex

    For more information, see help context 1189 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1190 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1191 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1218 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1192 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1193 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1194 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1195 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1222 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1220 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1196 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1217 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1197 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1221 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1198 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1199 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1200 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1201 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1202 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1182 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1225 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Saved

    For more information, see help context 1203 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1204 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1181 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1205 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1206 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1207 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1208 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1209 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1210 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1211 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1212 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Move

    For more information, see help context 1213 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1214 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1215 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1216 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1219 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Explorers : public QAxObject
{
public:
    explicit Explorers(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Explorers(_Explorers *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 116 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 117 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 120 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 119 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 118 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* Add(const QVariant& Folder);

    /*
    Method Add

    For more information, see help context 122 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* Add(const QVariant& Folder, Outlook::OlFolderDisplayMode DisplayMode);

    /*
    Method Item

    For more information, see help context 121 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Explorer* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Inspectors : public QAxObject
{
public:
    explicit Inspectors(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Inspectors(_Inspectors *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 133 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 134 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 136 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 135 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* Add(IDispatch* Item);

    /*
    Method Item

    For more information, see help context 138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Inspector* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Folders : public QAxObject
{
public:
    explicit Folders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Folders(_Folders *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 39 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 40 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 43 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 42 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 45 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 41 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 46 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 46 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Add(const QString& Name, const QVariant& Type);

    /*
    Method GetFirst

    For more information, see help context 47 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFirst();

    /*
    Method GetLast

    For more information, see help context 48 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetLast();

    /*
    Method GetNext

    For more information, see help context 49 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 50 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetPrevious();

    /*
    Method Item

    For more information, see help context 44 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 51 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Items : public QAxObject
{
public:
    explicit Items(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Items(_Items *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 53 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 54 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 57 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property IncludeRecurrences

    For more information, see help context 60 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IncludeRecurrences() const; //Returns the value of IncludeRecurrences
    inline void SetIncludeRecurrences(bool value); //Sets the value of the IncludeRecurrences property

    /*
    Property Parent

    For more information, see help context 56 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 59 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 55 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 61 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add();

    /*
    Method Add

    For more information, see help context 61 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Add(const QVariant& Type);

    /*
    Method Find

    For more information, see help context 62 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Find(const QString& Filter);

    /*
    Method FindNext

    For more information, see help context 63 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* FindNext();

    /*
    Method GetFirst

    For more information, see help context 64 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetFirst();

    /*
    Method GetLast

    For more information, see help context 65 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetLast();

    /*
    Method GetNext

    For more information, see help context 66 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 67 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetPrevious();

    /*
    Method Item

    For more information, see help context 58 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 68 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(int Index);

    /*
    Method ResetColumns

    For more information, see help context 69 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetColumns();

    /*
    Method Restrict

    For more information, see help context 70 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Items* Restrict(const QString& Filter);

    /*
    Method SetColumns

    For more information, see help context 71 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetColumns(const QString& Columns);

    /*
    Method Sort

    For more information, see help context 72 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property);

    /*
    Method Sort

    For more information, see help context 72 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT JournalItem : public QAxObject
{
public:
    explicit JournalItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    JournalItem(_JournalItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1231 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1227 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1233 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1234 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1228 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1287 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ContactNames

    For more information, see help context 1265 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ContactNames() const; //Returns the value of ContactNames
    inline void SetContactNames(const QString& value); //Sets the value of the ContactNames property

    /*
    Property ConversationID

    For more information, see help context 3471 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1238 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1239 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DocPosted

    For more information, see help context 1266 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocPosted() const; //Returns the value of DocPosted
    inline void SetDocPosted(bool value); //Sets the value of the DocPosted property

    /*
    Property DocPrinted

    For more information, see help context 1267 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocPrinted() const; //Returns the value of DocPrinted
    inline void SetDocPrinted(bool value); //Sets the value of the DocPrinted property

    /*
    Property DocRouted

    For more information, see help context 1268 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocRouted() const; //Returns the value of DocRouted
    inline void SetDocRouted(bool value); //Sets the value of the DocRouted property

    /*
    Property DocSaved

    For more information, see help context 1269 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool DocSaved() const; //Returns the value of DocSaved
    inline void SetDocSaved(bool value); //Sets the value of the DocSaved property

    /*
    Property DownloadState

    For more information, see help context 1281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property Duration

    For more information, see help context 1270 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Duration() const; //Returns the value of Duration
    inline void SetDuration(int value); //Sets the value of the Duration property

    /*
    Property End

    For more information, see help context 1271 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime End() const; //Returns the value of End
    inline void SetEnd(const QDateTime& value); //Sets the value of the End property

    /*
    Property EntryID

    For more information, see help context 1240 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1241 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1247 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1248 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1249 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1250 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1230 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Recipients

    For more information, see help context 1273 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipients* Recipients() const; //Returns the value of Recipients

    /*
    Property Saved

    For more information, see help context 1251 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1252 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1229 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1253 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Start

    For more information, see help context 1274 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime Start() const; //Returns the value of Start
    inline void SetStart(const QDateTime& value); //Sets the value of the Start property

    /*
    Property Subject

    For more information, see help context 1254 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property Type

    For more information, see help context 1272 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type
    inline void SetType(const QString& value); //Sets the value of the Type property

    /*
    Property UnRead

    For more information, see help context 1255 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1256 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1257 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1258 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1259 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1260 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1275 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3405 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1261 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1262 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1276 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method ReplyAll

    For more information, see help context 1277 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* ReplyAll();

    /*
    Method Save

    For more information, see help context 1263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1264 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

    /*
    Method StartTimer

    For more information, see help context 1278 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StartTimer();

    /*
    Method StopTimer

    For more information, see help context 1279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopTimer();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NameSpace : public QAxObject
{
public:
    explicit NameSpace(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NameSpace(_NameSpace *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Accounts

    For more information, see help context 778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Accounts* Accounts() const; //Returns the value of Accounts

    /*
    Property AddressLists

    For more information, see help context 759 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressLists* AddressLists() const; //Returns the value of AddressLists

    /*
    Property Application

    For more information, see help context 752 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoDiscoverConnectionMode

    For more information, see help context 3303 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoDiscoverConnectionMode AutoDiscoverConnectionMode() const; //Returns the value of AutoDiscoverConnectionMode

    /*
    Property AutoDiscoverXml

    For more information, see help context 3263 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AutoDiscoverXml() const; //Returns the value of AutoDiscoverXml

    /*
    Property Categories

    For more information, see help context 787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Categories* Categories() const; //Returns the value of Categories

    /*
    Property Class

    For more information, see help context 753 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentProfileName

    For more information, see help context 779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString CurrentProfileName() const; //Returns the value of CurrentProfileName

    /*
    Property CurrentUser

    For more information, see help context 756 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CurrentUser() const; //Returns the value of CurrentUser

    /*
    Property DefaultStore

    For more information, see help context 783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* DefaultStore() const; //Returns the value of DefaultStore

    /*
    Property ExchangeConnectionMode

    For more information, see help context 776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlExchangeConnectionMode ExchangeConnectionMode() const; //Returns the value of ExchangeConnectionMode

    /*
    Property ExchangeMailboxServerName

    For more information, see help context 791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerName() const; //Returns the value of ExchangeMailboxServerName

    /*
    Property ExchangeMailboxServerVersion

    For more information, see help context 792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ExchangeMailboxServerVersion() const; //Returns the value of ExchangeMailboxServerVersion

    /*
    Property Folders

    For more information, see help context 757 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* Folders() const; //Returns the value of Folders

    /*
    Property MAPIOBJECT

    For more information, see help context 775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Offline

    For more information, see help context 773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Offline() const; //Returns the value of Offline

    /*
    Property Parent

    For more information, see help context 755 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 754 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Stores

    For more information, see help context 780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Stores* Stores() const; //Returns the value of Stores

    /*
    Property SyncObjects

    For more information, see help context 770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SyncObjects* SyncObjects() const; //Returns the value of SyncObjects

    /*
    Property Type

    For more information, see help context 758 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Type() const; //Returns the value of Type

    /*
    Method AddStore

    For more information, see help context 771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddStore(const QVariant& Store);

    /*
    Method AddStoreEx

    For more information, see help context 777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddStoreEx(const QVariant& Store, Outlook::OlStoreType Type);

    /*
    Method CompareEntryIDs

    For more information, see help context 794 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool CompareEntryIDs(const QString& FirstEntryID, const QString& SecondEntryID);

    /*
    Method CreateContactCard

    For more information, see help context 3536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Office::ContactCard* CreateContactCard(Outlook::AddressEntry* AddressEntry);

    /*
    Method CreateRecipient

    For more information, see help context 760 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* CreateRecipient(const QString& RecipientName);

    /*
    Method CreateSharingItem

    For more information, see help context 790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* CreateSharingItem(const QVariant& Context);

    /*
    Method CreateSharingItem

    For more information, see help context 790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SharingItem* CreateSharingItem(const QVariant& Context, const QVariant& Provider);

    /*
    Method Dial

    For more information, see help context 774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dial();

    /*
    Method Dial

    For more information, see help context 774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dial(const QVariant& ContactItem);

    /*
    Method GetAddressEntryFromID

    For more information, see help context 784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressEntry* GetAddressEntryFromID(const QString& ID);

    /*
    Method GetDefaultFolder

    For more information, see help context 761 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetDefaultFolder(Outlook::OlDefaultFolders FolderType);

    /*
    Method GetFolderFromID

    For more information, see help context 762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFolderFromID(const QString& EntryIDFolder);

    /*
    Method GetFolderFromID

    For more information, see help context 762 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetFolderFromID(const QString& EntryIDFolder, const QVariant& EntryIDStore);

    /*
    Method GetGlobalAddressList

    For more information, see help context 785 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AddressList* GetGlobalAddressList();

    /*
    Method GetItemFromID

    For more information, see help context 763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetItemFromID(const QString& EntryIDItem);

    /*
    Method GetItemFromID

    For more information, see help context 763 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetItemFromID(const QString& EntryIDItem, const QVariant& EntryIDStore);

    /*
    Method GetRecipientFromID

    For more information, see help context 764 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Recipient* GetRecipientFromID(const QString& EntryID);

    /*
    Method GetSelectNamesDialog

    For more information, see help context 781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SelectNamesDialog* GetSelectNamesDialog();

    /*
    Method GetSharedDefaultFolder

    For more information, see help context 765 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetSharedDefaultFolder(Outlook::Recipient* Recipient, Outlook::OlDefaultFolders FolderType);

    /*
    Method GetStoreFromID

    For more information, see help context 786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* GetStoreFromID(const QString& ID);

    /*
    Method Logoff

    For more information, see help context 766 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logoff();

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon();

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog);

    /*
    Method Logon

    For more information, see help context 767 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog, const QVariant& NewSession);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments);

    /*
    Method OpenSharedFolder

    For more information, see help context 788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments, const QVariant& UseTTL);

    /*
    Method OpenSharedItem

    For more information, see help context 789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* OpenSharedItem(const QString& Path);

    /*
    Method PickFolder

    For more information, see help context 768 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* PickFolder();

    /*
    Method RefreshRemoteHeaders

    For more information, see help context 769 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RefreshRemoteHeaders();

    /*
    Method RemoveStore

    For more information, see help context 772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void RemoveStore(Outlook::MAPIFolder* Folder);

    /*
    Method SendAndReceive

    For more information, see help context 782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SendAndReceive(bool showProgressDialog);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NoteItem : public QAxObject
{
public:
    explicit NoteItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NoteItem(_NoteItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 1473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoResolvedWinner

    For more information, see help context 1505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property Body

    For more information, see help context 1477 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1478 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1474 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Color

    For more information, see help context 1479 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNoteColor Color() const; //Returns the value of Color
    inline void SetColor(Outlook::OlNoteColor value); //Sets the value of the Color property

    /*
    Property Conflicts

    For more information, see help context 1506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property CreationTime

    For more information, see help context 1480 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1481 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property GetInspector

    For more information, see help context 1482 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Height

    For more information, see help context 1483 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Height() const; //Returns the value of Height
    inline void SetHeight(int value); //Sets the value of the Height property

    /*
    Property IsConflict

    For more information, see help context 1504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1484 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Left

    For more information, see help context 1485 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Left() const; //Returns the value of Left
    inline void SetLeft(int value); //Sets the value of the Left property

    /*
    Property Links

    For more information, see help context 1500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MarkForDownload

    For more information, see help context 1503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1486 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Parent

    For more information, see help context 1476 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Saved

    For more information, see help context 1487 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Session

    For more information, see help context 1475 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1488 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1489 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject

    /*
    Property Top

    For more information, see help context 1490 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Top() const; //Returns the value of Top
    inline void SetTop(int value); //Sets the value of the Top property

    /*
    Property Width

    For more information, see help context 1491 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Method Close

    For more information, see help context 1492 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1493 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Move

    For more information, see help context 1496 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1497 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OutlookBarGroups : public QAxObject
{
public:
    explicit OutlookBarGroups(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    OutlookBarGroups(_OutlookBarGroups *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 346 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 347 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 350 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 349 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 348 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Add(const QString& Name);

    /*
    Method Add

    For more information, see help context 352 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Add(const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 351 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 353 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OutlookBarPane : public QAxObject
{
public:
    explicit OutlookBarPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    OutlookBarPane(_OutlookBarPane *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 359 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Contents

    For more information, see help context 363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarStorage* Contents() const; //Returns the value of Contents

    /*
    Property CurrentGroup

    For more information, see help context 364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarGroup* CurrentGroup() const; //Returns the value of CurrentGroup
    inline void SetCurrentGroup(Outlook::OutlookBarGroup* value); //Sets the value of the CurrentGroup property

    /*
    Property Name

    For more information, see help context 365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT OutlookBarShortcuts : public QAxObject
{
public:
    explicit OutlookBarShortcuts(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    OutlookBarShortcuts(_OutlookBarShortcuts *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 329 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 330 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 333 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 332 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 331 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Add(const QVariant& Target, const QString& Name);

    /*
    Method Add

    For more information, see help context 335 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Add(const QVariant& Target, const QString& Name, const QVariant& Index);

    /*
    Method Item

    For more information, see help context 334 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OutlookBarShortcut* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 336 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT PostItem : public QAxObject
{
public:
    explicit PostItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    PostItem(_PostItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1513 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property BodyFormat

    For more information, see help context 1558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlBodyFormat BodyFormat() const; //Returns the value of BodyFormat
    inline void SetBodyFormat(Outlook::OlBodyFormat value); //Sets the value of the BodyFormat property

    /*
    Property Categories

    For more information, see help context 1517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3473 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1519 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property ExpiryTime

    For more information, see help context 1547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ExpiryTime() const; //Returns the value of ExpiryTime
    inline void SetExpiryTime(const QDateTime& value); //Sets the value of the ExpiryTime property

    /*
    Property FormDescription

    For more information, see help context 1523 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HTMLBody

    For more information, see help context 1548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString HTMLBody() const; //Returns the value of HTMLBody
    inline void SetHTMLBody(const QString& value); //Sets the value of the HTMLBody property

    /*
    Property Importance

    For more information, see help context 1525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property InternetCodepage

    For more information, see help context 1561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int InternetCodepage() const; //Returns the value of InternetCodepage
    inline void SetInternetCodepage(int value); //Sets the value of the InternetCodepage property

    /*
    Property IsConflict

    For more information, see help context 1564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property IsMarkedAsTask

    For more information, see help context 3045 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsMarkedAsTask() const; //Returns the value of IsMarkedAsTask

    /*
    Property ItemProperties

    For more information, see help context 1557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1530 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property ReceivedTime

    For more information, see help context 1549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReceivedTime() const; //Returns the value of ReceivedTime

    /*
    Property ReminderOverrideDefault

    For more information, see help context 1576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderOverrideDefault() const; //Returns the value of ReminderOverrideDefault
    inline void SetReminderOverrideDefault(bool value); //Sets the value of the ReminderOverrideDefault property

    /*
    Property ReminderPlaySound

    For more information, see help context 1577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderPlaySound() const; //Returns the value of ReminderPlaySound
    inline void SetReminderPlaySound(bool value); //Sets the value of the ReminderPlaySound property

    /*
    Property ReminderSet

    For more information, see help context 1578 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ReminderSet() const; //Returns the value of ReminderSet
    inline void SetReminderSet(bool value); //Sets the value of the ReminderSet property

    /*
    Property ReminderSoundFile

    For more information, see help context 1579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ReminderSoundFile() const; //Returns the value of ReminderSoundFile
    inline void SetReminderSoundFile(const QString& value); //Sets the value of the ReminderSoundFile property

    /*
    Property ReminderTime

    For more information, see help context 1580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ReminderTime() const; //Returns the value of ReminderTime
    inline void SetReminderTime(const QDateTime& value); //Sets the value of the ReminderTime property

    /*
    Property Saved

    For more information, see help context 1533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property SenderEmailAddress

    For more information, see help context 1567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailAddress() const; //Returns the value of SenderEmailAddress

    /*
    Property SenderEmailType

    For more information, see help context 1568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderEmailType() const; //Returns the value of SenderEmailType

    /*
    Property SenderName

    For more information, see help context 1550 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString SenderName() const; //Returns the value of SenderName

    /*
    Property Sensitivity

    For more information, see help context 1534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property SentOn

    For more information, see help context 1551 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SentOn() const; //Returns the value of SentOn

    /*
    Property Session

    For more information, see help context 1511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TaskCompletedDate

    For more information, see help context 1574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskCompletedDate() const; //Returns the value of TaskCompletedDate
    inline void SetTaskCompletedDate(const QDateTime& value); //Sets the value of the TaskCompletedDate property

    /*
    Property TaskDueDate

    For more information, see help context 1572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskDueDate() const; //Returns the value of TaskDueDate
    inline void SetTaskDueDate(const QDateTime& value); //Sets the value of the TaskDueDate property

    /*
    Property TaskStartDate

    For more information, see help context 1573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime TaskStartDate() const; //Returns the value of TaskStartDate
    inline void SetTaskStartDate(const QDateTime& value); //Sets the value of the TaskStartDate property

    /*
    Property TaskSubject

    For more information, see help context 1571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString TaskSubject() const; //Returns the value of TaskSubject
    inline void SetTaskSubject(const QString& value); //Sets the value of the TaskSubject property

    /*
    Property ToDoTaskOrdinal

    For more information, see help context 3042 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime ToDoTaskOrdinal() const; //Returns the value of ToDoTaskOrdinal
    inline void SetToDoTaskOrdinal(const QDateTime& value); //Sets the value of the ToDoTaskOrdinal property

    /*
    Property UnRead

    For more information, see help context 1537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method ClearConversationIndex

    For more information, see help context 1552 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearConversationIndex();

    /*
    Method ClearTaskFlag

    For more information, see help context 3236 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearTaskFlag();

    /*
    Method Close

    For more information, see help context 1539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1540 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method Forward

    For more information, see help context 1553 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Forward();

    /*
    Method GetConversation

    For more information, see help context 3407 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method MarkAsTask

    For more information, see help context 3043 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsTask(Outlook::OlMarkInterval MarkInterval);

    /*
    Method Move

    For more information, see help context 1543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method Post

    For more information, see help context 1554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Post();

    /*
    Method PrintOut

    For more information, see help context 1544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Reply

    For more information, see help context 1555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MailItem* Reply();

    /*
    Method Save

    For more information, see help context 1545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method SetACLs

    For more information, see help context 1563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool SetACLs();

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT RemoteItem : public QAxObject
{
public:
    explicit RemoteItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    RemoteItem(_RemoteItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1630 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1631 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3495 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property HasAttachment

    For more information, see help context 1620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HasAttachment() const; //Returns the value of HasAttachment

    /*
    Property Importance

    For more information, see help context 1598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1629 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1628 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RemoteMessageClass

    For more information, see help context 1621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RemoteMessageClass() const; //Returns the value of RemoteMessageClass

    /*
    Property Saved

    For more information, see help context 1606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property TransferSize

    For more information, see help context 1622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TransferSize() const; //Returns the value of TransferSize

    /*
    Property TransferTime

    For more information, see help context 1623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int TransferTime() const; //Returns the value of TransferTime

    /*
    Property UnRead

    For more information, see help context 1610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3494 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ReportItem : public QAxObject
{
public:
    explicit ReportItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ReportItem(_ReportItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1678 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1641 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1679 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3493 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1673 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1677 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1675 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1676 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1680 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RetentionExpirationDate

    For more information, see help context 3563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime RetentionExpirationDate() const; //Returns the value of RetentionExpirationDate

    /*
    Property RetentionPolicyName

    For more information, see help context 3562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString RetentionPolicyName() const; //Returns the value of RetentionPolicyName

    /*
    Property Saved

    For more information, see help context 1658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetConversation

    For more information, see help context 3492 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1674 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TaskRequestAcceptItem : public QAxObject
{
public:
    explicit TaskRequestAcceptItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TaskRequestAcceptItem(_TaskRequestAcceptItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1774 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1770 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1775 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1776 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1777 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1778 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1771 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1779 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1816 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1780 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1781 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1782 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1810 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1783 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1784 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1785 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1809 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1813 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1793 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1773 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1794 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1795 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1772 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1796 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1797 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1798 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1799 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1800 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1801 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1802 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1803 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1808 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1804 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1805 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1806 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1807 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1811 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TaskRequestDeclineItem : public QAxObject
{
public:
    explicit TaskRequestDeclineItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TaskRequestDeclineItem(_TaskRequestDeclineItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1826 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1820 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1831 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1861 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1836 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1837 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1841 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1866 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3538 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1821 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1846 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1851 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TaskRequestItem : public QAxObject
{
public:
    explicit TaskRequestItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TaskRequestItem(_TaskRequestItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1913 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1876 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1914 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1908 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1881 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1882 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1883 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1884 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1912 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1910 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1885 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1907 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1886 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1911 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1887 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1888 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1889 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1890 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1891 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1871 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1915 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1892 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1893 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1894 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1895 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1896 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1897 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1898 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1899 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1900 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1901 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1906 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1902 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1903 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1904 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1905 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1909 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TaskRequestUpdateItem : public QAxObject
{
public:
    explicit TaskRequestUpdateItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TaskRequestUpdateItem(_TaskRequestUpdateItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Actions

    For more information, see help context 1921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Actions* Actions() const; //Returns the value of Actions

    /*
    Property Application

    For more information, see help context 1917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 1922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property AutoResolvedWinner

    For more information, see help context 1962 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutoResolvedWinner() const; //Returns the value of AutoResolvedWinner

    /*
    Property BillingInformation

    For more information, see help context 1923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString BillingInformation() const; //Returns the value of BillingInformation
    inline void SetBillingInformation(const QString& value); //Sets the value of the BillingInformation property

    /*
    Property Body

    For more information, see help context 1924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Categories

    For more information, see help context 1925 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Categories() const; //Returns the value of Categories
    inline void SetCategories(const QString& value); //Sets the value of the Categories property

    /*
    Property Class

    For more information, see help context 1918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Companies

    For more information, see help context 1926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Companies() const; //Returns the value of Companies
    inline void SetCompanies(const QString& value); //Sets the value of the Companies property

    /*
    Property Conflicts

    For more information, see help context 1963 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Conflicts* Conflicts() const; //Returns the value of Conflicts

    /*
    Property ConversationID

    For more information, see help context 3506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationIndex

    For more information, see help context 1927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationIndex() const; //Returns the value of ConversationIndex

    /*
    Property ConversationTopic

    For more information, see help context 1928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property CreationTime

    For more information, see help context 1929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property DownloadState

    For more information, see help context 1957 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDownloadState DownloadState() const; //Returns the value of DownloadState

    /*
    Property EntryID

    For more information, see help context 1930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FormDescription

    For more information, see help context 1931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::FormDescription* FormDescription() const; //Returns the value of FormDescription

    /*
    Property GetInspector

    For more information, see help context 1932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Inspector* GetInspector() const; //Returns the value of GetInspector

    /*
    Property Importance

    For more information, see help context 1933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlImportance Importance() const; //Returns the value of Importance
    inline void SetImportance(Outlook::OlImportance value); //Sets the value of the Importance property

    /*
    Property IsConflict

    For more information, see help context 1961 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsConflict() const; //Returns the value of IsConflict

    /*
    Property ItemProperties

    For more information, see help context 1959 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ItemProperties* ItemProperties() const; //Returns the value of ItemProperties

    /*
    Property LastModificationTime

    For more information, see help context 1934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Links

    For more information, see help context 1956 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Links* Links() const; //Returns the value of Links

    /*
    Property MAPIOBJECT

    For more information, see help context 1935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property MarkForDownload

    For more information, see help context 1960 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlRemoteStatus MarkForDownload() const; //Returns the value of MarkForDownload
    inline void SetMarkForDownload(Outlook::OlRemoteStatus value); //Sets the value of the MarkForDownload property

    /*
    Property MessageClass

    For more information, see help context 1936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString MessageClass() const; //Returns the value of MessageClass
    inline void SetMessageClass(const QString& value); //Sets the value of the MessageClass property

    /*
    Property Mileage

    For more information, see help context 1937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Mileage() const; //Returns the value of Mileage
    inline void SetMileage(const QString& value); //Sets the value of the Mileage property

    /*
    Property NoAging

    For more information, see help context 1938 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool NoAging() const; //Returns the value of NoAging
    inline void SetNoAging(bool value); //Sets the value of the NoAging property

    /*
    Property OutlookInternalVersion

    For more information, see help context 1939 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int OutlookInternalVersion() const; //Returns the value of OutlookInternalVersion

    /*
    Property OutlookVersion

    For more information, see help context 1940 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString OutlookVersion() const; //Returns the value of OutlookVersion

    /*
    Property Parent

    For more information, see help context 1920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 1964 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property RTFBody

    For more information, see help context 3539 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant RTFBody() const; //Returns the value of RTFBody
    inline void SetRTFBody(const QVariant& value); //Sets the value of the RTFBody property

    /*
    Property Saved

    For more information, see help context 1941 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Saved() const; //Returns the value of Saved

    /*
    Property Sensitivity

    For more information, see help context 1942 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlSensitivity Sensitivity() const; //Returns the value of Sensitivity
    inline void SetSensitivity(Outlook::OlSensitivity value); //Sets the value of the Sensitivity property

    /*
    Property Session

    For more information, see help context 1919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 1943 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 1944 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UnRead

    For more information, see help context 1945 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool UnRead() const; //Returns the value of UnRead
    inline void SetUnRead(bool value); //Sets the value of the UnRead property

    /*
    Property UserProperties

    For more information, see help context 1946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Close

    For more information, see help context 1947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Close(Outlook::OlInspectorClose SaveMode);

    /*
    Method Copy

    For more information, see help context 1948 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Copy();

    /*
    Method Delete

    For more information, see help context 1949 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method Display

    For more information, see help context 1950 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display(const QVariant& Modal);

    /*
    Method GetAssociatedTask

    For more information, see help context 1955 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::TaskItem* GetAssociatedTask(bool AddToTaskList);

    /*
    Method GetConversation

    For more information, see help context 3504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method Move

    For more information, see help context 1951 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Move(Outlook::MAPIFolder* DestFldr);

    /*
    Method PrintOut

    For more information, see help context 1952 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void PrintOut();

    /*
    Method Save

    For more information, see help context 1953 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

    /*
    Method SaveAs

    For more information, see help context 1954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path);

    /*
    Method SaveAs

    For more information, see help context 1954 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SaveAs(const QString& Path, const QVariant& Type);

    /*
    Method ShowCategoriesDialog

    For more information, see help context 1958 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ShowCategoriesDialog();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Results : public QAxObject
{
public:
    explicit Results(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Results(_Results *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 498 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property DefaultItemType

    For more information, see help context 512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlItemType DefaultItemType() const; //Returns the value of DefaultItemType
    inline void SetDefaultItemType(Outlook::OlItemType value); //Sets the value of the DefaultItemType property

    /*
    Property Parent

    For more information, see help context 501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RawTable

    For more information, see help context 504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* RawTable() const; //Returns the value of RawTable

    /*
    Property Session

    For more information, see help context 500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetFirst

    For more information, see help context 505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetFirst();

    /*
    Method GetLast

    For more information, see help context 506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetLast();

    /*
    Method GetNext

    For more information, see help context 507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetNext();

    /*
    Method GetPrevious

    For more information, see help context 508 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetPrevious();

    /*
    Method Item

    For more information, see help context 503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item(const QVariant& Index);

    /*
    Method ResetColumns

    For more information, see help context 509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ResetColumns();

    /*
    Method SetColumns

    For more information, see help context 510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetColumns(const QString& Columns);

    /*
    Method Sort

    For more information, see help context 511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property);

    /*
    Method Sort

    For more information, see help context 511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Sort(const QString& Property, const QVariant& Descending);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Views : public QAxObject
{
public:
    explicit Views(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Views(_Views *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Add

    For more information, see help context 547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Add(const QString& Name, Outlook::OlViewType ViewType);

    /*
    Method Add

    For more information, see help context 547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Add(const QString& Name, Outlook::OlViewType ViewType, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Item

    For more information, see help context 546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method _NewEnum

    For more information, see help context 549 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* _NewEnum();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Reminder : public QAxObject
{
public:
    explicit Reminder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Reminder(_Reminder *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 554 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Caption

    For more information, see help context 560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Caption() const; //Returns the value of Caption

    /*
    Property Class

    For more information, see help context 555 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property IsVisible

    For more information, see help context 561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsVisible() const; //Returns the value of IsVisible

    /*
    Property Item

    For more information, see help context 562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Item() const; //Returns the value of Item

    /*
    Property NextReminderDate

    For more information, see help context 563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime NextReminderDate() const; //Returns the value of NextReminderDate

    /*
    Property OriginalReminderDate

    For more information, see help context 564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime OriginalReminderDate() const; //Returns the value of OriginalReminderDate

    /*
    Property Parent

    For more information, see help context 557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 556 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Dismiss

    For more information, see help context 558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Dismiss();

    /*
    Method Snooze

    For more information, see help context 559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Snooze();

    /*
    Method Snooze

    For more information, see help context 559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Snooze(const QVariant& SnoozeTime);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Reminders : public QAxObject
{
public:
    explicit Reminders(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Reminders(_Reminders *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Item

    For more information, see help context 571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Reminder* Item(const QVariant& Index);

    /*
    Method Remove

    For more information, see help context 572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Remove(const QVariant& Index);

    /*
    Method _NewEnum

    For more information, see help context 573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* _NewEnum();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT StorageItem : public QAxObject
{
public:
    explicit StorageItem(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    StorageItem(_StorageItem *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2137 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Attachments

    For more information, see help context 2147 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Attachments* Attachments() const; //Returns the value of Attachments

    /*
    Property Body

    For more information, see help context 2146 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Body() const; //Returns the value of Body
    inline void SetBody(const QString& value); //Sets the value of the Body property

    /*
    Property Class

    For more information, see help context 2138 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CreationTime

    For more information, see help context 3237 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime CreationTime() const; //Returns the value of CreationTime

    /*
    Property Creator

    For more information, see help context 2152 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Creator() const; //Returns the value of Creator
    inline void SetCreator(const QString& value); //Sets the value of the Creator property

    /*
    Property EntryID

    For more information, see help context 2143 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property LastModificationTime

    For more information, see help context 2142 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime LastModificationTime() const; //Returns the value of LastModificationTime

    /*
    Property Parent

    For more information, see help context 2140 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2150 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 2139 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Size

    For more information, see help context 2148 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Size() const; //Returns the value of Size

    /*
    Property Subject

    For more information, see help context 2151 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Subject() const; //Returns the value of Subject
    inline void SetSubject(const QString& value); //Sets the value of the Subject property

    /*
    Property UserProperties

    For more information, see help context 2149 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserProperties* UserProperties() const; //Returns the value of UserProperties

    /*
    Method Delete

    For more information, see help context 2145 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Save

    For more information, see help context 2144 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationPane : public QAxObject
{
public:
    explicit NavigationPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationPane(_NavigationPane *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2786 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2787 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentModule

    For more information, see help context 2791 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModule* CurrentModule() const; //Returns the value of CurrentModule
    inline void SetCurrentModule(Outlook::NavigationModule* value); //Sets the value of the CurrentModule property

    /*
    Property DisplayedModuleCount

    For more information, see help context 2792 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DisplayedModuleCount() const; //Returns the value of DisplayedModuleCount
    inline void SetDisplayedModuleCount(int value); //Sets the value of the DisplayedModuleCount property

    /*
    Property IsCollapsed

    For more information, see help context 2790 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsCollapsed() const; //Returns the value of IsCollapsed
    inline void SetIsCollapsed(bool value); //Sets the value of the IsCollapsed property

    /*
    Property Modules

    For more information, see help context 2793 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationModules* Modules() const; //Returns the value of Modules

    /*
    Property Parent

    For more information, see help context 2789 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2788 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NavigationGroups : public QAxObject
{
public:
    explicit NavigationGroups(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NavigationGroups(_NavigationGroups *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2852 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2853 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Count

    For more information, see help context 2856 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Count() const; //Returns the value of Count

    /*
    Property Parent

    For more information, see help context 2855 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 2854 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method Create

    For more information, see help context 2858 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationGroup* Create(const QString& GroupDisplayName);

    /*
    Method Delete

    For more information, see help context 2859 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete(Outlook::NavigationGroup* Group);

    /*
    Method GetDefaultNavigationGroup

    For more information, see help context 2860 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::NavigationGroup* GetDefaultNavigationGroup(Outlook::OlGroupType DefaultFolderGroup);

    /*
    Method Item

    For more information, see help context 2857 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroup* Item(const QVariant& Index);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT DoNotUseMeFolder : public QAxObject
{
public:
    explicit DoNotUseMeFolder(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    DoNotUseMeFolder(MAPIFolder *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AddressBookName

    For more information, see help context 2004 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString AddressBookName() const; //Returns the value of AddressBookName
    inline void SetAddressBookName(const QString& value); //Sets the value of the AddressBookName property

    /*
    Property Application

    For more information, see help context 1981 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 1982 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property CurrentView

    For more information, see help context 2009 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* CurrentView() const; //Returns the value of CurrentView

    /*
    Property CustomViewsOnly

    For more information, see help context 2010 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool CustomViewsOnly() const; //Returns the value of CustomViewsOnly
    inline void SetCustomViewsOnly(bool value); //Sets the value of the CustomViewsOnly property

    /*
    Property DefaultItemType

    For more information, see help context 1985 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlItemType DefaultItemType() const; //Returns the value of DefaultItemType

    /*
    Property DefaultMessageClass

    For more information, see help context 1986 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DefaultMessageClass() const; //Returns the value of DefaultMessageClass

    /*
    Property Description

    For more information, see help context 1987 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Description() const; //Returns the value of Description
    inline void SetDescription(const QString& value); //Sets the value of the Description property

    /*
    Property EntryID

    For more information, see help context 1988 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EntryID() const; //Returns the value of EntryID

    /*
    Property FolderPath

    For more information, see help context 2006 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FolderPath() const; //Returns the value of FolderPath

    /*
    Property Folders

    For more information, see help context 1989 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Folders* Folders() const; //Returns the value of Folders

    /*
    Property FullFolderPath

    For more information, see help context 2013 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString FullFolderPath() const; //Returns the value of FullFolderPath

    /*
    Property InAppFolderSyncObject

    For more information, see help context 2008 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool InAppFolderSyncObject() const; //Returns the value of InAppFolderSyncObject
    inline void SetInAppFolderSyncObject(bool value); //Sets the value of the InAppFolderSyncObject property

    /*
    Property IsSharePointFolder

    For more information, see help context 2014 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool IsSharePointFolder() const; //Returns the value of IsSharePointFolder

    /*
    Property Items

    For more information, see help context 1990 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Items* Items() const; //Returns the value of Items

    /*
    Property MAPIOBJECT

    For more information, see help context 2012 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IUnknown* MAPIOBJECT() const; //Returns the value of MAPIOBJECT

    /*
    Property Name

    For more information, see help context 1991 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 1984 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property PropertyAccessor

    For more information, see help context 2019 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::PropertyAccessor* PropertyAccessor() const; //Returns the value of PropertyAccessor

    /*
    Property Session

    For more information, see help context 1983 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowAsOutlookAB

    For more information, see help context 2005 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowAsOutlookAB() const; //Returns the value of ShowAsOutlookAB
    inline void SetShowAsOutlookAB(bool value); //Sets the value of the ShowAsOutlookAB property

    /*
    Property ShowItemCount

    For more information, see help context 2015 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlShowItemCount ShowItemCount() const; //Returns the value of ShowItemCount
    inline void SetShowItemCount(Outlook::OlShowItemCount value); //Sets the value of the ShowItemCount property

    /*
    Property Store

    For more information, see help context 2016 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Store* Store() const; //Returns the value of Store

    /*
    Property StoreID

    For more information, see help context 1992 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StoreID() const; //Returns the value of StoreID

    /*
    Property UnReadItemCount

    For more information, see help context 1993 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int UnReadItemCount() const; //Returns the value of UnReadItemCount

    /*
    Property UserDefinedProperties

    For more information, see help context 2021 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::UserDefinedProperties* UserDefinedProperties() const; //Returns the value of UserDefinedProperties

    /*
    Property UserPermissions

    For more information, see help context 1999 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* UserPermissions() const; //Returns the value of UserPermissions

    /*
    Property Views

    For more information, see help context 2011 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Views* Views() const; //Returns the value of Views

    /*
    Property WebViewAllowNavigation

    For more information, see help context 2002 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewAllowNavigation() const; //Returns the value of WebViewAllowNavigation
    inline void SetWebViewAllowNavigation(bool value); //Sets the value of the WebViewAllowNavigation property

    /*
    Property WebViewOn

    For more information, see help context 2000 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool WebViewOn() const; //Returns the value of WebViewOn
    inline void SetWebViewOn(bool value); //Sets the value of the WebViewOn property

    /*
    Property WebViewURL

    For more information, see help context 2001 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString WebViewURL() const; //Returns the value of WebViewURL
    inline void SetWebViewURL(const QString& value); //Sets the value of the WebViewURL property

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites();

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI);

    /*
    Method AddToFavorites

    For more information, see help context 2007 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToFavorites(const QVariant& fNoUI, const QVariant& Name);

    /*
    Method AddToPFFavorites

    For more information, see help context 2003 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddToPFFavorites();

    /*
    Method CopyTo

    For more information, see help context 1994 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* CopyTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method Delete

    For more information, see help context 1995 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method Display

    For more information, see help context 1996 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Display();

    /*
    Method GetCalendarExporter

    For more information, see help context 2020 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::CalendarSharing* GetCalendarExporter();

    /*
    Method GetCustomIcon

    For more information, see help context 3316 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QPixmap GetCustomIcon();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer();

    /*
    Method GetExplorer

    For more information, see help context 1997 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Explorer* GetExplorer(const QVariant& DisplayMode);

    /*
    Method GetStorage

    For more information, see help context 2017 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_StorageItem* GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter);

    /*
    Method GetTable

    For more information, see help context 2018 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable(const QVariant& Filter, const QVariant& TableContents);

    /*
    Method MoveTo

    For more information, see help context 1998 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MoveTo(Outlook::MAPIFolder* DestinationFolder);

    /*
    Method SetCustomIcon

    For more information, see help context 3317 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetCustomIcon(const QPixmap& Picture);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TimelineView : public QAxObject
{
public:
    explicit TimelineView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TimelineView(_TimelineView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2642 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2643 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DefaultExpandCollapseSetting

    For more information, see help context 2663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting() const; //Returns the value of DefaultExpandCollapseSetting
    inline void SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value); //Sets the value of the DefaultExpandCollapseSetting property

    /*
    Property EndField

    For more information, see help context 2661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EndField() const; //Returns the value of EndField
    inline void SetEndField(const QString& value); //Sets the value of the EndField property

    /*
    Property Filter

    For more information, see help context 2659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property GroupByFields

    For more information, see help context 2662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* GroupByFields() const; //Returns the value of GroupByFields

    /*
    Property ItemFont

    For more information, see help context 2669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* ItemFont() const; //Returns the value of ItemFont

    /*
    Property Language

    For more information, see help context 2651 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2652 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property LowerScaleFont

    For more information, see help context 2668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* LowerScaleFont() const; //Returns the value of LowerScaleFont

    /*
    Property MaxLabelWidth

    For more information, see help context 2665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLabelWidth() const; //Returns the value of MaxLabelWidth
    inline void SetMaxLabelWidth(int value); //Sets the value of the MaxLabelWidth property

    /*
    Property Name

    For more information, see help context 2653 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2645 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2654 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2644 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowLabelWhenViewingByMonth

    For more information, see help context 2666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowLabelWhenViewingByMonth() const; //Returns the value of ShowLabelWhenViewingByMonth
    inline void SetShowLabelWhenViewingByMonth(bool value); //Sets the value of the ShowLabelWhenViewingByMonth property

    /*
    Property ShowWeekNumbers

    For more information, see help context 2664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowWeekNumbers() const; //Returns the value of ShowWeekNumbers
    inline void SetShowWeekNumbers(bool value); //Sets the value of the ShowWeekNumbers property

    /*
    Property Standard

    For more information, see help context 2655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property StartField

    For more information, see help context 2660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StartField() const; //Returns the value of StartField
    inline void SetStartField(const QString& value); //Sets the value of the StartField property

    /*
    Property TimelineViewMode

    For more information, see help context 2670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlTimelineViewMode TimelineViewMode() const; //Returns the value of TimelineViewMode
    inline void SetTimelineViewMode(Outlook::OlTimelineViewMode value); //Sets the value of the TimelineViewMode property

    /*
    Property UpperScaleFont

    For more information, see help context 2667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* UpperScaleFont() const; //Returns the value of UpperScaleFont

    /*
    Property ViewType

    For more information, see help context 2656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2646 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2647 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2648 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2649 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2650 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MailModule : public QAxObject
{
public:
    explicit MailModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    MailModule(_MailModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2812 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2813 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2817 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2820 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3242 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2815 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2818 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2814 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2819 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT CalendarModule : public QAxObject
{
public:
    explicit CalendarModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    CalendarModule(_CalendarModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2822 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2823 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2827 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2830 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3243 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2825 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2828 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2824 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2829 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ContactsModule : public QAxObject
{
public:
    explicit ContactsModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ContactsModule(_ContactsModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2832 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2833 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2837 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2840 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3244 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2835 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2838 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2834 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2839 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TasksModule : public QAxObject
{
public:
    explicit TasksModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TasksModule(_TasksModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2842 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2843 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2847 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2850 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3245 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2845 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2848 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2844 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2849 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT JournalModule : public QAxObject
{
public:
    explicit JournalModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    JournalModule(_JournalModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2862 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2863 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2867 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2870 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3246 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2865 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2868 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2864 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2869 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT NotesModule : public QAxObject
{
public:
    explicit NotesModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    NotesModule(_NotesModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2872 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2873 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 2877 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationGroups

    For more information, see help context 2880 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NavigationGroups* NavigationGroups() const; //Returns the value of NavigationGroups

    /*
    Property NavigationModuleType

    For more information, see help context 3235 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 2875 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 2878 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 2874 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 2879 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TableView : public QAxObject
{
public:
    explicit TableView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TableView(_TableView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AllowInCellEditing

    For more information, see help context 2526 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowInCellEditing() const; //Returns the value of AllowInCellEditing
    inline void SetAllowInCellEditing(bool value); //Sets the value of the AllowInCellEditing property

    /*
    Property AlwaysExpandConversation

    For more information, see help context 3520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AlwaysExpandConversation() const; //Returns the value of AlwaysExpandConversation
    inline void SetAlwaysExpandConversation(bool value); //Sets the value of the AlwaysExpandConversation property

    /*
    Property Application

    For more information, see help context 2499 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2537 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property AutoPreview

    For more information, see help context 2536 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlAutoPreview AutoPreview() const; //Returns the value of AutoPreview
    inline void SetAutoPreview(Outlook::OlAutoPreview value); //Sets the value of the AutoPreview property

    /*
    Property AutoPreviewFont

    For more information, see help context 2535 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* AutoPreviewFont() const; //Returns the value of AutoPreviewFont

    /*
    Property AutomaticColumnSizing

    For more information, see help context 2523 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutomaticColumnSizing() const; //Returns the value of AutomaticColumnSizing
    inline void SetAutomaticColumnSizing(bool value); //Sets the value of the AutomaticColumnSizing property

    /*
    Property AutomaticGrouping

    For more information, see help context 2521 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AutomaticGrouping() const; //Returns the value of AutomaticGrouping
    inline void SetAutomaticGrouping(bool value); //Sets the value of the AutomaticGrouping property

    /*
    Property Class

    For more information, see help context 2500 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ColumnFont

    For more information, see help context 2534 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* ColumnFont() const; //Returns the value of ColumnFont

    /*
    Property DefaultExpandCollapseSetting

    For more information, see help context 2522 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting() const; //Returns the value of DefaultExpandCollapseSetting
    inline void SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value); //Sets the value of the DefaultExpandCollapseSetting property

    /*
    Property Filter

    For more information, see help context 2516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property GridLineStyle

    For more information, see help context 2528 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlGridLineStyle GridLineStyle() const; //Returns the value of GridLineStyle
    inline void SetGridLineStyle(Outlook::OlGridLineStyle value); //Sets the value of the GridLineStyle property

    /*
    Property GroupByFields

    For more information, see help context 2518 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* GroupByFields() const; //Returns the value of GroupByFields

    /*
    Property HideReadingPaneHeaderInfo

    For more information, see help context 2531 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool HideReadingPaneHeaderInfo() const; //Returns the value of HideReadingPaneHeaderInfo
    inline void SetHideReadingPaneHeaderInfo(bool value); //Sets the value of the HideReadingPaneHeaderInfo property

    /*
    Property Language

    For more information, see help context 2508 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2509 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MaxLinesInMultiLineView

    For more information, see help context 2520 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MaxLinesInMultiLineView() const; //Returns the value of MaxLinesInMultiLineView
    inline void SetMaxLinesInMultiLineView(int value); //Sets the value of the MaxLinesInMultiLineView property

    /*
    Property MultiLine

    For more information, see help context 2524 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlMultiLine MultiLine() const; //Returns the value of MultiLine
    inline void SetMultiLine(Outlook::OlMultiLine value); //Sets the value of the MultiLine property

    /*
    Property MultiLineWidth

    For more information, see help context 2525 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MultiLineWidth() const; //Returns the value of MultiLineWidth
    inline void SetMultiLineWidth(int value); //Sets the value of the MultiLineWidth property

    /*
    Property Name

    For more information, see help context 2510 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2502 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property RowFont

    For more information, see help context 2533 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* RowFont() const; //Returns the value of RowFont

    /*
    Property SaveOption

    For more information, see help context 2511 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2501 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowConversationByDate

    For more information, see help context 3515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowConversationByDate() const; //Returns the value of ShowConversationByDate
    inline void SetShowConversationByDate(bool value); //Sets the value of the ShowConversationByDate property

    /*
    Property ShowConversationSendersAboveSubject

    For more information, see help context 3557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowConversationSendersAboveSubject() const; //Returns the value of ShowConversationSendersAboveSubject
    inline void SetShowConversationSendersAboveSubject(bool value); //Sets the value of the ShowConversationSendersAboveSubject property

    /*
    Property ShowFullConversations

    For more information, see help context 3516 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowFullConversations() const; //Returns the value of ShowFullConversations
    inline void SetShowFullConversations(bool value); //Sets the value of the ShowFullConversations property

    /*
    Property ShowItemsInGroups

    For more information, see help context 2529 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowItemsInGroups() const; //Returns the value of ShowItemsInGroups
    inline void SetShowItemsInGroups(bool value); //Sets the value of the ShowItemsInGroups property

    /*
    Property ShowNewItemRow

    For more information, see help context 2527 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowNewItemRow() const; //Returns the value of ShowNewItemRow
    inline void SetShowNewItemRow(bool value); //Sets the value of the ShowNewItemRow property

    /*
    Property ShowReadingPane

    For more information, see help context 2530 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowReadingPane() const; //Returns the value of ShowReadingPane
    inline void SetShowReadingPane(bool value); //Sets the value of the ShowReadingPane property

    /*
    Property ShowUnreadAndFlaggedMessages

    For more information, see help context 2532 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowUnreadAndFlaggedMessages() const; //Returns the value of ShowUnreadAndFlaggedMessages
    inline void SetShowUnreadAndFlaggedMessages(bool value); //Sets the value of the ShowUnreadAndFlaggedMessages property

    /*
    Property SortFields

    For more information, see help context 2519 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2512 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewFields

    For more information, see help context 2517 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFields* ViewFields() const; //Returns the value of ViewFields

    /*
    Property ViewType

    For more information, see help context 2513 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2514 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2503 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2504 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2505 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GetTable

    For more information, see help context 3315 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method GoToDate

    For more information, see help context 2515 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2506 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2507 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT IconView : public QAxObject
{
public:
    explicit IconView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    IconView(_IconView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2557 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 2558 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property IconPlacement

    For more information, see help context 2577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlIconViewPlacement IconPlacement() const; //Returns the value of IconPlacement
    inline void SetIconPlacement(Outlook::OlIconViewPlacement value); //Sets the value of the IconPlacement property

    /*
    Property IconViewType

    For more information, see help context 2576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlIconViewType IconViewType() const; //Returns the value of IconViewType
    inline void SetIconViewType(Outlook::OlIconViewType value); //Sets the value of the IconViewType property

    /*
    Property Language

    For more information, see help context 2566 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2567 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 2568 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2560 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2559 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 2575 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 2571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2561 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2562 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2563 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2564 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2565 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT CardView : public QAxObject
{
public:
    explicit CardView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    CardView(_CardView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property AllowInCellEditing

    For more information, see help context 2598 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool AllowInCellEditing() const; //Returns the value of AllowInCellEditing
    inline void SetAllowInCellEditing(bool value); //Sets the value of the AllowInCellEditing property

    /*
    Property Application

    For more information, see help context 2579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property BodyFont

    For more information, see help context 2604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* BodyFont() const; //Returns the value of BodyFont

    /*
    Property Class

    For more information, see help context 2580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2596 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property HeadingsFont

    For more information, see help context 2603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* HeadingsFont() const; //Returns the value of HeadingsFont

    /*
    Property Language

    For more information, see help context 2588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2589 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MultiLineFieldHeight

    For more information, see help context 2601 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int MultiLineFieldHeight() const; //Returns the value of MultiLineFieldHeight
    inline void SetMultiLineFieldHeight(int value); //Sets the value of the MultiLineFieldHeight property

    /*
    Property Name

    For more information, see help context 2590 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2591 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2581 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property ShowEmptyFields

    For more information, see help context 2599 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool ShowEmptyFields() const; //Returns the value of ShowEmptyFields
    inline void SetShowEmptyFields(bool value); //Sets the value of the ShowEmptyFields property

    /*
    Property SortFields

    For more information, see help context 2597 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2592 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewFields

    For more information, see help context 2602 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFields* ViewFields() const; //Returns the value of ViewFields

    /*
    Property ViewType

    For more information, see help context 2593 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property Width

    For more information, see help context 2600 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Width() const; //Returns the value of Width
    inline void SetWidth(int value); //Sets the value of the Width property

    /*
    Property XML

    For more information, see help context 2594 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2595 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2587 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT CalendarView : public QAxObject
{
public:
    explicit CalendarView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    CalendarView(_CalendarView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property AutoFormatRules

    For more information, see help context 2639 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::AutoFormatRules* AutoFormatRules() const; //Returns the value of AutoFormatRules

    /*
    Property BoldDatesWithItems

    For more information, see help context 2634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool BoldDatesWithItems() const; //Returns the value of BoldDatesWithItems
    inline void SetBoldDatesWithItems(bool value); //Sets the value of the BoldDatesWithItems property

    /*
    Property BoldSubjects

    For more information, see help context 3232 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool BoldSubjects() const; //Returns the value of BoldSubjects
    inline void SetBoldSubjects(bool value); //Sets the value of the BoldSubjects property

    /*
    Property CalendarViewMode

    For more information, see help context 2627 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlCalendarViewMode CalendarViewMode() const; //Returns the value of CalendarViewMode
    inline void SetCalendarViewMode(Outlook::OlCalendarViewMode value); //Sets the value of the CalendarViewMode property

    /*
    Property Class

    For more information, see help context 2608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DayWeekFont

    For more information, see help context 3027 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* DayWeekFont() const; //Returns the value of DayWeekFont

    /*
    Property DayWeekTimeFont

    For more information, see help context 3026 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* DayWeekTimeFont() const; //Returns the value of DayWeekTimeFont

    /*
    Property DayWeekTimeScale

    For more information, see help context 3025 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlDayWeekTimeScale DayWeekTimeScale() const; //Returns the value of DayWeekTimeScale
    inline void SetDayWeekTimeScale(Outlook::OlDayWeekTimeScale value); //Sets the value of the DayWeekTimeScale property

    /*
    Property DaysInMultiDayMode

    For more information, see help context 2640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DaysInMultiDayMode() const; //Returns the value of DaysInMultiDayMode
    inline void SetDaysInMultiDayMode(int value); //Sets the value of the DaysInMultiDayMode property

    /*
    Property DisplayedDates

    For more information, see help context 3028 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant DisplayedDates() const; //Returns the value of DisplayedDates

    /*
    Property EndField

    For more information, see help context 2626 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString EndField() const; //Returns the value of EndField
    inline void SetEndField(const QString& value); //Sets the value of the EndField property

    /*
    Property Filter

    For more information, see help context 2624 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 2616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property MonthFont

    For more information, see help context 2638 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* MonthFont() const; //Returns the value of MonthFont

    /*
    Property MonthShowEndTime

    For more information, see help context 2632 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool MonthShowEndTime() const; //Returns the value of MonthShowEndTime
    inline void SetMonthShowEndTime(bool value); //Sets the value of the MonthShowEndTime property

    /*
    Property Name

    For more information, see help context 2618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property SelectedEndTime

    For more information, see help context 3314 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SelectedEndTime() const; //Returns the value of SelectedEndTime

    /*
    Property SelectedStartTime

    For more information, see help context 3313 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime SelectedStartTime() const; //Returns the value of SelectedStartTime

    /*
    Property Session

    For more information, see help context 2609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 2620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property StartField

    For more information, see help context 2625 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StartField() const; //Returns the value of StartField
    inline void SetStartField(const QString& value); //Sets the value of the StartField property

    /*
    Property ViewType

    For more information, see help context 2621 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2622 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2623 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT BusinessCardView : public QAxObject
{
public:
    explicit BusinessCardView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    BusinessCardView(_BusinessCardView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 2917 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property CardSize

    For more information, see help context 2937 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int CardSize() const; //Returns the value of CardSize
    inline void SetCardSize(int value); //Sets the value of the CardSize property

    /*
    Property Class

    For more information, see help context 2918 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 2934 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property HeadingsFont

    For more information, see help context 2935 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::ViewFont* HeadingsFont() const; //Returns the value of HeadingsFont

    /*
    Property Language

    For more information, see help context 2926 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 2927 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 2928 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 2920 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 2929 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 2919 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 2936 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 2930 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 2931 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 2932 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 2921 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 2922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 2922 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 2923 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 2933 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 2924 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 2925 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT FormRegionStartup : public QAxObject
{
public:
    explicit FormRegionStartup(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    FormRegionStartup(_FormRegionStartup *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Method BeforeFormRegionShow

    For more information, see help context 2947 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void BeforeFormRegionShow(Outlook::FormRegion* FormRegion);

    /*
    Method GetFormRegionIcon

    For more information, see help context 3307 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionIcon(const QString& FormRegionName, int LCID, Outlook::OlFormRegionIcon Icon);

    /*
    Method GetFormRegionManifest

    For more information, see help context 3305 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionManifest(const QString& FormRegionName, int LCID);

    /*
    Method GetFormRegionStorage

    For more information, see help context 2946 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QVariant GetFormRegionStorage(const QString& FormRegionName, IDispatch* Item, int LCID, Outlook::OlFormRegionMode FormRegionMode, Outlook::OlFormRegionSize FormRegionSize);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT TimeZone : public QAxObject
{
public:
    explicit TimeZone(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    TimeZone(_TimeZone *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3278 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Bias

    For more information, see help context 3285 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Bias() const; //Returns the value of Bias

    /*
    Property Class

    For more information, see help context 3279 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property DaylightBias

    For more information, see help context 3287 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int DaylightBias() const; //Returns the value of DaylightBias

    /*
    Property DaylightDate

    For more information, see help context 3289 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime DaylightDate() const; //Returns the value of DaylightDate

    /*
    Property DaylightDesignation

    For more information, see help context 3283 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString DaylightDesignation() const; //Returns the value of DaylightDesignation

    /*
    Property ID

    For more information, see help context 3304 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ID() const; //Returns the value of ID

    /*
    Property Name

    For more information, see help context 3282 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property Parent

    For more information, see help context 3281 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3280 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property StandardBias

    For more information, see help context 3286 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int StandardBias() const; //Returns the value of StandardBias

    /*
    Property StandardDate

    For more information, see help context 3288 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QDateTime StandardDate() const; //Returns the value of StandardDate

    /*
    Property StandardDesignation

    For more information, see help context 3284 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString StandardDesignation() const; //Returns the value of StandardDesignation

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT SolutionsModule : public QAxObject
{
public:
    explicit SolutionsModule(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    SolutionsModule(_SolutionsModule *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3360 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3361 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Name

    For more information, see help context 3365 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name

    /*
    Property NavigationModuleType

    For more information, see help context 3364 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlNavigationModuleType NavigationModuleType() const; //Returns the value of NavigationModuleType

    /*
    Property Parent

    For more information, see help context 3363 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Position

    For more information, see help context 3366 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline int Position() const; //Returns the value of Position
    inline void SetPosition(int value); //Sets the value of the Position property

    /*
    Property Session

    For more information, see help context 3362 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Visible

    For more information, see help context 3367 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Visible() const; //Returns the value of Visible
    inline void SetVisible(bool value); //Sets the value of the Visible property

    /*
    Method AddSolution

    For more information, see help context 3368 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void AddSolution(Outlook::MAPIFolder* Solution, Outlook::OlSolutionScope Scope);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT Conversation : public QAxObject
{
public:
    explicit Conversation(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    Conversation(_Conversation *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3383 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3384 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConversationID

    For more information, see help context 3467 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property Parent

    For more information, see help context 3385 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3386 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method ClearAlwaysAssignCategories

    For more information, see help context 3489 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void ClearAlwaysAssignCategories(Outlook::_Store* Store);

    /*
    Method GetAlwaysAssignCategories

    For more information, see help context 3439 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString GetAlwaysAssignCategories(Outlook::_Store* Store);

    /*
    Method GetAlwaysDelete

    For more information, see help context 3440 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline OlAlwaysDeleteConversation GetAlwaysDelete(Outlook::_Store* Store);

    /*
    Method GetAlwaysMoveToFolder

    For more information, see help context 3441 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::MAPIFolder* GetAlwaysMoveToFolder(Outlook::_Store* Store);

    /*
    Method GetChildren

    For more information, see help context 3391 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetChildren(IDispatch* Item);

    /*
    Method GetParent

    For more information, see help context 3401 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* GetParent(IDispatch* Item);

    /*
    Method GetRootItems

    For more information, see help context 3402 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetRootItems();

    /*
    Method GetTable

    For more information, see help context 3382 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::Table* GetTable();

    /*
    Method MarkAsRead

    For more information, see help context 3442 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsRead();

    /*
    Method MarkAsUnread

    For more information, see help context 3443 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void MarkAsUnread();

    /*
    Method SetAlwaysAssignCategories

    For more information, see help context 3444 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysAssignCategories(const QString& Categories, Outlook::_Store* Store);

    /*
    Method SetAlwaysDelete

    For more information, see help context 3445 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysDelete(Outlook::OlAlwaysDeleteConversation AlwaysDelete, Outlook::_Store* Store);

    /*
    Method SetAlwaysMoveToFolder

    For more information, see help context 3430 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void SetAlwaysMoveToFolder(Outlook::MAPIFolder* MoveToFolder, Outlook::_Store* Store);

    /*
    Method StopAlwaysDelete

    For more information, see help context 3432 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopAlwaysDelete(Outlook::_Store* Store);

    /*
    Method StopAlwaysMoveToFolder

    For more information, see help context 3433 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void StopAlwaysMoveToFolder(Outlook::_Store* Store);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT AccountSelector : public QAxObject
{
public:
    explicit AccountSelector(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    AccountSelector(_AccountSelector *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3449 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3450 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 3452 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SelectedAccount

    For more information, see help context 3453 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Account* SelectedAccount() const; //Returns the value of SelectedAccount

    /*
    Property Session

    For more information, see help context 3451 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ConversationHeader : public QAxObject
{
public:
    explicit ConversationHeader(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    ConversationHeader(_ConversationHeader *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3546 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3547 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property ConversationID

    For more information, see help context 3542 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationID() const; //Returns the value of ConversationID

    /*
    Property ConversationTopic

    For more information, see help context 3543 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString ConversationTopic() const; //Returns the value of ConversationTopic

    /*
    Property Parent

    For more information, see help context 3545 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3548 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Method GetConversation

    For more information, see help context 3541 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Conversation* GetConversation();

    /*
    Method GetItems

    For more information, see help context 3544 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::SimpleItems* GetItems();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT PeopleView : public QAxObject
{
public:
    explicit PeopleView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    PeopleView(_PeopleView *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3569 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3570 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3586 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3578 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3579 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3580 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3572 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3581 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3571 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property SortFields

    For more information, see help context 3588 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OrderFields* SortFields() const; //Returns the value of SortFields

    /*
    Property Standard

    For more information, see help context 3582 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3583 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3584 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3573 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3574 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3575 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3585 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3576 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3577 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT ThreadView : public QAxObject
{
public:
    explicit ThreadView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3603 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3604 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3620 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3612 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3613 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3614 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3606 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3615 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3605 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 3616 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3617 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3618 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3607 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3608 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3609 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3619 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3610 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3611 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT PreviewPane : public QAxObject
{
public:
    explicit PreviewPane(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    PreviewPane(_PreviewPane *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property Application

    For more information, see help context 3634 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3635 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Parent

    For more information, see help context 3637 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property Session

    For more information, see help context 3636 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property WordEditor

    For more information, see help context 3640 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* WordEditor() const; //Returns the value of WordEditor

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

class OUTLOOK_EXPORT MessageListView : public QAxObject
{
public:
    explicit MessageListView(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Property Application

    For more information, see help context 3655 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_Application* Application() const; //Returns the value of Application

    /*
    Property Class

    For more information, see help context 3656 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlObjectClass Class() const; //Returns the value of Class

    /*
    Property Filter

    For more information, see help context 3672 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Filter() const; //Returns the value of Filter
    inline void SetFilter(const QString& value); //Sets the value of the Filter property

    /*
    Property Language

    For more information, see help context 3664 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Language() const; //Returns the value of Language
    inline void SetLanguage(const QString& value); //Sets the value of the Language property

    /*
    Property LockUserChanges

    For more information, see help context 3665 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool LockUserChanges() const; //Returns the value of LockUserChanges
    inline void SetLockUserChanges(bool value); //Sets the value of the LockUserChanges property

    /*
    Property Name

    For more information, see help context 3666 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString Name() const; //Returns the value of Name
    inline void SetName(const QString& value); //Sets the value of the Name property

    /*
    Property Parent

    For more information, see help context 3658 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline IDispatch* Parent() const; //Returns the value of Parent

    /*
    Property SaveOption

    For more information, see help context 3667 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewSaveOption SaveOption() const; //Returns the value of SaveOption

    /*
    Property Session

    For more information, see help context 3657 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::_NameSpace* Session() const; //Returns the value of Session

    /*
    Property Standard

    For more information, see help context 3668 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline bool Standard() const; //Returns the value of Standard

    /*
    Property ViewType

    For more information, see help context 3669 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::OlViewType ViewType() const; //Returns the value of ViewType

    /*
    Property XML

    For more information, see help context 3670 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline QString XML() const; //Returns the value of XML
    inline void SetXML(const QString& value); //Sets the value of the XML property

    /*
    Method Apply

    For more information, see help context 3659 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Apply();

    /*
    Method Copy

    For more information, see help context 3660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name);

    /*
    Method Copy

    For more information, see help context 3660 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline Outlook::View* Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption);

    /*
    Method Delete

    For more information, see help context 3661 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Delete();

    /*
    Method GoToDate

    For more information, see help context 3671 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void GoToDate(const QDateTime& Date);

    /*
    Method Reset

    For more information, see help context 3662 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Reset();

    /*
    Method Save

    For more information, see help context 3663 in C:\Program Files (x86)\Microsoft Office\Root\Office16\VBAOL11.CHM.
    */
    inline void Save();

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// member function implementation
#ifndef QAX_DUMPCPP_OUTLOOK_NOINLINES
inline int _DRecipientControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DRecipientControl::SetBackColor(int value){ setProperty("BackColor", QVariant(value)); }

inline int _DRecipientControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DRecipientControl::SetEnabled(int value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _DRecipientControl::Font() const
{
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}
inline void _DRecipientControl::SetFont(IDispatch* value){
    int typeId = qRegisterMetaType<IDispatch*>("IDispatch*", &value);
    setProperty("Font", QVariant(typeId, &value));
}

inline int _DRecipientControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DRecipientControl::SetForeColor(int value){ setProperty("ForeColor", QVariant(value)); }

inline int _DRecipientControl::ReadOnly() const
{
    QVariant qax_result = property("ReadOnly");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DRecipientControl::SetReadOnly(int value){ setProperty("ReadOnly", QVariant(value)); }

inline int _DRecipientControl::SpecialEffect() const
{
    QVariant qax_result = property("SpecialEffect");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DRecipientControl::SetSpecialEffect(int value){ setProperty("SpecialEffect", QVariant(value)); }


inline int _RecipientControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _RecipientControl::SetBackColor(int value){ setProperty("BackColor", QVariant(value)); }

inline int _RecipientControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _RecipientControl::SetEnabled(int value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _RecipientControl::Font() const
{
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}
inline void _RecipientControl::SetFont(IDispatch* value){
    int typeId = qRegisterMetaType<IDispatch*>("IDispatch*", &value);
    setProperty("Font", QVariant(typeId, &value));
}

inline int _RecipientControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _RecipientControl::SetForeColor(int value){ setProperty("ForeColor", QVariant(value)); }

inline int _RecipientControl::ReadOnly() const
{
    QVariant qax_result = property("ReadOnly");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _RecipientControl::SetReadOnly(int value){ setProperty("ReadOnly", QVariant(value)); }

inline int _RecipientControl::SpecialEffect() const
{
    QVariant qax_result = property("SpecialEffect");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _RecipientControl::SetSpecialEffect(int value){ setProperty("SpecialEffect", QVariant(value)); }


inline int _DDocSiteControl::ReadOnly() const
{
    QVariant qax_result = property("ReadOnly");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDocSiteControl::SetReadOnly(int value){ setProperty("ReadOnly", QVariant(value)); }

inline int _DDocSiteControl::SuppressAttachments() const
{
    QVariant qax_result = property("SuppressAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DDocSiteControl::SetSuppressAttachments(int value){ setProperty("SuppressAttachments", QVariant(value)); }


inline int _DocSiteControl::ReadOnly() const
{
    QVariant qax_result = property("ReadOnly");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DocSiteControl::SetReadOnly(int value){ setProperty("ReadOnly", QVariant(value)); }

inline int _DocSiteControl::SuppressAttachments() const
{
    QVariant qax_result = property("SuppressAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DocSiteControl::SetSuppressAttachments(int value){ setProperty("SuppressAttachments", QVariant(value)); }


inline QString OlkControl::ControlProperty() const
{
    QVariant qax_result = property("ControlProperty");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkControl::SetControlProperty(const QString& value){ setProperty("ControlProperty", QVariant(value)); }

inline bool OlkControl::EnableAutoLayout() const
{
    QVariant qax_result = property("EnableAutoLayout");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkControl::SetEnableAutoLayout(bool value){ setProperty("EnableAutoLayout", QVariant(value)); }

inline int OlkControl::Format() const
{
    QVariant qax_result = property("Format");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkControl::SetFormat(int value){ setProperty("Format", QVariant(value)); }

inline Outlook::OlHorizontalLayout OlkControl::HorizontalLayout() const
{
    QVariant qax_result = property("HorizontalLayout");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlHorizontalLayout*)qax_result.constData();
}
inline void OlkControl::SetHorizontalLayout(Outlook::OlHorizontalLayout value){ setProperty("HorizontalLayout", QVariant(value)); }

inline QString OlkControl::ItemProperty() const
{
    QVariant qax_result = property("ItemProperty");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkControl::SetItemProperty(const QString& value){ setProperty("ItemProperty", QVariant(value)); }

inline int OlkControl::MinimumHeight() const
{
    QVariant qax_result = property("MinimumHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkControl::SetMinimumHeight(int value){ setProperty("MinimumHeight", QVariant(value)); }

inline int OlkControl::MinimumWidth() const
{
    QVariant qax_result = property("MinimumWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkControl::SetMinimumWidth(int value){ setProperty("MinimumWidth", QVariant(value)); }

inline QString OlkControl::PossibleValues() const
{
    QVariant qax_result = property("PossibleValues");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkControl::SetPossibleValues(const QString& value){ setProperty("PossibleValues", QVariant(value)); }

inline Outlook::OlVerticalLayout OlkControl::VerticalLayout() const
{
    QVariant qax_result = property("VerticalLayout");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlVerticalLayout*)qax_result.constData();
}
inline void OlkControl::SetVerticalLayout(Outlook::OlVerticalLayout value){ setProperty("VerticalLayout", QVariant(value)); }


inline bool _OlkTextBox::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool _OlkTextBox::AutoTab() const
{
    QVariant qax_result = property("AutoTab");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetAutoTab(bool value){ setProperty("AutoTab", QVariant(value)); }

inline bool _OlkTextBox::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor _OlkTextBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkTextBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle _OlkTextBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void _OlkTextBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline Outlook::OlDragBehavior _OlkTextBox::DragBehavior() const
{
    QVariant qax_result = property("DragBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDragBehavior*)qax_result.constData();
}
inline void _OlkTextBox::SetDragBehavior(Outlook::OlDragBehavior value){ setProperty("DragBehavior", QVariant(value)); }

inline bool _OlkTextBox::EnableRichText() const
{
    QVariant qax_result = property("EnableRichText");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetEnableRichText(bool value){ setProperty("EnableRichText", QVariant(value)); }

inline bool _OlkTextBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior _OlkTextBox::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void _OlkTextBox::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline bool _OlkTextBox::EnterKeyBehavior() const
{
    QVariant qax_result = property("EnterKeyBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetEnterKeyBehavior(bool value){ setProperty("EnterKeyBehavior", QVariant(value)); }

inline stdole::Font* _OlkTextBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkTextBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkTextBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool _OlkTextBox::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline bool _OlkTextBox::IntegralHeight() const
{
    QVariant qax_result = property("IntegralHeight");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetIntegralHeight(bool value){ setProperty("IntegralHeight", QVariant(value)); }

inline bool _OlkTextBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline int _OlkTextBox::MaxLength() const
{
    QVariant qax_result = property("MaxLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkTextBox::SetMaxLength(int value){ setProperty("MaxLength", QVariant(value)); }

inline QPixmap _OlkTextBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkTextBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkTextBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkTextBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool _OlkTextBox::MultiLine() const
{
    QVariant qax_result = property("MultiLine");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetMultiLine(bool value){ setProperty("MultiLine", QVariant(value)); }

inline QString _OlkTextBox::PasswordChar() const
{
    QVariant qax_result = property("PasswordChar");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkTextBox::SetPasswordChar(const QString& value){ setProperty("PasswordChar", QVariant(value)); }

inline Outlook::OlScrollBars _OlkTextBox::Scrollbars() const
{
    QVariant qax_result = property("Scrollbars");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlScrollBars*)qax_result.constData();
}
inline void _OlkTextBox::SetScrollbars(Outlook::OlScrollBars value){ setProperty("Scrollbars", QVariant(value)); }

inline int _OlkTextBox::SelLength() const
{
    QVariant qax_result = property("SelLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkTextBox::SetSelLength(int value){ setProperty("SelLength", QVariant(value)); }

inline int _OlkTextBox::SelStart() const
{
    QVariant qax_result = property("SelStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkTextBox::SetSelStart(int value){ setProperty("SelStart", QVariant(value)); }

inline QString _OlkTextBox::SelText() const
{
    QVariant qax_result = property("SelText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _OlkTextBox::SelectionMargin() const
{
    QVariant qax_result = property("SelectionMargin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetSelectionMargin(bool value){ setProperty("SelectionMargin", QVariant(value)); }

inline bool _OlkTextBox::TabKeyBehavior() const
{
    QVariant qax_result = property("TabKeyBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetTabKeyBehavior(bool value){ setProperty("TabKeyBehavior", QVariant(value)); }

inline QString _OlkTextBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkTextBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign _OlkTextBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkTextBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QVariant _OlkTextBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkTextBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool _OlkTextBox::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTextBox::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }

inline void _OlkTextBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _OlkTextBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _OlkTextBox::Cut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _OlkTextBox::Paste()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline bool OlkTextBox::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool OlkTextBox::AutoTab() const
{
    QVariant qax_result = property("AutoTab");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetAutoTab(bool value){ setProperty("AutoTab", QVariant(value)); }

inline bool OlkTextBox::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor OlkTextBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkTextBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle OlkTextBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void OlkTextBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline Outlook::OlDragBehavior OlkTextBox::DragBehavior() const
{
    QVariant qax_result = property("DragBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDragBehavior*)qax_result.constData();
}
inline void OlkTextBox::SetDragBehavior(Outlook::OlDragBehavior value){ setProperty("DragBehavior", QVariant(value)); }

inline bool OlkTextBox::EnableRichText() const
{
    QVariant qax_result = property("EnableRichText");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetEnableRichText(bool value){ setProperty("EnableRichText", QVariant(value)); }

inline bool OlkTextBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior OlkTextBox::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void OlkTextBox::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline bool OlkTextBox::EnterKeyBehavior() const
{
    QVariant qax_result = property("EnterKeyBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetEnterKeyBehavior(bool value){ setProperty("EnterKeyBehavior", QVariant(value)); }

inline stdole::Font* OlkTextBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkTextBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkTextBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool OlkTextBox::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline bool OlkTextBox::IntegralHeight() const
{
    QVariant qax_result = property("IntegralHeight");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetIntegralHeight(bool value){ setProperty("IntegralHeight", QVariant(value)); }

inline bool OlkTextBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline int OlkTextBox::MaxLength() const
{
    QVariant qax_result = property("MaxLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkTextBox::SetMaxLength(int value){ setProperty("MaxLength", QVariant(value)); }

inline QPixmap OlkTextBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkTextBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkTextBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkTextBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool OlkTextBox::MultiLine() const
{
    QVariant qax_result = property("MultiLine");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetMultiLine(bool value){ setProperty("MultiLine", QVariant(value)); }

inline QString OlkTextBox::PasswordChar() const
{
    QVariant qax_result = property("PasswordChar");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkTextBox::SetPasswordChar(const QString& value){ setProperty("PasswordChar", QVariant(value)); }

inline Outlook::OlScrollBars OlkTextBox::Scrollbars() const
{
    QVariant qax_result = property("Scrollbars");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlScrollBars*)qax_result.constData();
}
inline void OlkTextBox::SetScrollbars(Outlook::OlScrollBars value){ setProperty("Scrollbars", QVariant(value)); }

inline int OlkTextBox::SelLength() const
{
    QVariant qax_result = property("SelLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkTextBox::SetSelLength(int value){ setProperty("SelLength", QVariant(value)); }

inline int OlkTextBox::SelStart() const
{
    QVariant qax_result = property("SelStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkTextBox::SetSelStart(int value){ setProperty("SelStart", QVariant(value)); }

inline QString OlkTextBox::SelText() const
{
    QVariant qax_result = property("SelText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OlkTextBox::SelectionMargin() const
{
    QVariant qax_result = property("SelectionMargin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetSelectionMargin(bool value){ setProperty("SelectionMargin", QVariant(value)); }

inline bool OlkTextBox::TabKeyBehavior() const
{
    QVariant qax_result = property("TabKeyBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetTabKeyBehavior(bool value){ setProperty("TabKeyBehavior", QVariant(value)); }

inline QString OlkTextBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkTextBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign OlkTextBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkTextBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QVariant OlkTextBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkTextBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool OlkTextBox::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTextBox::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }

inline void OlkTextBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void OlkTextBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void OlkTextBox::Cut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void OlkTextBox::Paste()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}


inline QString _OlkLabel::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkLabel::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline bool _OlkLabel::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkLabel::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QColor _OlkLabel::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkLabel::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkLabel::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkLabel::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline Outlook::OlBorderStyle _OlkLabel::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void _OlkLabel::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline QString _OlkLabel::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkLabel::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool _OlkLabel::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkLabel::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkLabel::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkLabel::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkLabel::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap _OlkLabel::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkLabel::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkLabel::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkLabel::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline Outlook::OlTextAlign _OlkLabel::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkLabel::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline bool _OlkLabel::UseHeaderColor() const
{
    QVariant qax_result = property("UseHeaderColor");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkLabel::SetUseHeaderColor(bool value){ setProperty("UseHeaderColor", QVariant(value)); }

inline QVariant _OlkLabel::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkLabel::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool _OlkLabel::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkLabel::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString OlkLabel::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkLabel::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline bool OlkLabel::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkLabel::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QColor OlkLabel::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkLabel::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkLabel::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkLabel::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline Outlook::OlBorderStyle OlkLabel::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void OlkLabel::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline QString OlkLabel::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkLabel::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool OlkLabel::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkLabel::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkLabel::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkLabel::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkLabel::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap OlkLabel::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkLabel::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkLabel::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkLabel::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline Outlook::OlTextAlign OlkLabel::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkLabel::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline bool OlkLabel::UseHeaderColor() const
{
    QVariant qax_result = property("UseHeaderColor");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkLabel::SetUseHeaderColor(bool value){ setProperty("UseHeaderColor", QVariant(value)); }

inline QVariant OlkLabel::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkLabel::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool OlkLabel::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkLabel::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString _OlkCommandButton::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkCommandButton::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline bool _OlkCommandButton::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCommandButton::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QString _OlkCommandButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkCommandButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool _OlkCommandButton::DisplayDropArrow() const
{
    QVariant qax_result = property("DisplayDropArrow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCommandButton::SetDisplayDropArrow(bool value){ setProperty("DisplayDropArrow", QVariant(value)); }

inline bool _OlkCommandButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCommandButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkCommandButton::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QPixmap _OlkCommandButton::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkCommandButton::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkCommandButton::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkCommandButton::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QPixmap _OlkCommandButton::Picture() const
{
    QVariant qax_result = property("Picture");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkCommandButton::SetPicture(const QPixmap& value){ setProperty("Picture", QVariant(value)); }

inline Outlook::OlPictureAlignment _OlkCommandButton::PictureAlignment() const
{
    QVariant qax_result = property("PictureAlignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPictureAlignment*)qax_result.constData();
}
inline void _OlkCommandButton::SetPictureAlignment(Outlook::OlPictureAlignment value){ setProperty("PictureAlignment", QVariant(value)); }

inline Outlook::OlTextAlign _OlkCommandButton::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkCommandButton::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline bool _OlkCommandButton::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCommandButton::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString OlkCommandButton::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkCommandButton::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline bool OlkCommandButton::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCommandButton::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QString OlkCommandButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkCommandButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool OlkCommandButton::DisplayDropArrow() const
{
    QVariant qax_result = property("DisplayDropArrow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCommandButton::SetDisplayDropArrow(bool value){ setProperty("DisplayDropArrow", QVariant(value)); }

inline bool OlkCommandButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCommandButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkCommandButton::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QPixmap OlkCommandButton::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkCommandButton::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkCommandButton::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkCommandButton::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QPixmap OlkCommandButton::Picture() const
{
    QVariant qax_result = property("Picture");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkCommandButton::SetPicture(const QPixmap& value){ setProperty("Picture", QVariant(value)); }

inline Outlook::OlPictureAlignment OlkCommandButton::PictureAlignment() const
{
    QVariant qax_result = property("PictureAlignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPictureAlignment*)qax_result.constData();
}
inline void OlkCommandButton::SetPictureAlignment(Outlook::OlPictureAlignment value){ setProperty("PictureAlignment", QVariant(value)); }

inline Outlook::OlTextAlign OlkCommandButton::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkCommandButton::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline bool OlkCommandButton::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCommandButton::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString _OlkCheckBox::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkCheckBox::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline Outlook::OlAlignment _OlkCheckBox::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void _OlkCheckBox::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QColor _OlkCheckBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkCheckBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkCheckBox::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkCheckBox::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QString _OlkCheckBox::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkCheckBox::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool _OlkCheckBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCheckBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkCheckBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkCheckBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkCheckBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap _OlkCheckBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkCheckBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkCheckBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkCheckBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool _OlkCheckBox::TripleState() const
{
    QVariant qax_result = property("TripleState");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCheckBox::SetTripleState(bool value){ setProperty("TripleState", QVariant(value)); }

inline QVariant _OlkCheckBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkCheckBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool _OlkCheckBox::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCheckBox::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString OlkCheckBox::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkCheckBox::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline Outlook::OlAlignment OlkCheckBox::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void OlkCheckBox::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QColor OlkCheckBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkCheckBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkCheckBox::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkCheckBox::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QString OlkCheckBox::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkCheckBox::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool OlkCheckBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCheckBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkCheckBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkCheckBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkCheckBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap OlkCheckBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkCheckBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkCheckBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkCheckBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool OlkCheckBox::TripleState() const
{
    QVariant qax_result = property("TripleState");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCheckBox::SetTripleState(bool value){ setProperty("TripleState", QVariant(value)); }

inline QVariant OlkCheckBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkCheckBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool OlkCheckBox::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCheckBox::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString _OlkOptionButton::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkOptionButton::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline Outlook::OlAlignment _OlkOptionButton::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void _OlkOptionButton::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QColor _OlkOptionButton::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkOptionButton::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkOptionButton::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkOptionButton::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QString _OlkOptionButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkOptionButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool _OlkOptionButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkOptionButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkOptionButton::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkOptionButton::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkOptionButton::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QString _OlkOptionButton::GroupName() const
{
    QVariant qax_result = property("GroupName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkOptionButton::SetGroupName(const QString& value){ setProperty("GroupName", QVariant(value)); }

inline QPixmap _OlkOptionButton::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkOptionButton::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkOptionButton::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkOptionButton::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QVariant _OlkOptionButton::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkOptionButton::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool _OlkOptionButton::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkOptionButton::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline QString OlkOptionButton::Accelerator() const
{
    QVariant qax_result = property("Accelerator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkOptionButton::SetAccelerator(const QString& value){ setProperty("Accelerator", QVariant(value)); }

inline Outlook::OlAlignment OlkOptionButton::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void OlkOptionButton::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QColor OlkOptionButton::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkOptionButton::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkOptionButton::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkOptionButton::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QString OlkOptionButton::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkOptionButton::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool OlkOptionButton::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkOptionButton::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkOptionButton::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkOptionButton::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkOptionButton::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QString OlkOptionButton::GroupName() const
{
    QVariant qax_result = property("GroupName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkOptionButton::SetGroupName(const QString& value){ setProperty("GroupName", QVariant(value)); }

inline QPixmap OlkOptionButton::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkOptionButton::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkOptionButton::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkOptionButton::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QVariant OlkOptionButton::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkOptionButton::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline bool OlkOptionButton::WordWrap() const
{
    QVariant qax_result = property("WordWrap");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkOptionButton::SetWordWrap(bool value){ setProperty("WordWrap", QVariant(value)); }


inline bool _OlkComboBox::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool _OlkComboBox::AutoTab() const
{
    QVariant qax_result = property("AutoTab");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetAutoTab(bool value){ setProperty("AutoTab", QVariant(value)); }

inline bool _OlkComboBox::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor _OlkComboBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkComboBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle _OlkComboBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void _OlkComboBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline Outlook::OlDragBehavior _OlkComboBox::DragBehavior() const
{
    QVariant qax_result = property("DragBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDragBehavior*)qax_result.constData();
}
inline void _OlkComboBox::SetDragBehavior(Outlook::OlDragBehavior value){ setProperty("DragBehavior", QVariant(value)); }

inline bool _OlkComboBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior _OlkComboBox::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void _OlkComboBox::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* _OlkComboBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkComboBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkComboBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool _OlkComboBox::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline int _OlkComboBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _OlkComboBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkComboBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline bool _OlkComboBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline int _OlkComboBox::MaxLength() const
{
    QVariant qax_result = property("MaxLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkComboBox::SetMaxLength(int value){ setProperty("MaxLength", QVariant(value)); }

inline QPixmap _OlkComboBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkComboBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkComboBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkComboBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int _OlkComboBox::SelLength() const
{
    QVariant qax_result = property("SelLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkComboBox::SetSelLength(int value){ setProperty("SelLength", QVariant(value)); }

inline int _OlkComboBox::SelStart() const
{
    QVariant qax_result = property("SelStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkComboBox::SetSelStart(int value){ setProperty("SelStart", QVariant(value)); }

inline QString _OlkComboBox::SelText() const
{
    QVariant qax_result = property("SelText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _OlkComboBox::SelectionMargin() const
{
    QVariant qax_result = property("SelectionMargin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkComboBox::SetSelectionMargin(bool value){ setProperty("SelectionMargin", QVariant(value)); }

inline Outlook::OlComboBoxStyle _OlkComboBox::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlComboBoxStyle*)qax_result.constData();
}
inline void _OlkComboBox::SetStyle(Outlook::OlComboBoxStyle value){ setProperty("Style", QVariant(value)); }

inline QString _OlkComboBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkComboBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign _OlkComboBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkComboBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline int _OlkComboBox::TopIndex() const
{
    QVariant qax_result = property("TopIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkComboBox::SetTopIndex(int value){ setProperty("TopIndex", QVariant(value)); }

inline QVariant _OlkComboBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkComboBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void _OlkComboBox::AddItem(const QString& ItemText)
{
    void *_a[] = {0, (void*)&ItemText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _OlkComboBox::AddItem(const QString& ItemText, const QVariant& Index)
{
    void *_a[] = {0, (void*)&ItemText, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _OlkComboBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _OlkComboBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _OlkComboBox::Cut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _OlkComboBox::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline QString _OlkComboBox::GetItem(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _OlkComboBox::Paste()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _OlkComboBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _OlkComboBox::SetItem(int Index, const QString& Item)
{
    void *_a[] = {0, (void*)&Index, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}


inline bool OlkComboBox::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool OlkComboBox::AutoTab() const
{
    QVariant qax_result = property("AutoTab");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetAutoTab(bool value){ setProperty("AutoTab", QVariant(value)); }

inline bool OlkComboBox::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor OlkComboBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkComboBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle OlkComboBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void OlkComboBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline Outlook::OlDragBehavior OlkComboBox::DragBehavior() const
{
    QVariant qax_result = property("DragBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDragBehavior*)qax_result.constData();
}
inline void OlkComboBox::SetDragBehavior(Outlook::OlDragBehavior value){ setProperty("DragBehavior", QVariant(value)); }

inline bool OlkComboBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior OlkComboBox::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void OlkComboBox::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* OlkComboBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkComboBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkComboBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool OlkComboBox::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline int OlkComboBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OlkComboBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkComboBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline bool OlkComboBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline int OlkComboBox::MaxLength() const
{
    QVariant qax_result = property("MaxLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkComboBox::SetMaxLength(int value){ setProperty("MaxLength", QVariant(value)); }

inline QPixmap OlkComboBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkComboBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkComboBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkComboBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int OlkComboBox::SelLength() const
{
    QVariant qax_result = property("SelLength");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkComboBox::SetSelLength(int value){ setProperty("SelLength", QVariant(value)); }

inline int OlkComboBox::SelStart() const
{
    QVariant qax_result = property("SelStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkComboBox::SetSelStart(int value){ setProperty("SelStart", QVariant(value)); }

inline QString OlkComboBox::SelText() const
{
    QVariant qax_result = property("SelText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool OlkComboBox::SelectionMargin() const
{
    QVariant qax_result = property("SelectionMargin");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkComboBox::SetSelectionMargin(bool value){ setProperty("SelectionMargin", QVariant(value)); }

inline Outlook::OlComboBoxStyle OlkComboBox::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlComboBoxStyle*)qax_result.constData();
}
inline void OlkComboBox::SetStyle(Outlook::OlComboBoxStyle value){ setProperty("Style", QVariant(value)); }

inline QString OlkComboBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkComboBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign OlkComboBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkComboBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline int OlkComboBox::TopIndex() const
{
    QVariant qax_result = property("TopIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkComboBox::SetTopIndex(int value){ setProperty("TopIndex", QVariant(value)); }

inline QVariant OlkComboBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkComboBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void OlkComboBox::AddItem(const QString& ItemText)
{
    void *_a[] = {0, (void*)&ItemText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void OlkComboBox::AddItem(const QString& ItemText, const QVariant& Index)
{
    void *_a[] = {0, (void*)&ItemText, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void OlkComboBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void OlkComboBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void OlkComboBox::Cut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void OlkComboBox::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline QString OlkComboBox::GetItem(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline void OlkComboBox::Paste()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline void OlkComboBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}

inline void OlkComboBox::SetItem(int Index, const QString& Item)
{
    void *_a[] = {0, (void*)&Index, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
}


inline QColor _OlkListBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkListBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle _OlkListBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void _OlkListBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline bool _OlkListBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkListBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkListBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkListBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkListBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline int _OlkListBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _OlkListBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkListBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline bool _OlkListBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkListBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline Outlook::OlMatchEntry _OlkListBox::MatchEntry() const
{
    QVariant qax_result = property("MatchEntry");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMatchEntry*)qax_result.constData();
}
inline void _OlkListBox::SetMatchEntry(Outlook::OlMatchEntry value){ setProperty("MatchEntry", QVariant(value)); }

inline QPixmap _OlkListBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkListBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkListBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkListBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline Outlook::OlMultiSelect _OlkListBox::MultiSelect() const
{
    QVariant qax_result = property("MultiSelect");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMultiSelect*)qax_result.constData();
}
inline void _OlkListBox::SetMultiSelect(Outlook::OlMultiSelect value){ setProperty("MultiSelect", QVariant(value)); }

inline QString _OlkListBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkListBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign _OlkListBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkListBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline int _OlkListBox::TopIndex() const
{
    QVariant qax_result = property("TopIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkListBox::SetTopIndex(int value){ setProperty("TopIndex", QVariant(value)); }

inline QVariant _OlkListBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkListBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void _OlkListBox::AddItem(const QString& ItemText)
{
    void *_a[] = {0, (void*)&ItemText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _OlkListBox::AddItem(const QString& ItemText, const QVariant& Index)
{
    void *_a[] = {0, (void*)&ItemText, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _OlkListBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _OlkListBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline QString _OlkListBox::GetItem(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool _OlkListBox::GetSelected(int Index)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _OlkListBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _OlkListBox::SetItem(int Index, const QString& Item)
{
    void *_a[] = {0, (void*)&Index, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _OlkListBox::SetSelected(int Index, bool Selected)
{
    void *_a[] = {0, (void*)&Index, (void*)&Selected};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}


inline QColor OlkListBox::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkListBox::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBorderStyle OlkListBox::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void OlkListBox::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline bool OlkListBox::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkListBox::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkListBox::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkListBox::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkListBox::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline int OlkListBox::ListCount() const
{
    QVariant qax_result = property("ListCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OlkListBox::ListIndex() const
{
    QVariant qax_result = property("ListIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkListBox::SetListIndex(int value){ setProperty("ListIndex", QVariant(value)); }

inline bool OlkListBox::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkListBox::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline Outlook::OlMatchEntry OlkListBox::MatchEntry() const
{
    QVariant qax_result = property("MatchEntry");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMatchEntry*)qax_result.constData();
}
inline void OlkListBox::SetMatchEntry(Outlook::OlMatchEntry value){ setProperty("MatchEntry", QVariant(value)); }

inline QPixmap OlkListBox::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkListBox::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkListBox::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkListBox::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline Outlook::OlMultiSelect OlkListBox::MultiSelect() const
{
    QVariant qax_result = property("MultiSelect");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMultiSelect*)qax_result.constData();
}
inline void OlkListBox::SetMultiSelect(Outlook::OlMultiSelect value){ setProperty("MultiSelect", QVariant(value)); }

inline QString OlkListBox::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkListBox::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign OlkListBox::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkListBox::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline int OlkListBox::TopIndex() const
{
    QVariant qax_result = property("TopIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkListBox::SetTopIndex(int value){ setProperty("TopIndex", QVariant(value)); }

inline QVariant OlkListBox::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkListBox::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void OlkListBox::AddItem(const QString& ItemText)
{
    void *_a[] = {0, (void*)&ItemText};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void OlkListBox::AddItem(const QString& ItemText, const QVariant& Index)
{
    void *_a[] = {0, (void*)&ItemText, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void OlkListBox::Clear()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void OlkListBox::Copy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline QString OlkListBox::GetItem(int Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline bool OlkListBox::GetSelected(int Index)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline void OlkListBox::RemoveItem(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void OlkListBox::SetItem(int Index, const QString& Item)
{
    void *_a[] = {0, (void*)&Index, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}

inline void OlkListBox::SetSelected(int Index, bool Selected)
{
    void *_a[] = {0, (void*)&Index, (void*)&Selected};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
}


inline QPixmap _OlkInfoBar::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkInfoBar::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkInfoBar::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkInfoBar::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline QPixmap OlkInfoBar::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkInfoBar::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkInfoBar::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkInfoBar::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline bool _OlkContactPhoto::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkContactPhoto::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QPixmap _OlkContactPhoto::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkContactPhoto::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkContactPhoto::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkContactPhoto::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline bool OlkContactPhoto::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkContactPhoto::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QPixmap OlkContactPhoto::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkContactPhoto::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkContactPhoto::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkContactPhoto::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline QPixmap _OlkBusinessCardControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkBusinessCardControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkBusinessCardControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkBusinessCardControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline QPixmap OlkBusinessCardControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkBusinessCardControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkBusinessCardControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkBusinessCardControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline Outlook::OlPageType _OlkPageControl::Page() const
{
    QVariant qax_result = property("Page");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPageType*)qax_result.constData();
}
inline void _OlkPageControl::SetPage(Outlook::OlPageType value){ setProperty("Page", QVariant(value)); }


inline Outlook::OlPageType OlkPageControl::Page() const
{
    QVariant qax_result = property("Page");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPageType*)qax_result.constData();
}
inline void OlkPageControl::SetPage(Outlook::OlPageType value){ setProperty("Page", QVariant(value)); }


inline bool _OlkDateControl::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool _OlkDateControl::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor _OlkDateControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkDateControl::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkDateControl::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkDateControl::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QDateTime _OlkDateControl::Date() const
{
    QVariant qax_result = property("Date");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _OlkDateControl::SetDate(const QDateTime& value){ setProperty("Date", QVariant(value)); }

inline bool _OlkDateControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior _OlkDateControl::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void _OlkDateControl::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* _OlkDateControl::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkDateControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkDateControl::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool _OlkDateControl::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline bool _OlkDateControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap _OlkDateControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkDateControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkDateControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkDateControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool _OlkDateControl::ShowNoneButton() const
{
    QVariant qax_result = property("ShowNoneButton");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkDateControl::SetShowNoneButton(bool value){ setProperty("ShowNoneButton", QVariant(value)); }

inline QString _OlkDateControl::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkDateControl::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign _OlkDateControl::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkDateControl::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QVariant _OlkDateControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkDateControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void _OlkDateControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline bool OlkDateControl::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool OlkDateControl::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor OlkDateControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkDateControl::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkDateControl::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkDateControl::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline QDateTime OlkDateControl::Date() const
{
    QVariant qax_result = property("Date");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void OlkDateControl::SetDate(const QDateTime& value){ setProperty("Date", QVariant(value)); }

inline bool OlkDateControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior OlkDateControl::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void OlkDateControl::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* OlkDateControl::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkDateControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkDateControl::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool OlkDateControl::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline bool OlkDateControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap OlkDateControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkDateControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkDateControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkDateControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline bool OlkDateControl::ShowNoneButton() const
{
    QVariant qax_result = property("ShowNoneButton");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkDateControl::SetShowNoneButton(bool value){ setProperty("ShowNoneButton", QVariant(value)); }

inline QString OlkDateControl::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkDateControl::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign OlkDateControl::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkDateControl::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QVariant OlkDateControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkDateControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void OlkDateControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}


inline bool _OlkTimeControl::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeControl::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool _OlkTimeControl::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeControl::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor _OlkTimeControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkTimeControl::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkTimeControl::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkTimeControl::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline bool _OlkTimeControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior _OlkTimeControl::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void _OlkTimeControl::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* _OlkTimeControl::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkTimeControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkTimeControl::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool _OlkTimeControl::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeControl::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline QDateTime _OlkTimeControl::IntervalTime() const
{
    QVariant qax_result = property("IntervalTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _OlkTimeControl::SetIntervalTime(const QDateTime& value){ setProperty("IntervalTime", QVariant(value)); }

inline bool _OlkTimeControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap _OlkTimeControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkTimeControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkTimeControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkTimeControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QDateTime _OlkTimeControl::ReferenceTime() const
{
    QVariant qax_result = property("ReferenceTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _OlkTimeControl::SetReferenceTime(const QDateTime& value){ setProperty("ReferenceTime", QVariant(value)); }

inline Outlook::OlTimeStyle _OlkTimeControl::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTimeStyle*)qax_result.constData();
}
inline void _OlkTimeControl::SetStyle(Outlook::OlTimeStyle value){ setProperty("Style", QVariant(value)); }

inline QString _OlkTimeControl::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkTimeControl::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign _OlkTimeControl::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void _OlkTimeControl::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QDateTime _OlkTimeControl::Time() const
{
    QVariant qax_result = property("Time");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _OlkTimeControl::SetTime(const QDateTime& value){ setProperty("Time", QVariant(value)); }

inline QVariant _OlkTimeControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkTimeControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void _OlkTimeControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline bool OlkTimeControl::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeControl::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline bool OlkTimeControl::AutoWordSelect() const
{
    QVariant qax_result = property("AutoWordSelect");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeControl::SetAutoWordSelect(bool value){ setProperty("AutoWordSelect", QVariant(value)); }

inline QColor OlkTimeControl::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkTimeControl::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkTimeControl::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkTimeControl::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline bool OlkTimeControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlEnterFieldBehavior OlkTimeControl::EnterFieldBehavior() const
{
    QVariant qax_result = property("EnterFieldBehavior");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEnterFieldBehavior*)qax_result.constData();
}
inline void OlkTimeControl::SetEnterFieldBehavior(Outlook::OlEnterFieldBehavior value){ setProperty("EnterFieldBehavior", QVariant(value)); }

inline stdole::Font* OlkTimeControl::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkTimeControl::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkTimeControl::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline bool OlkTimeControl::HideSelection() const
{
    QVariant qax_result = property("HideSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeControl::SetHideSelection(bool value){ setProperty("HideSelection", QVariant(value)); }

inline QDateTime OlkTimeControl::IntervalTime() const
{
    QVariant qax_result = property("IntervalTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void OlkTimeControl::SetIntervalTime(const QDateTime& value){ setProperty("IntervalTime", QVariant(value)); }

inline bool OlkTimeControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap OlkTimeControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkTimeControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkTimeControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkTimeControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline QDateTime OlkTimeControl::ReferenceTime() const
{
    QVariant qax_result = property("ReferenceTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void OlkTimeControl::SetReferenceTime(const QDateTime& value){ setProperty("ReferenceTime", QVariant(value)); }

inline Outlook::OlTimeStyle OlkTimeControl::Style() const
{
    QVariant qax_result = property("Style");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTimeStyle*)qax_result.constData();
}
inline void OlkTimeControl::SetStyle(Outlook::OlTimeStyle value){ setProperty("Style", QVariant(value)); }

inline QString OlkTimeControl::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkTimeControl::SetText(const QString& value){ setProperty("Text", QVariant(value)); }

inline Outlook::OlTextAlign OlkTimeControl::TextAlign() const
{
    QVariant qax_result = property("TextAlign");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTextAlign*)qax_result.constData();
}
inline void OlkTimeControl::SetTextAlign(Outlook::OlTextAlign value){ setProperty("TextAlign", QVariant(value)); }

inline QDateTime OlkTimeControl::Time() const
{
    QVariant qax_result = property("Time");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void OlkTimeControl::SetTime(const QDateTime& value){ setProperty("Time", QVariant(value)); }

inline QVariant OlkTimeControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkTimeControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void OlkTimeControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}


inline bool _OlkCategory::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCategory::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QColor _OlkCategory::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkCategory::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle _OlkCategory::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void _OlkCategory::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline bool _OlkCategory::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkCategory::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QColor _OlkCategory::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkCategory::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap _OlkCategory::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkCategory::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkCategory::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkCategory::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline bool OlkCategory::AutoSize() const
{
    QVariant qax_result = property("AutoSize");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCategory::SetAutoSize(bool value){ setProperty("AutoSize", QVariant(value)); }

inline QColor OlkCategory::BackColor() const
{
    QVariant qax_result = property("BackColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkCategory::SetBackColor(const QColor& value){ setProperty("BackColor", QVariant(value)); }

inline Outlook::OlBackStyle OlkCategory::BackStyle() const
{
    QVariant qax_result = property("BackStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBackStyle*)qax_result.constData();
}
inline void OlkCategory::SetBackStyle(Outlook::OlBackStyle value){ setProperty("BackStyle", QVariant(value)); }

inline bool OlkCategory::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkCategory::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QColor OlkCategory::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkCategory::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap OlkCategory::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkCategory::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkCategory::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkCategory::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline Outlook::OlAlignment _OlkFrameHeader::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void _OlkFrameHeader::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QString _OlkFrameHeader::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _OlkFrameHeader::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool _OlkFrameHeader::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkFrameHeader::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* _OlkFrameHeader::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor _OlkFrameHeader::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void _OlkFrameHeader::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap _OlkFrameHeader::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkFrameHeader::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkFrameHeader::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkFrameHeader::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline Outlook::OlAlignment OlkFrameHeader::Alignment() const
{
    QVariant qax_result = property("Alignment");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlignment*)qax_result.constData();
}
inline void OlkFrameHeader::SetAlignment(Outlook::OlAlignment value){ setProperty("Alignment", QVariant(value)); }

inline QString OlkFrameHeader::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OlkFrameHeader::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline bool OlkFrameHeader::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkFrameHeader::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline stdole::Font* OlkFrameHeader::Font() const
{
#ifdef QAX_DUMPCPP_STDOLE_H
    stdole::Font* qax_pointer = 0;
    qRegisterMetaType<stdole::Font*>("stdole::Font*", &qax_pointer);
    qRegisterMetaType<stdole::Font>("stdole::Font", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(stdole::Font**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QColor OlkFrameHeader::ForeColor() const
{
    QVariant qax_result = property("ForeColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}
inline void OlkFrameHeader::SetForeColor(const QColor& value){ setProperty("ForeColor", QVariant(value)); }

inline QPixmap OlkFrameHeader::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkFrameHeader::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkFrameHeader::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkFrameHeader::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }


inline bool _OlkSenderPhoto::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkSenderPhoto::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QPixmap _OlkSenderPhoto::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkSenderPhoto::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkSenderPhoto::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkSenderPhoto::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int _OlkSenderPhoto::PreferredHeight() const
{
    QVariant qax_result = property("PreferredHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _OlkSenderPhoto::PreferredWidth() const
{
    QVariant qax_result = property("PreferredWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}


inline bool OlkSenderPhoto::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkSenderPhoto::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QPixmap OlkSenderPhoto::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkSenderPhoto::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkSenderPhoto::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkSenderPhoto::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int OlkSenderPhoto::PreferredHeight() const
{
    QVariant qax_result = property("PreferredHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int OlkSenderPhoto::PreferredWidth() const
{
    QVariant qax_result = property("PreferredWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}


inline Outlook::_Application* _TimeZone::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline int _TimeZone::Bias() const
{
    QVariant qax_result = property("Bias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlObjectClass _TimeZone::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _TimeZone::DaylightBias() const
{
    QVariant qax_result = property("DaylightBias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _TimeZone::DaylightDate() const
{
    QVariant qax_result = property("DaylightDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _TimeZone::DaylightDesignation() const
{
    QVariant qax_result = property("DaylightDesignation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TimeZone::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TimeZone::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _TimeZone::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _TimeZone::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TimeZone::StandardBias() const
{
    QVariant qax_result = property("StandardBias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _TimeZone::StandardDate() const
{
    QVariant qax_result = property("StandardDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _TimeZone::StandardDesignation() const
{
    QVariant qax_result = property("StandardDesignation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline Office::AnswerWizard* _Application::AnswerWizard() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::AnswerWizard* qax_pointer = 0;
    qRegisterMetaType<Office::AnswerWizard*>("Office::AnswerWizard*", &qax_pointer);
    qRegisterMetaType<Office::AnswerWizard>("Office::AnswerWizard", qax_pointer);
    QVariant qax_result = property("AnswerWizard");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::AnswerWizard**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Outlook::_Application* _Application::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Office::IAssistance* _Application::Assistance() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::IAssistance* qax_pointer = 0;
    qRegisterMetaType<Office::IAssistance*>("Office::IAssistance*", &qax_pointer);
    qRegisterMetaType<Office::IAssistance>("Office::IAssistance", qax_pointer);
    QVariant qax_result = property("Assistance");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IAssistance**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::Assistant* _Application::Assistant() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::Assistant* qax_pointer = 0;
    qRegisterMetaType<Office::Assistant*>("Office::Assistant*", &qax_pointer);
    qRegisterMetaType<Office::Assistant>("Office::Assistant", qax_pointer);
    QVariant qax_result = property("Assistant");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Assistant**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::COMAddIns* _Application::COMAddIns() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::COMAddIns* qax_pointer = 0;
    qRegisterMetaType<Office::COMAddIns*>("Office::COMAddIns*", &qax_pointer);
    qRegisterMetaType<Office::COMAddIns>("Office::COMAddIns", qax_pointer);
    QVariant qax_result = property("COMAddIns");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::COMAddIns**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Outlook::OlObjectClass _Application::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::DataPrivacyOptions* _Application::DataPrivacyOptions() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::DataPrivacyOptions* qax_pointer = 0;
    qRegisterMetaType<Office::DataPrivacyOptions*>("Office::DataPrivacyOptions*", &qax_pointer);
    qRegisterMetaType<Office::DataPrivacyOptions>("Office::DataPrivacyOptions", qax_pointer);
    QVariant qax_result = property("DataPrivacyOptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DataPrivacyOptions**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString _Application::DefaultProfileName() const
{
    QVariant qax_result = property("DefaultProfileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Explorers* _Application::Explorers() const
{
    Outlook::_Explorers* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Explorers*>("_Explorers*", &qax_pointer);
    qRegisterMetaType<Outlook::_Explorers>("_Explorers", qax_pointer);
    QVariant qax_result = property("Explorers");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Explorers**)qax_result.constData();
}

inline Office::MsoFeatureInstall _Application::FeatureInstall() const
{
    QVariant qax_result = property("FeatureInstall");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFeatureInstall*)qax_result.constData();
}
inline void _Application::SetFeatureInstall(Office::MsoFeatureInstall value){ setProperty("FeatureInstall", QVariant(value)); }

inline Outlook::_Inspectors* _Application::Inspectors() const
{
    Outlook::_Inspectors* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspectors*>("_Inspectors*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspectors>("_Inspectors", qax_pointer);
    QVariant qax_result = property("Inspectors");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspectors**)qax_result.constData();
}

inline bool _Application::IsTrusted() const
{
    QVariant qax_result = property("IsTrusted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Office::LanguageSettings* _Application::LanguageSettings() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::LanguageSettings* qax_pointer = 0;
    qRegisterMetaType<Office::LanguageSettings*>("Office::LanguageSettings*", &qax_pointer);
    qRegisterMetaType<Office::LanguageSettings>("Office::LanguageSettings", qax_pointer);
    QVariant qax_result = property("LanguageSettings");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::LanguageSettings**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::MsoDebugOptions* _Application::MsoDebugOptions() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::MsoDebugOptions* qax_pointer = 0;
    qRegisterMetaType<Office::MsoDebugOptions*>("Office::MsoDebugOptions*", &qax_pointer);
    qRegisterMetaType<Office::MsoDebugOptions>("Office::MsoDebugOptions", qax_pointer);
    QVariant qax_result = property("MsoDebugOptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoDebugOptions**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString _Application::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _Application::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::PickerDialog* _Application::PickerDialog() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::PickerDialog* qax_pointer = 0;
    qRegisterMetaType<Office::PickerDialog*>("Office::PickerDialog*", &qax_pointer);
    qRegisterMetaType<Office::PickerDialog>("Office::PickerDialog", qax_pointer);
    QVariant qax_result = property("PickerDialog");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::PickerDialog**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString _Application::ProductCode() const
{
    QVariant qax_result = property("ProductCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Reminders* _Application::Reminders() const
{
    Outlook::_Reminders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Reminders*>("_Reminders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Reminders>("_Reminders", qax_pointer);
    QVariant qax_result = property("Reminders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Reminders**)qax_result.constData();
}

inline Outlook::_NameSpace* _Application::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::TimeZones* _Application::TimeZones() const
{
    Outlook::TimeZones* qax_pointer = 0;
    qRegisterMetaType<Outlook::TimeZones*>("TimeZones*", &qax_pointer);
    qRegisterMetaType<Outlook::TimeZones>("TimeZones", qax_pointer);
    QVariant qax_result = property("TimeZones");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TimeZones**)qax_result.constData();
}

inline QString _Application::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Explorer* _Application::ActiveExplorer()
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Inspector* _Application::ActiveInspector()
{
    Outlook::_Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_result);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline IDispatch* _Application::ActiveWindow()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Search* _Application::AdvancedSearch(const QString& Scope)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Search* _Application::AdvancedSearch(const QString& Scope, const QVariant& Filter)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::Search* _Application::AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter, (void*)&SearchSubFolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::Search* _Application::AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders, const QVariant& Tag)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter, (void*)&SearchSubFolders, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _Application::CopyFile(const QString& FilePath, const QString& DestFolderPath)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&FilePath, (void*)&DestFolderPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline IDispatch* _Application::CreateItem(Outlook::OlItemType ItemType)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&ItemType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline IDispatch* _Application::CreateItemFromTemplate(const QString& TemplatePath)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&TemplatePath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline IDispatch* _Application::CreateItemFromTemplate(const QString& TemplatePath, const QVariant& InFolder)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&TemplatePath, (void*)&InFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline IDispatch* _Application::CreateObject(const QString& ObjectName)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&ObjectName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::_NameSpace* _Application::GetNamespace(const QString& Type)
{
    Outlook::_NameSpace* qax_result = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_result);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void _Application::GetNewNickNames(QVariant& pvar)
{
    void *_a[] = {0, (void*)&pvar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline IDispatch* _Application::GetObjectReference(IDispatch* Item, Outlook::OlReferenceType ReferenceType)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Item, (void*)&ReferenceType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool _Application::IsSearchSynchronous(const QString& LookInFolders)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&LookInFolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void _Application::Quit()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _Application::RefreshFormRegionDefinition(const QString& RegionName)
{
    void *_a[] = {0, (void*)&RegionName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline Outlook::Accounts* _NameSpace::Accounts() const
{
    Outlook::Accounts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Accounts*>("Accounts*", &qax_pointer);
    qRegisterMetaType<Outlook::Accounts>("Accounts", qax_pointer);
    QVariant qax_result = property("Accounts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Accounts**)qax_result.constData();
}

inline Outlook::AddressLists* _NameSpace::AddressLists() const
{
    Outlook::AddressLists* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressLists*>("AddressLists*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressLists>("AddressLists", qax_pointer);
    QVariant qax_result = property("AddressLists");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressLists**)qax_result.constData();
}

inline Outlook::_Application* _NameSpace::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlAutoDiscoverConnectionMode _NameSpace::AutoDiscoverConnectionMode() const
{
    QVariant qax_result = property("AutoDiscoverConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoDiscoverConnectionMode*)qax_result.constData();
}

inline QString _NameSpace::AutoDiscoverXml() const
{
    QVariant qax_result = property("AutoDiscoverXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Categories* _NameSpace::Categories() const
{
    Outlook::Categories* qax_pointer = 0;
    qRegisterMetaType<Outlook::Categories*>("Categories*", &qax_pointer);
    qRegisterMetaType<Outlook::Categories>("Categories", qax_pointer);
    QVariant qax_result = property("Categories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Categories**)qax_result.constData();
}

inline Outlook::OlObjectClass _NameSpace::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _NameSpace::CurrentProfileName() const
{
    QVariant qax_result = property("CurrentProfileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipient* _NameSpace::CurrentUser() const
{
    Outlook::Recipient* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_pointer);
    QVariant qax_result = property("CurrentUser");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipient**)qax_result.constData();
}

inline Outlook::Store* _NameSpace::DefaultStore() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("DefaultStore");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline Outlook::OlExchangeConnectionMode _NameSpace::ExchangeConnectionMode() const
{
    QVariant qax_result = property("ExchangeConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeConnectionMode*)qax_result.constData();
}

inline QString _NameSpace::ExchangeMailboxServerName() const
{
    QVariant qax_result = property("ExchangeMailboxServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _NameSpace::ExchangeMailboxServerVersion() const
{
    QVariant qax_result = property("ExchangeMailboxServerVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Folders* _NameSpace::Folders() const
{
    Outlook::_Folders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Folders**)qax_result.constData();
}

inline IUnknown* _NameSpace::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline bool _NameSpace::Offline() const
{
    QVariant qax_result = property("Offline");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* _NameSpace::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NameSpace::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Stores* _NameSpace::Stores() const
{
    Outlook::Stores* qax_pointer = 0;
    qRegisterMetaType<Outlook::Stores*>("Stores*", &qax_pointer);
    qRegisterMetaType<Outlook::Stores>("Stores", qax_pointer);
    QVariant qax_result = property("Stores");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Stores**)qax_result.constData();
}

inline Outlook::SyncObjects* _NameSpace::SyncObjects() const
{
    Outlook::SyncObjects* qax_pointer = 0;
    qRegisterMetaType<Outlook::SyncObjects*>("SyncObjects*", &qax_pointer);
    qRegisterMetaType<Outlook::SyncObjects>("SyncObjects", qax_pointer);
    QVariant qax_result = property("SyncObjects");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SyncObjects**)qax_result.constData();
}

inline QString _NameSpace::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void _NameSpace::AddStore(const QVariant& Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _NameSpace::AddStoreEx(const QVariant& Store, Outlook::OlStoreType Type)
{
    void *_a[] = {0, (void*)&Store, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline bool _NameSpace::CompareEntryIDs(const QString& FirstEntryID, const QString& SecondEntryID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirstEntryID, (void*)&SecondEntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Office::ContactCard* _NameSpace::CreateContactCard(Outlook::AddressEntry* AddressEntry)
{
    Office::ContactCard* qax_result = 0;
#ifdef QAX_DUMPCPP_OFFICE_H
    qRegisterMetaType<Office::ContactCard*>("Office::ContactCard*", &qax_result);
    qRegisterMetaType<Office::ContactCard>("Office::ContactCard", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&AddressEntry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Recipient* _NameSpace::CreateRecipient(const QString& RecipientName)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&RecipientName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::SharingItem* _NameSpace::CreateSharingItem(const QVariant& Context)
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Context};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::SharingItem* _NameSpace::CreateSharingItem(const QVariant& Context, const QVariant& Provider)
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Context, (void*)&Provider};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _NameSpace::Dial()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _NameSpace::Dial(const QVariant& ContactItem)
{
    void *_a[] = {0, (void*)&ContactItem};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline Outlook::AddressEntry* _NameSpace::GetAddressEntryFromID(const QString& ID)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::GetDefaultFolder(Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::GetFolderFromID(const QString& EntryIDFolder)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::GetFolderFromID(const QString& EntryIDFolder, const QVariant& EntryIDStore)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDFolder, (void*)&EntryIDStore};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::AddressList* _NameSpace::GetGlobalAddressList()
{
    Outlook::AddressList* qax_result = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_result);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline IDispatch* _NameSpace::GetItemFromID(const QString& EntryIDItem)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDItem};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline IDispatch* _NameSpace::GetItemFromID(const QString& EntryIDItem, const QVariant& EntryIDStore)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDItem, (void*)&EntryIDStore};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline Outlook::Recipient* _NameSpace::GetRecipientFromID(const QString& EntryID)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline Outlook::SelectNamesDialog* _NameSpace::GetSelectNamesDialog()
{
    Outlook::SelectNamesDialog* qax_result = 0;
    qRegisterMetaType<Outlook::SelectNamesDialog*>("SelectNamesDialog*", &qax_result);
    qRegisterMetaType<Outlook::SelectNamesDialog>("SelectNamesDialog", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::GetSharedDefaultFolder(Outlook::Recipient* Recipient, Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Recipient, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline Outlook::Store* _NameSpace::GetStoreFromID(const QString& ID)
{
    Outlook::Store* qax_result = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_result);
    qRegisterMetaType<Outlook::Store>("Store", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void _NameSpace::Logoff()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _NameSpace::Logon()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void _NameSpace::Logon(const QVariant& Profile)
{
    void *_a[] = {0, (void*)&Profile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void _NameSpace::Logon(const QVariant& Profile, const QVariant& Password)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void _NameSpace::Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password, (void*)&ShowDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void _NameSpace::Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog, const QVariant& NewSession)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password, (void*)&ShowDialog, (void*)&NewSession};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline Outlook::MAPIFolder* _NameSpace::OpenSharedFolder(const QString& Path)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name, (void*)&DownloadAttachments};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments, const QVariant& UseTTL)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name, (void*)&DownloadAttachments, (void*)&UseTTL};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline IDispatch* _NameSpace::OpenSharedItem(const QString& Path)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _NameSpace::PickFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void _NameSpace::RefreshRemoteHeaders()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void _NameSpace::RemoveStore(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void _NameSpace::SendAndReceive(bool showProgressDialog)
{
    void *_a[] = {0, (void*)&showProgressDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}


inline QString Recipient::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::AddressEntry* Recipient::AddressEntry() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("AddressEntry");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}
inline void Recipient::SetAddressEntry(Outlook::AddressEntry* value){
    int typeId = qRegisterMetaType<Outlook::AddressEntry*>("Outlook::AddressEntry*", &value);
    setProperty("AddressEntry", QVariant(typeId, &value));
}

inline Outlook::_Application* Recipient::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString Recipient::AutoResponse() const
{
    QVariant qax_result = property("AutoResponse");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Recipient::SetAutoResponse(const QString& value){ setProperty("AutoResponse", QVariant(value)); }

inline Outlook::OlObjectClass Recipient::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlDisplayType Recipient::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString Recipient::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int Recipient::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlResponseStatus Recipient::MeetingResponseStatus() const
{
    QVariant qax_result = property("MeetingResponseStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlResponseStatus*)qax_result.constData();
}

inline QString Recipient::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Recipient::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* Recipient::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline bool Recipient::Resolved() const
{
    QVariant qax_result = property("Resolved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Recipient::Sendable() const
{
    QVariant qax_result = property("Sendable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Recipient::SetSendable(bool value){ setProperty("Sendable", QVariant(value)); }

inline Outlook::_NameSpace* Recipient::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlTrackingStatus Recipient::TrackingStatus() const
{
    QVariant qax_result = property("TrackingStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTrackingStatus*)qax_result.constData();
}
inline void Recipient::SetTrackingStatus(Outlook::OlTrackingStatus value){ setProperty("TrackingStatus", QVariant(value)); }

inline QDateTime Recipient::TrackingStatusTime() const
{
    QVariant qax_result = property("TrackingStatusTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void Recipient::SetTrackingStatusTime(const QDateTime& value){ setProperty("TrackingStatusTime", QVariant(value)); }

inline int Recipient::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Recipient::SetType(int value){ setProperty("Type", QVariant(value)); }

inline void Recipient::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString Recipient::FreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QString Recipient::FreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool Recipient::Resolve()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline QString AddressEntry::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AddressEntry::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline Outlook::OlAddressEntryUserType AddressEntry::AddressEntryUserType() const
{
    QVariant qax_result = property("AddressEntryUserType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressEntryUserType*)qax_result.constData();
}

inline Outlook::_Application* AddressEntry::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AddressEntry::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlDisplayType AddressEntry::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString AddressEntry::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IUnknown* AddressEntry::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void AddressEntry::SetMAPIOBJECT(IUnknown* value){
    int typeId = qRegisterMetaType<IUnknown*>("IUnknown*", &value);
    setProperty("MAPIOBJECT", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* AddressEntry::Manager() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Manager");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}

inline Outlook::AddressEntries* AddressEntry::Members() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline QString AddressEntry::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AddressEntry::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* AddressEntry::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* AddressEntry::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* AddressEntry::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString AddressEntry::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AddressEntry::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline void AddressEntry::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void AddressEntry::Details()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void AddressEntry::Details(const QVariant& HWnd)
{
    void *_a[] = {0, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Outlook::_ContactItem* AddressEntry::GetContact()
{
    Outlook::_ContactItem* qax_result = 0;
    qRegisterMetaType<Outlook::_ContactItem*>("_ContactItem*", &qax_result);
    qRegisterMetaType<Outlook::_ContactItem>("_ContactItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::ExchangeDistributionList* AddressEntry::GetExchangeDistributionList()
{
    Outlook::ExchangeDistributionList* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeDistributionList*>("ExchangeDistributionList*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeDistributionList>("ExchangeDistributionList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* AddressEntry::GetExchangeUser()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString AddressEntry::GetFreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString AddressEntry::GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void AddressEntry::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void AddressEntry::Update(const QVariant& MakePermanent)
{
    void *_a[] = {0, (void*)&MakePermanent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void AddressEntry::Update(const QVariant& MakePermanent, const QVariant& Refresh)
{
    void *_a[] = {0, (void*)&MakePermanent, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void AddressEntry::UpdateFreeBusy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}


inline Outlook::_Application* AddressEntries::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AddressEntries::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int AddressEntries::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* AddressEntries::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* AddressEntries::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* AddressEntries::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::AddressEntry* AddressEntries::Add(const QString& Type)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::Add(const QString& Type, const QVariant& Name)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::Add(const QString& Type, const QVariant& Name, const QVariant& Address)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type, (void*)&Name, (void*)&Address};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::GetFirst()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::GetLast()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::GetNext()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::GetPrevious()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AddressEntries::Item(const QVariant& Index)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void AddressEntries::Sort()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void AddressEntries::Sort(const QVariant& Property)
{
    void *_a[] = {0, (void*)&Property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void AddressEntries::Sort(const QVariant& Property, const QVariant& Order)
{
    void *_a[] = {0, (void*)&Property, (void*)&Order};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}


inline QString _ContactItem::Account() const
{
    QVariant qax_result = property("Account");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetAccount(const QString& value){ setProperty("Account", QVariant(value)); }

inline Outlook::Actions* _ContactItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline QDateTime _ContactItem::Anniversary() const
{
    QVariant qax_result = property("Anniversary");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetAnniversary(const QDateTime& value){ setProperty("Anniversary", QVariant(value)); }

inline Outlook::_Application* _ContactItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString _ContactItem::AssistantName() const
{
    QVariant qax_result = property("AssistantName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetAssistantName(const QString& value){ setProperty("AssistantName", QVariant(value)); }

inline QString _ContactItem::AssistantTelephoneNumber() const
{
    QVariant qax_result = property("AssistantTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetAssistantTelephoneNumber(const QString& value){ setProperty("AssistantTelephoneNumber", QVariant(value)); }

inline Outlook::Attachments* _ContactItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _ContactItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _ContactItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QDateTime _ContactItem::Birthday() const
{
    QVariant qax_result = property("Birthday");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetBirthday(const QDateTime& value){ setProperty("Birthday", QVariant(value)); }

inline QString _ContactItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _ContactItem::Business2TelephoneNumber() const
{
    QVariant qax_result = property("Business2TelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusiness2TelephoneNumber(const QString& value){ setProperty("Business2TelephoneNumber", QVariant(value)); }

inline QString _ContactItem::BusinessAddress() const
{
    QVariant qax_result = property("BusinessAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddress(const QString& value){ setProperty("BusinessAddress", QVariant(value)); }

inline QString _ContactItem::BusinessAddressCity() const
{
    QVariant qax_result = property("BusinessAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressCity(const QString& value){ setProperty("BusinessAddressCity", QVariant(value)); }

inline QString _ContactItem::BusinessAddressCountry() const
{
    QVariant qax_result = property("BusinessAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressCountry(const QString& value){ setProperty("BusinessAddressCountry", QVariant(value)); }

inline QString _ContactItem::BusinessAddressPostOfficeBox() const
{
    QVariant qax_result = property("BusinessAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressPostOfficeBox(const QString& value){ setProperty("BusinessAddressPostOfficeBox", QVariant(value)); }

inline QString _ContactItem::BusinessAddressPostalCode() const
{
    QVariant qax_result = property("BusinessAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressPostalCode(const QString& value){ setProperty("BusinessAddressPostalCode", QVariant(value)); }

inline QString _ContactItem::BusinessAddressState() const
{
    QVariant qax_result = property("BusinessAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressState(const QString& value){ setProperty("BusinessAddressState", QVariant(value)); }

inline QString _ContactItem::BusinessAddressStreet() const
{
    QVariant qax_result = property("BusinessAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessAddressStreet(const QString& value){ setProperty("BusinessAddressStreet", QVariant(value)); }

inline QString _ContactItem::BusinessCardLayoutXml() const
{
    QVariant qax_result = property("BusinessCardLayoutXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessCardLayoutXml(const QString& value){ setProperty("BusinessCardLayoutXml", QVariant(value)); }

inline Outlook::OlBusinessCardType _ContactItem::BusinessCardType() const
{
    QVariant qax_result = property("BusinessCardType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBusinessCardType*)qax_result.constData();
}

inline QString _ContactItem::BusinessFaxNumber() const
{
    QVariant qax_result = property("BusinessFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessFaxNumber(const QString& value){ setProperty("BusinessFaxNumber", QVariant(value)); }

inline QString _ContactItem::BusinessHomePage() const
{
    QVariant qax_result = property("BusinessHomePage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessHomePage(const QString& value){ setProperty("BusinessHomePage", QVariant(value)); }

inline QString _ContactItem::BusinessTelephoneNumber() const
{
    QVariant qax_result = property("BusinessTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetBusinessTelephoneNumber(const QString& value){ setProperty("BusinessTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::CallbackTelephoneNumber() const
{
    QVariant qax_result = property("CallbackTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCallbackTelephoneNumber(const QString& value){ setProperty("CallbackTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::CarTelephoneNumber() const
{
    QVariant qax_result = property("CarTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCarTelephoneNumber(const QString& value){ setProperty("CarTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline QString _ContactItem::Children() const
{
    QVariant qax_result = property("Children");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetChildren(const QString& value){ setProperty("Children", QVariant(value)); }

inline Outlook::OlObjectClass _ContactItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ContactItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline QString _ContactItem::CompanyAndFullName() const
{
    QVariant qax_result = property("CompanyAndFullName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::CompanyLastFirstNoSpace() const
{
    QVariant qax_result = property("CompanyLastFirstNoSpace");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::CompanyLastFirstSpaceOnly() const
{
    QVariant qax_result = property("CompanyLastFirstSpaceOnly");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::CompanyMainTelephoneNumber() const
{
    QVariant qax_result = property("CompanyMainTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCompanyMainTelephoneNumber(const QString& value){ setProperty("CompanyMainTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::CompanyName() const
{
    QVariant qax_result = property("CompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCompanyName(const QString& value){ setProperty("CompanyName", QVariant(value)); }

inline QString _ContactItem::ComputerNetworkName() const
{
    QVariant qax_result = property("ComputerNetworkName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetComputerNetworkName(const QString& value){ setProperty("ComputerNetworkName", QVariant(value)); }

inline Outlook::Conflicts* _ContactItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _ContactItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _ContactItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _ContactItem::CustomerID() const
{
    QVariant qax_result = property("CustomerID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetCustomerID(const QString& value){ setProperty("CustomerID", QVariant(value)); }

inline QString _ContactItem::Department() const
{
    QVariant qax_result = property("Department");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetDepartment(const QString& value){ setProperty("Department", QVariant(value)); }

inline Outlook::OlDownloadState _ContactItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _ContactItem::Email1Address() const
{
    QVariant qax_result = property("Email1Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail1Address(const QString& value){ setProperty("Email1Address", QVariant(value)); }

inline QString _ContactItem::Email1AddressType() const
{
    QVariant qax_result = property("Email1AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail1AddressType(const QString& value){ setProperty("Email1AddressType", QVariant(value)); }

inline QString _ContactItem::Email1DisplayName() const
{
    QVariant qax_result = property("Email1DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail1DisplayName(const QString& value){ setProperty("Email1DisplayName", QVariant(value)); }

inline QString _ContactItem::Email1EntryID() const
{
    QVariant qax_result = property("Email1EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::Email2Address() const
{
    QVariant qax_result = property("Email2Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail2Address(const QString& value){ setProperty("Email2Address", QVariant(value)); }

inline QString _ContactItem::Email2AddressType() const
{
    QVariant qax_result = property("Email2AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail2AddressType(const QString& value){ setProperty("Email2AddressType", QVariant(value)); }

inline QString _ContactItem::Email2DisplayName() const
{
    QVariant qax_result = property("Email2DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail2DisplayName(const QString& value){ setProperty("Email2DisplayName", QVariant(value)); }

inline QString _ContactItem::Email2EntryID() const
{
    QVariant qax_result = property("Email2EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::Email3Address() const
{
    QVariant qax_result = property("Email3Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail3Address(const QString& value){ setProperty("Email3Address", QVariant(value)); }

inline QString _ContactItem::Email3AddressType() const
{
    QVariant qax_result = property("Email3AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail3AddressType(const QString& value){ setProperty("Email3AddressType", QVariant(value)); }

inline QString _ContactItem::Email3DisplayName() const
{
    QVariant qax_result = property("Email3DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetEmail3DisplayName(const QString& value){ setProperty("Email3DisplayName", QVariant(value)); }

inline QString _ContactItem::Email3EntryID() const
{
    QVariant qax_result = property("Email3EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::FTPSite() const
{
    QVariant qax_result = property("FTPSite");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetFTPSite(const QString& value){ setProperty("FTPSite", QVariant(value)); }

inline QString _ContactItem::FileAs() const
{
    QVariant qax_result = property("FileAs");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetFileAs(const QString& value){ setProperty("FileAs", QVariant(value)); }

inline QString _ContactItem::FirstName() const
{
    QVariant qax_result = property("FirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetFirstName(const QString& value){ setProperty("FirstName", QVariant(value)); }

inline Outlook::FormDescription* _ContactItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline QString _ContactItem::FullName() const
{
    QVariant qax_result = property("FullName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetFullName(const QString& value){ setProperty("FullName", QVariant(value)); }

inline QString _ContactItem::FullNameAndCompany() const
{
    QVariant qax_result = property("FullNameAndCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlGender _ContactItem::Gender() const
{
    QVariant qax_result = property("Gender");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGender*)qax_result.constData();
}
inline void _ContactItem::SetGender(Outlook::OlGender value){ setProperty("Gender", QVariant(value)); }

inline Outlook::_Inspector* _ContactItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _ContactItem::GovernmentIDNumber() const
{
    QVariant qax_result = property("GovernmentIDNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetGovernmentIDNumber(const QString& value){ setProperty("GovernmentIDNumber", QVariant(value)); }

inline bool _ContactItem::HasPicture() const
{
    QVariant qax_result = property("HasPicture");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _ContactItem::Hobby() const
{
    QVariant qax_result = property("Hobby");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHobby(const QString& value){ setProperty("Hobby", QVariant(value)); }

inline QString _ContactItem::Home2TelephoneNumber() const
{
    QVariant qax_result = property("Home2TelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHome2TelephoneNumber(const QString& value){ setProperty("Home2TelephoneNumber", QVariant(value)); }

inline QString _ContactItem::HomeAddress() const
{
    QVariant qax_result = property("HomeAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddress(const QString& value){ setProperty("HomeAddress", QVariant(value)); }

inline QString _ContactItem::HomeAddressCity() const
{
    QVariant qax_result = property("HomeAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressCity(const QString& value){ setProperty("HomeAddressCity", QVariant(value)); }

inline QString _ContactItem::HomeAddressCountry() const
{
    QVariant qax_result = property("HomeAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressCountry(const QString& value){ setProperty("HomeAddressCountry", QVariant(value)); }

inline QString _ContactItem::HomeAddressPostOfficeBox() const
{
    QVariant qax_result = property("HomeAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressPostOfficeBox(const QString& value){ setProperty("HomeAddressPostOfficeBox", QVariant(value)); }

inline QString _ContactItem::HomeAddressPostalCode() const
{
    QVariant qax_result = property("HomeAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressPostalCode(const QString& value){ setProperty("HomeAddressPostalCode", QVariant(value)); }

inline QString _ContactItem::HomeAddressState() const
{
    QVariant qax_result = property("HomeAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressState(const QString& value){ setProperty("HomeAddressState", QVariant(value)); }

inline QString _ContactItem::HomeAddressStreet() const
{
    QVariant qax_result = property("HomeAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeAddressStreet(const QString& value){ setProperty("HomeAddressStreet", QVariant(value)); }

inline QString _ContactItem::HomeFaxNumber() const
{
    QVariant qax_result = property("HomeFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeFaxNumber(const QString& value){ setProperty("HomeFaxNumber", QVariant(value)); }

inline QString _ContactItem::HomeTelephoneNumber() const
{
    QVariant qax_result = property("HomeTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetHomeTelephoneNumber(const QString& value){ setProperty("HomeTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::IMAddress() const
{
    QVariant qax_result = property("IMAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetIMAddress(const QString& value){ setProperty("IMAddress", QVariant(value)); }

inline QString _ContactItem::ISDNNumber() const
{
    QVariant qax_result = property("ISDNNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetISDNNumber(const QString& value){ setProperty("ISDNNumber", QVariant(value)); }

inline Outlook::OlImportance _ContactItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _ContactItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline QString _ContactItem::Initials() const
{
    QVariant qax_result = property("Initials");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetInitials(const QString& value){ setProperty("Initials", QVariant(value)); }

inline QString _ContactItem::InternetFreeBusyAddress() const
{
    QVariant qax_result = property("InternetFreeBusyAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetInternetFreeBusyAddress(const QString& value){ setProperty("InternetFreeBusyAddress", QVariant(value)); }

inline bool _ContactItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _ContactItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _ContactItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QString _ContactItem::JobTitle() const
{
    QVariant qax_result = property("JobTitle");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetJobTitle(const QString& value){ setProperty("JobTitle", QVariant(value)); }

inline bool _ContactItem::Journal() const
{
    QVariant qax_result = property("Journal");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetJournal(bool value){ setProperty("Journal", QVariant(value)); }

inline QString _ContactItem::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline QString _ContactItem::LastFirstAndSuffix() const
{
    QVariant qax_result = property("LastFirstAndSuffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::LastFirstNoSpace() const
{
    QVariant qax_result = property("LastFirstNoSpace");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::LastFirstNoSpaceAndSuffix() const
{
    QVariant qax_result = property("LastFirstNoSpaceAndSuffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::LastFirstNoSpaceCompany() const
{
    QVariant qax_result = property("LastFirstNoSpaceCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::LastFirstSpaceOnly() const
{
    QVariant qax_result = property("LastFirstSpaceOnly");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::LastFirstSpaceOnlyCompany() const
{
    QVariant qax_result = property("LastFirstSpaceOnlyCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _ContactItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _ContactItem::LastName() const
{
    QVariant qax_result = property("LastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetLastName(const QString& value){ setProperty("LastName", QVariant(value)); }

inline QString _ContactItem::LastNameAndFirstName() const
{
    QVariant qax_result = property("LastNameAndFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Links* _ContactItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _ContactItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString _ContactItem::MailingAddress() const
{
    QVariant qax_result = property("MailingAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddress(const QString& value){ setProperty("MailingAddress", QVariant(value)); }

inline QString _ContactItem::MailingAddressCity() const
{
    QVariant qax_result = property("MailingAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressCity(const QString& value){ setProperty("MailingAddressCity", QVariant(value)); }

inline QString _ContactItem::MailingAddressCountry() const
{
    QVariant qax_result = property("MailingAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressCountry(const QString& value){ setProperty("MailingAddressCountry", QVariant(value)); }

inline QString _ContactItem::MailingAddressPostOfficeBox() const
{
    QVariant qax_result = property("MailingAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressPostOfficeBox(const QString& value){ setProperty("MailingAddressPostOfficeBox", QVariant(value)); }

inline QString _ContactItem::MailingAddressPostalCode() const
{
    QVariant qax_result = property("MailingAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressPostalCode(const QString& value){ setProperty("MailingAddressPostalCode", QVariant(value)); }

inline QString _ContactItem::MailingAddressState() const
{
    QVariant qax_result = property("MailingAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressState(const QString& value){ setProperty("MailingAddressState", QVariant(value)); }

inline QString _ContactItem::MailingAddressStreet() const
{
    QVariant qax_result = property("MailingAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMailingAddressStreet(const QString& value){ setProperty("MailingAddressStreet", QVariant(value)); }

inline QString _ContactItem::ManagerName() const
{
    QVariant qax_result = property("ManagerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetManagerName(const QString& value){ setProperty("ManagerName", QVariant(value)); }

inline Outlook::OlRemoteStatus _ContactItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _ContactItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _ContactItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _ContactItem::MiddleName() const
{
    QVariant qax_result = property("MiddleName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMiddleName(const QString& value){ setProperty("MiddleName", QVariant(value)); }

inline QString _ContactItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline QString _ContactItem::MobileTelephoneNumber() const
{
    QVariant qax_result = property("MobileTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetMobileTelephoneNumber(const QString& value){ setProperty("MobileTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::NetMeetingAlias() const
{
    QVariant qax_result = property("NetMeetingAlias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetNetMeetingAlias(const QString& value){ setProperty("NetMeetingAlias", QVariant(value)); }

inline QString _ContactItem::NetMeetingServer() const
{
    QVariant qax_result = property("NetMeetingServer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetNetMeetingServer(const QString& value){ setProperty("NetMeetingServer", QVariant(value)); }

inline QString _ContactItem::NickName() const
{
    QVariant qax_result = property("NickName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetNickName(const QString& value){ setProperty("NickName", QVariant(value)); }

inline bool _ContactItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QString _ContactItem::OfficeLocation() const
{
    QVariant qax_result = property("OfficeLocation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOfficeLocation(const QString& value){ setProperty("OfficeLocation", QVariant(value)); }

inline QString _ContactItem::OrganizationalIDNumber() const
{
    QVariant qax_result = property("OrganizationalIDNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOrganizationalIDNumber(const QString& value){ setProperty("OrganizationalIDNumber", QVariant(value)); }

inline QString _ContactItem::OtherAddress() const
{
    QVariant qax_result = property("OtherAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddress(const QString& value){ setProperty("OtherAddress", QVariant(value)); }

inline QString _ContactItem::OtherAddressCity() const
{
    QVariant qax_result = property("OtherAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressCity(const QString& value){ setProperty("OtherAddressCity", QVariant(value)); }

inline QString _ContactItem::OtherAddressCountry() const
{
    QVariant qax_result = property("OtherAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressCountry(const QString& value){ setProperty("OtherAddressCountry", QVariant(value)); }

inline QString _ContactItem::OtherAddressPostOfficeBox() const
{
    QVariant qax_result = property("OtherAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressPostOfficeBox(const QString& value){ setProperty("OtherAddressPostOfficeBox", QVariant(value)); }

inline QString _ContactItem::OtherAddressPostalCode() const
{
    QVariant qax_result = property("OtherAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressPostalCode(const QString& value){ setProperty("OtherAddressPostalCode", QVariant(value)); }

inline QString _ContactItem::OtherAddressState() const
{
    QVariant qax_result = property("OtherAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressState(const QString& value){ setProperty("OtherAddressState", QVariant(value)); }

inline QString _ContactItem::OtherAddressStreet() const
{
    QVariant qax_result = property("OtherAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherAddressStreet(const QString& value){ setProperty("OtherAddressStreet", QVariant(value)); }

inline QString _ContactItem::OtherFaxNumber() const
{
    QVariant qax_result = property("OtherFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherFaxNumber(const QString& value){ setProperty("OtherFaxNumber", QVariant(value)); }

inline QString _ContactItem::OtherTelephoneNumber() const
{
    QVariant qax_result = property("OtherTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetOtherTelephoneNumber(const QString& value){ setProperty("OtherTelephoneNumber", QVariant(value)); }

inline int _ContactItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _ContactItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ContactItem::PagerNumber() const
{
    QVariant qax_result = property("PagerNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetPagerNumber(const QString& value){ setProperty("PagerNumber", QVariant(value)); }

inline IDispatch* _ContactItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString _ContactItem::PersonalHomePage() const
{
    QVariant qax_result = property("PersonalHomePage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetPersonalHomePage(const QString& value){ setProperty("PersonalHomePage", QVariant(value)); }

inline QString _ContactItem::PrimaryTelephoneNumber() const
{
    QVariant qax_result = property("PrimaryTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetPrimaryTelephoneNumber(const QString& value){ setProperty("PrimaryTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::Profession() const
{
    QVariant qax_result = property("Profession");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetProfession(const QString& value){ setProperty("Profession", QVariant(value)); }

inline Outlook::PropertyAccessor* _ContactItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _ContactItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _ContactItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QString _ContactItem::RadioTelephoneNumber() const
{
    QVariant qax_result = property("RadioTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetRadioTelephoneNumber(const QString& value){ setProperty("RadioTelephoneNumber", QVariant(value)); }

inline QString _ContactItem::ReferredBy() const
{
    QVariant qax_result = property("ReferredBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetReferredBy(const QString& value){ setProperty("ReferredBy", QVariant(value)); }

inline bool _ContactItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _ContactItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _ContactItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _ContactItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _ContactItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool _ContactItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlMailingAddress _ContactItem::SelectedMailingAddress() const
{
    QVariant qax_result = property("SelectedMailingAddress");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMailingAddress*)qax_result.constData();
}
inline void _ContactItem::SetSelectedMailingAddress(Outlook::OlMailingAddress value){ setProperty("SelectedMailingAddress", QVariant(value)); }

inline Outlook::OlSensitivity _ContactItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _ContactItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _ContactItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _ContactItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _ContactItem::Spouse() const
{
    QVariant qax_result = property("Spouse");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetSpouse(const QString& value){ setProperty("Spouse", QVariant(value)); }

inline QString _ContactItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QString _ContactItem::Suffix() const
{
    QVariant qax_result = property("Suffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetSuffix(const QString& value){ setProperty("Suffix", QVariant(value)); }

inline QString _ContactItem::TTYTDDTelephoneNumber() const
{
    QVariant qax_result = property("TTYTDDTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetTTYTDDTelephoneNumber(const QString& value){ setProperty("TTYTDDTelephoneNumber", QVariant(value)); }

inline QDateTime _ContactItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime _ContactItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime _ContactItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString _ContactItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString _ContactItem::TelexNumber() const
{
    QVariant qax_result = property("TelexNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetTelexNumber(const QString& value){ setProperty("TelexNumber", QVariant(value)); }

inline QString _ContactItem::Title() const
{
    QVariant qax_result = property("Title");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetTitle(const QString& value){ setProperty("Title", QVariant(value)); }

inline QDateTime _ContactItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _ContactItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool _ContactItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline QString _ContactItem::User1() const
{
    QVariant qax_result = property("User1");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetUser1(const QString& value){ setProperty("User1", QVariant(value)); }

inline QString _ContactItem::User2() const
{
    QVariant qax_result = property("User2");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetUser2(const QString& value){ setProperty("User2", QVariant(value)); }

inline QString _ContactItem::User3() const
{
    QVariant qax_result = property("User3");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetUser3(const QString& value){ setProperty("User3", QVariant(value)); }

inline QString _ContactItem::User4() const
{
    QVariant qax_result = property("User4");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetUser4(const QString& value){ setProperty("User4", QVariant(value)); }

inline QString _ContactItem::UserCertificate() const
{
    QVariant qax_result = property("UserCertificate");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetUserCertificate(const QString& value){ setProperty("UserCertificate", QVariant(value)); }

inline Outlook::UserProperties* _ContactItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline QString _ContactItem::WebPage() const
{
    QVariant qax_result = property("WebPage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetWebPage(const QString& value){ setProperty("WebPage", QVariant(value)); }

inline QString _ContactItem::YomiCompanyName() const
{
    QVariant qax_result = property("YomiCompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetYomiCompanyName(const QString& value){ setProperty("YomiCompanyName", QVariant(value)); }

inline QString _ContactItem::YomiFirstName() const
{
    QVariant qax_result = property("YomiFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetYomiFirstName(const QString& value){ setProperty("YomiFirstName", QVariant(value)); }

inline QString _ContactItem::YomiLastName() const
{
    QVariant qax_result = property("YomiLastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ContactItem::SetYomiLastName(const QString& value){ setProperty("YomiLastName", QVariant(value)); }

inline void _ContactItem::AddBusinessCardLogoPicture(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _ContactItem::AddPicture(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _ContactItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _ContactItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IDispatch* _ContactItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _ContactItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _ContactItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _ContactItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline Outlook::MailItem* _ContactItem::ForwardAsBusinessCard()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::MailItem* _ContactItem::ForwardAsVcard()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::_Conversation* _ContactItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _ContactItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline IDispatch* _ContactItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline void _ContactItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _ContactItem::RemovePicture()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _ContactItem::ResetBusinessCard()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _ContactItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _ContactItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _ContactItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _ContactItem::SaveBusinessCardImage(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _ContactItem::ShowBusinessCardEditor()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
}

inline void _ContactItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
}

inline void _ContactItem::ShowCheckAddressDialog(Outlook::OlMailingAddress MailingAddress)
{
    void *_a[] = {0, (void*)&MailingAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
}

inline void _ContactItem::ShowCheckFullNameDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
}

inline void _ContactItem::ShowCheckPhoneDialog(Outlook::OlContactPhoneNumber PhoneNumber)
{
    void *_a[] = {0, (void*)&PhoneNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
}


inline Outlook::_Application* Actions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Actions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Actions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Actions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Actions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Action* Actions::Add()
{
    Outlook::Action* qax_result = 0;
    qRegisterMetaType<Outlook::Action*>("Action*", &qax_result);
    qRegisterMetaType<Outlook::Action>("Action", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Action* Actions::Item(const QVariant& Index)
{
    Outlook::Action* qax_result = 0;
    qRegisterMetaType<Outlook::Action*>("Action*", &qax_result);
    qRegisterMetaType<Outlook::Action>("Action", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Actions::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* Action::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Action::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlActionCopyLike Action::CopyLike() const
{
    QVariant qax_result = property("CopyLike");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlActionCopyLike*)qax_result.constData();
}
inline void Action::SetCopyLike(Outlook::OlActionCopyLike value){ setProperty("CopyLike", QVariant(value)); }

inline bool Action::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Action::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString Action::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Action::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString Action::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Action::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* Action::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString Action::Prefix() const
{
    QVariant qax_result = property("Prefix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Action::SetPrefix(const QString& value){ setProperty("Prefix", QVariant(value)); }

inline Outlook::OlActionReplyStyle Action::ReplyStyle() const
{
    QVariant qax_result = property("ReplyStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlActionReplyStyle*)qax_result.constData();
}
inline void Action::SetReplyStyle(Outlook::OlActionReplyStyle value){ setProperty("ReplyStyle", QVariant(value)); }

inline Outlook::OlActionResponseStyle Action::ResponseStyle() const
{
    QVariant qax_result = property("ResponseStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlActionResponseStyle*)qax_result.constData();
}
inline void Action::SetResponseStyle(Outlook::OlActionResponseStyle value){ setProperty("ResponseStyle", QVariant(value)); }

inline Outlook::_NameSpace* Action::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlActionShowOn Action::ShowOn() const
{
    QVariant qax_result = property("ShowOn");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlActionShowOn*)qax_result.constData();
}
inline void Action::SetShowOn(Outlook::OlActionShowOn value){ setProperty("ShowOn", QVariant(value)); }

inline void Action::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* Action::Execute()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* Attachments::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Attachments::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Attachments::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Attachments::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Attachments::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Attachment* Attachments::Add(const QVariant& Source)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Source};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Attachment* Attachments::Add(const QVariant& Source, const QVariant& Type)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Source, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Attachment* Attachments::Add(const QVariant& Source, const QVariant& Type, const QVariant& Position)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Source, (void*)&Type, (void*)&Position};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Attachment* Attachments::Add(const QVariant& Source, const QVariant& Type, const QVariant& Position, const QVariant& DisplayName)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Source, (void*)&Type, (void*)&Position, (void*)&DisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Attachment* Attachments::Item(const QVariant& Index)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void Attachments::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline Outlook::_Application* Attachment::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlAttachmentBlockLevel Attachment::BlockLevel() const
{
    QVariant qax_result = property("BlockLevel");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAttachmentBlockLevel*)qax_result.constData();
}

inline Outlook::OlObjectClass Attachment::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString Attachment::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Attachment::SetDisplayName(const QString& value){ setProperty("DisplayName", QVariant(value)); }

inline QString Attachment::FileName() const
{
    QVariant qax_result = property("FileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int Attachment::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IUnknown* Attachment::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* Attachment::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString Attachment::PathName() const
{
    QVariant qax_result = property("PathName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int Attachment::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Attachment::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::PropertyAccessor* Attachment::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* Attachment::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int Attachment::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlAttachmentType Attachment::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAttachmentType*)qax_result.constData();
}

inline void Attachment::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString Attachment::GetTemporaryFilePath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Attachment::SaveAsFile(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* PropertyAccessor::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PropertyAccessor::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* PropertyAccessor::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* PropertyAccessor::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString PropertyAccessor::BinaryToString(const QVariant& Value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant PropertyAccessor::DeleteProperties(QVariant& SchemaNames)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void PropertyAccessor::DeleteProperty(const QString& SchemaName)
{
    void *_a[] = {0, (void*)&SchemaName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline QVariant PropertyAccessor::GetProperties(const QVariant& SchemaNames)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant PropertyAccessor::GetProperty(const QString& SchemaName)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QDateTime PropertyAccessor::LocalTimeToUTC(const QDateTime& Value)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QVariant PropertyAccessor::SetProperties(const QVariant& SchemaNames, const QVariant& Values)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames, (void*)&Values};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void PropertyAccessor::SetProperty(const QString& SchemaName, const QVariant& Value)
{
    void *_a[] = {0, (void*)&SchemaName, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline QVariant PropertyAccessor::StringToBinary(const QString& Value)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QDateTime PropertyAccessor::UTCToLocalTime(const QDateTime& Value)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}


inline Outlook::_Application* _PropertyAccessor::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _PropertyAccessor::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* _PropertyAccessor::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _PropertyAccessor::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _PropertyAccessor::BinaryToString(const QVariant& Value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant _PropertyAccessor::DeleteProperties(QVariant& SchemaNames)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _PropertyAccessor::DeleteProperty(const QString& SchemaName)
{
    void *_a[] = {0, (void*)&SchemaName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline QVariant _PropertyAccessor::GetProperties(const QVariant& SchemaNames)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QVariant _PropertyAccessor::GetProperty(const QString& SchemaName)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QDateTime _PropertyAccessor::LocalTimeToUTC(const QDateTime& Value)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QVariant _PropertyAccessor::SetProperties(const QVariant& SchemaNames, const QVariant& Values)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SchemaNames, (void*)&Values};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _PropertyAccessor::SetProperty(const QString& SchemaName, const QVariant& Value)
{
    void *_a[] = {0, (void*)&SchemaName, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline QVariant _PropertyAccessor::StringToBinary(const QString& Value)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QDateTime _PropertyAccessor::UTCToLocalTime(const QDateTime& Value)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}


inline Outlook::_Application* FormDescription::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString FormDescription::Category() const
{
    QVariant qax_result = property("Category");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetCategory(const QString& value){ setProperty("Category", QVariant(value)); }

inline QString FormDescription::CategorySub() const
{
    QVariant qax_result = property("CategorySub");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetCategorySub(const QString& value){ setProperty("CategorySub", QVariant(value)); }

inline Outlook::OlObjectClass FormDescription::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString FormDescription::Comment() const
{
    QVariant qax_result = property("Comment");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetComment(const QString& value){ setProperty("Comment", QVariant(value)); }

inline QString FormDescription::ContactName() const
{
    QVariant qax_result = property("ContactName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetContactName(const QString& value){ setProperty("ContactName", QVariant(value)); }

inline QString FormDescription::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetDisplayName(const QString& value){ setProperty("DisplayName", QVariant(value)); }

inline bool FormDescription::Hidden() const
{
    QVariant qax_result = property("Hidden");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormDescription::SetHidden(bool value){ setProperty("Hidden", QVariant(value)); }

inline QString FormDescription::Icon() const
{
    QVariant qax_result = property("Icon");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetIcon(const QString& value){ setProperty("Icon", QVariant(value)); }

inline bool FormDescription::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormDescription::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QString FormDescription::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString FormDescription::MiniIcon() const
{
    QVariant qax_result = property("MiniIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetMiniIcon(const QString& value){ setProperty("MiniIcon", QVariant(value)); }

inline QString FormDescription::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline QString FormDescription::Number() const
{
    QVariant qax_result = property("Number");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetNumber(const QString& value){ setProperty("Number", QVariant(value)); }

inline bool FormDescription::OneOff() const
{
    QVariant qax_result = property("OneOff");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormDescription::SetOneOff(bool value){ setProperty("OneOff", QVariant(value)); }

inline IDispatch* FormDescription::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString FormDescription::Password() const
{
    QVariant qax_result = property("Password");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetPassword(const QString& value){ setProperty("Password", QVariant(value)); }

inline QString FormDescription::ScriptText() const
{
    QVariant qax_result = property("ScriptText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NameSpace* FormDescription::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString FormDescription::Template() const
{
    QVariant qax_result = property("Template");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetTemplate(const QString& value){ setProperty("Template", QVariant(value)); }

inline bool FormDescription::UseWordMail() const
{
    QVariant qax_result = property("UseWordMail");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormDescription::SetUseWordMail(bool value){ setProperty("UseWordMail", QVariant(value)); }

inline QString FormDescription::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormDescription::SetVersion(const QString& value){ setProperty("Version", QVariant(value)); }

inline void FormDescription::PublishForm(Outlook::OlFormRegistry Registry)
{
    void *_a[] = {0, (void*)&Registry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void FormDescription::PublishForm(Outlook::OlFormRegistry Registry, const QVariant& Folder)
{
    void *_a[] = {0, (void*)&Registry, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::_Application* _Inspector::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::_AttachmentSelection* _Inspector::AttachmentSelection() const
{
    Outlook::_AttachmentSelection* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AttachmentSelection*>("_AttachmentSelection*", &qax_pointer);
    qRegisterMetaType<Outlook::_AttachmentSelection>("_AttachmentSelection", qax_pointer);
    QVariant qax_result = property("AttachmentSelection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AttachmentSelection**)qax_result.constData();
}

inline QString _Inspector::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass _Inspector::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::CommandBars* _Inspector::CommandBars() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::CommandBars* qax_pointer = 0;
    qRegisterMetaType<Office::CommandBars*>("Office::CommandBars*", &qax_pointer);
    qRegisterMetaType<Office::CommandBars>("Office::CommandBars", qax_pointer);
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBars**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline IDispatch* _Inspector::CurrentItem() const
{
    QVariant qax_result = property("CurrentItem");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlEditorType _Inspector::EditorType() const
{
    QVariant qax_result = property("EditorType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEditorType*)qax_result.constData();
}

inline IDispatch* _Inspector::HTMLEditor() const
{
    QVariant qax_result = property("HTMLEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _Inspector::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Inspector::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _Inspector::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Inspector::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline IDispatch* _Inspector::ModifiedFormPages() const
{
    QVariant qax_result = property("ModifiedFormPages");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* _Inspector::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Inspector::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _Inspector::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Inspector::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int _Inspector::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Inspector::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline Outlook::OlWindowState _Inspector::WindowState() const
{
    QVariant qax_result = property("WindowState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlWindowState*)qax_result.constData();
}
inline void _Inspector::SetWindowState(Outlook::OlWindowState value){ setProperty("WindowState", QVariant(value)); }

inline IDispatch* _Inspector::WordEditor() const
{
    QVariant qax_result = property("WordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void _Inspector::Activate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Inspector::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _Inspector::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Inspector::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Inspector::HideFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline bool _Inspector::IsWordMail()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* _Inspector::NewFormRegion()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _Inspector::OpenFormRegion(const QString& Path)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _Inspector::SaveFormRegion(IDispatch* Page, const QString& FileName)
{
    void *_a[] = {0, (void*)&Page, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _Inspector::SetControlItemProperty(IDispatch* Control, const QString& PropertyName)
{
    void *_a[] = {0, (void*)&Control, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _Inspector::SetCurrentFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _Inspector::SetSchedulingStartTime(const QDateTime& Start)
{
    void *_a[] = {0, (void*)&Start};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _Inspector::ShowFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline Outlook::_Application* _AttachmentSelection::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AttachmentSelection::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _AttachmentSelection::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlSelectionLocation _AttachmentSelection::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSelectionLocation*)qax_result.constData();
}

inline IDispatch* _AttachmentSelection::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AttachmentSelection::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Selection* _AttachmentSelection::GetSelection(Outlook::OlSelectionContents SelectionContents)
{
    Outlook::Selection* qax_result = 0;
    qRegisterMetaType<Outlook::Selection*>("Selection*", &qax_result);
    qRegisterMetaType<Outlook::Selection>("Selection", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SelectionContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Attachment* _AttachmentSelection::Item(const QVariant& Index)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* Selection::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Selection::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Selection::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlSelectionLocation Selection::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSelectionLocation*)qax_result.constData();
}

inline IDispatch* Selection::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Selection::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Selection* Selection::GetSelection(Outlook::OlSelectionContents SelectionContents)
{
    Outlook::Selection* qax_result = 0;
    qRegisterMetaType<Outlook::Selection*>("Selection*", &qax_result);
    qRegisterMetaType<Outlook::Selection>("Selection", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SelectionContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline IDispatch* Selection::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* UserProperties::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass UserProperties::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int UserProperties::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* UserProperties::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* UserProperties::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::UserProperty* UserProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::UserProperty* UserProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&AddToFolderFields};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::UserProperty* UserProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields, const QVariant& DisplayFormat)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&AddToFolderFields, (void*)&DisplayFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::UserProperty* UserProperties::Find(const QString& Name)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::UserProperty* UserProperties::Find(const QString& Name, const QVariant& Custom)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Custom};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::UserProperty* UserProperties::Item(const QVariant& Index)
{
    Outlook::UserProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserProperty*>("UserProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserProperty>("UserProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void UserProperties::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* UserProperty::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass UserProperty::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString UserProperty::Formula() const
{
    QVariant qax_result = property("Formula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void UserProperty::SetFormula(const QString& value){ setProperty("Formula", QVariant(value)); }

inline bool UserProperty::IsUserProperty() const
{
    QVariant qax_result = property("IsUserProperty");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString UserProperty::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* UserProperty::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* UserProperty::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlUserPropertyType UserProperty::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline QString UserProperty::ValidationFormula() const
{
    QVariant qax_result = property("ValidationFormula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void UserProperty::SetValidationFormula(const QString& value){ setProperty("ValidationFormula", QVariant(value)); }

inline QString UserProperty::ValidationText() const
{
    QVariant qax_result = property("ValidationText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void UserProperty::SetValidationText(const QString& value){ setProperty("ValidationText", QVariant(value)); }

inline QVariant UserProperty::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void UserProperty::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void UserProperty::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline QString MAPIFolder::AddressBookName() const
{
    QVariant qax_result = property("AddressBookName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MAPIFolder::SetAddressBookName(const QString& value){ setProperty("AddressBookName", QVariant(value)); }

inline Outlook::_Application* MAPIFolder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass MAPIFolder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::View* MAPIFolder::CurrentView() const
{
    Outlook::View* qax_pointer = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_pointer);
    qRegisterMetaType<Outlook::View>("View", qax_pointer);
    QVariant qax_result = property("CurrentView");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::View**)qax_result.constData();
}

inline bool MAPIFolder::CustomViewsOnly() const
{
    QVariant qax_result = property("CustomViewsOnly");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MAPIFolder::SetCustomViewsOnly(bool value){ setProperty("CustomViewsOnly", QVariant(value)); }

inline Outlook::OlItemType MAPIFolder::DefaultItemType() const
{
    QVariant qax_result = property("DefaultItemType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlItemType*)qax_result.constData();
}

inline QString MAPIFolder::DefaultMessageClass() const
{
    QVariant qax_result = property("DefaultMessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MAPIFolder::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MAPIFolder::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QString MAPIFolder::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MAPIFolder::FolderPath() const
{
    QVariant qax_result = property("FolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Folders* MAPIFolder::Folders() const
{
    Outlook::_Folders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Folders**)qax_result.constData();
}

inline QString MAPIFolder::FullFolderPath() const
{
    QVariant qax_result = property("FullFolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool MAPIFolder::InAppFolderSyncObject() const
{
    QVariant qax_result = property("InAppFolderSyncObject");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MAPIFolder::SetInAppFolderSyncObject(bool value){ setProperty("InAppFolderSyncObject", QVariant(value)); }

inline bool MAPIFolder::IsSharePointFolder() const
{
    QVariant qax_result = property("IsSharePointFolder");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_Items* MAPIFolder::Items() const
{
    Outlook::_Items* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Items*>("_Items*", &qax_pointer);
    qRegisterMetaType<Outlook::_Items>("_Items", qax_pointer);
    QVariant qax_result = property("Items");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Items**)qax_result.constData();
}

inline IUnknown* MAPIFolder::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString MAPIFolder::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MAPIFolder::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* MAPIFolder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* MAPIFolder::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* MAPIFolder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool MAPIFolder::ShowAsOutlookAB() const
{
    QVariant qax_result = property("ShowAsOutlookAB");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MAPIFolder::SetShowAsOutlookAB(bool value){ setProperty("ShowAsOutlookAB", QVariant(value)); }

inline Outlook::OlShowItemCount MAPIFolder::ShowItemCount() const
{
    QVariant qax_result = property("ShowItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlShowItemCount*)qax_result.constData();
}
inline void MAPIFolder::SetShowItemCount(Outlook::OlShowItemCount value){ setProperty("ShowItemCount", QVariant(value)); }

inline Outlook::Store* MAPIFolder::Store() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("Store");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline QString MAPIFolder::StoreID() const
{
    QVariant qax_result = property("StoreID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int MAPIFolder::UnReadItemCount() const
{
    QVariant qax_result = property("UnReadItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::UserDefinedProperties* MAPIFolder::UserDefinedProperties() const
{
    Outlook::UserDefinedProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserDefinedProperties*>("UserDefinedProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserDefinedProperties>("UserDefinedProperties", qax_pointer);
    QVariant qax_result = property("UserDefinedProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserDefinedProperties**)qax_result.constData();
}

inline IDispatch* MAPIFolder::UserPermissions() const
{
    QVariant qax_result = property("UserPermissions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Views* MAPIFolder::Views() const
{
    Outlook::_Views* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Views*>("_Views*", &qax_pointer);
    qRegisterMetaType<Outlook::_Views>("_Views", qax_pointer);
    QVariant qax_result = property("Views");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Views**)qax_result.constData();
}

inline bool MAPIFolder::WebViewAllowNavigation() const
{
    QVariant qax_result = property("WebViewAllowNavigation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MAPIFolder::SetWebViewAllowNavigation(bool value){ setProperty("WebViewAllowNavigation", QVariant(value)); }

inline bool MAPIFolder::WebViewOn() const
{
    QVariant qax_result = property("WebViewOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MAPIFolder::SetWebViewOn(bool value){ setProperty("WebViewOn", QVariant(value)); }

inline QString MAPIFolder::WebViewURL() const
{
    QVariant qax_result = property("WebViewURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MAPIFolder::SetWebViewURL(const QString& value){ setProperty("WebViewURL", QVariant(value)); }

inline void MAPIFolder::AddToFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void MAPIFolder::AddToFavorites(const QVariant& fNoUI)
{
    void *_a[] = {0, (void*)&fNoUI};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void MAPIFolder::AddToFavorites(const QVariant& fNoUI, const QVariant& Name)
{
    void *_a[] = {0, (void*)&fNoUI, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void MAPIFolder::AddToPFFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Outlook::MAPIFolder* MAPIFolder::CopyTo(Outlook::MAPIFolder* DestinationFolder)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void MAPIFolder::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void MAPIFolder::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Outlook::CalendarSharing* MAPIFolder::GetCalendarExporter()
{
    Outlook::CalendarSharing* qax_result = 0;
    qRegisterMetaType<Outlook::CalendarSharing*>("CalendarSharing*", &qax_result);
    qRegisterMetaType<Outlook::CalendarSharing>("CalendarSharing", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QPixmap MAPIFolder::GetCustomIcon()
{
    QPixmap qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::_Explorer* MAPIFolder::GetExplorer()
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::_Explorer* MAPIFolder::GetExplorer(const QVariant& DisplayMode)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DisplayMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::_StorageItem* MAPIFolder::GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType)
{
    Outlook::_StorageItem* qax_result = 0;
    qRegisterMetaType<Outlook::_StorageItem*>("_StorageItem*", &qax_result);
    qRegisterMetaType<Outlook::_StorageItem>("_StorageItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&StorageIdentifier, (void*)&StorageIdentifierType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::Table* MAPIFolder::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::Table* MAPIFolder::GetTable(const QVariant& Filter)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::Table* MAPIFolder::GetTable(const QVariant& Filter, const QVariant& TableContents)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter, (void*)&TableContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void MAPIFolder::MoveTo(Outlook::MAPIFolder* DestinationFolder)
{
    void *_a[] = {0, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void MAPIFolder::SetCustomIcon(const QPixmap& Picture)
{
    void *_a[] = {0, (void*)&Picture};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline Outlook::_Application* _Folders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Folders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Folders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Folders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* _Folders::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* _Folders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::MAPIFolder* _Folders::Add(const QString& Name)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::Add(const QString& Name, const QVariant& Type)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::GetFirst()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::GetLast()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::GetNext()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::GetPrevious()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Folders::Item(const QVariant& Index)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _Folders::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}


inline Outlook::_Application* _Items::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Items::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Items::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _Items::IncludeRecurrences() const
{
    QVariant qax_result = property("IncludeRecurrences");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _Items::SetIncludeRecurrences(bool value){ setProperty("IncludeRecurrences", QVariant(value)); }

inline IDispatch* _Items::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* _Items::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* _Items::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* _Items::Add()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline IDispatch* _Items::Add(const QVariant& Type)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline IDispatch* _Items::Find(const QString& Filter)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline IDispatch* _Items::FindNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline IDispatch* _Items::GetFirst()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline IDispatch* _Items::GetLast()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* _Items::GetNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _Items::GetPrevious()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline IDispatch* _Items::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void _Items::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _Items::ResetColumns()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline Outlook::_Items* _Items::Restrict(const QString& Filter)
{
    Outlook::_Items* qax_result = 0;
    qRegisterMetaType<Outlook::_Items*>("_Items*", &qax_result);
    qRegisterMetaType<Outlook::_Items>("_Items", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _Items::SetColumns(const QString& Columns)
{
    void *_a[] = {0, (void*)&Columns};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _Items::Sort(const QString& Property)
{
    void *_a[] = {0, (void*)&Property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _Items::Sort(const QString& Property, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&Property, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}


inline Outlook::_AccountSelector* _Explorer::AccountSelector() const
{
    Outlook::_AccountSelector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AccountSelector*>("_AccountSelector*", &qax_pointer);
    qRegisterMetaType<Outlook::_AccountSelector>("_AccountSelector", qax_pointer);
    QVariant qax_result = property("AccountSelector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AccountSelector**)qax_result.constData();
}

inline IDispatch* _Explorer::ActiveInlineResponse() const
{
    QVariant qax_result = property("ActiveInlineResponse");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* _Explorer::ActiveInlineResponseWordEditor() const
{
    QVariant qax_result = property("ActiveInlineResponseWordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Application* _Explorer::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::_AttachmentSelection* _Explorer::AttachmentSelection() const
{
    Outlook::_AttachmentSelection* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AttachmentSelection*>("_AttachmentSelection*", &qax_pointer);
    qRegisterMetaType<Outlook::_AttachmentSelection>("_AttachmentSelection", qax_pointer);
    QVariant qax_result = property("AttachmentSelection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AttachmentSelection**)qax_result.constData();
}

inline QString _Explorer::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass _Explorer::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::CommandBars* _Explorer::CommandBars() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::CommandBars* qax_pointer = 0;
    qRegisterMetaType<Office::CommandBars*>("Office::CommandBars*", &qax_pointer);
    qRegisterMetaType<Office::CommandBars>("Office::CommandBars", qax_pointer);
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBars**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Outlook::MAPIFolder* _Explorer::CurrentFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("CurrentFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void _Explorer::SetCurrentFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("CurrentFolder", QVariant(typeId, &value));
}

inline QVariant _Explorer::CurrentView() const
{
    QVariant qax_result = property("CurrentView");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _Explorer::SetCurrentView(const QVariant& value){ setProperty("CurrentView", QVariant(value)); }

inline Outlook::OlDisplayMode _Explorer::DisplayMode() const
{
    QVariant qax_result = property("DisplayMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayMode*)qax_result.constData();
}

inline IDispatch* _Explorer::HTMLDocument() const
{
    QVariant qax_result = property("HTMLDocument");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _Explorer::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explorer::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int _Explorer::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explorer::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline Outlook::_NavigationPane* _Explorer::NavigationPane() const
{
    Outlook::_NavigationPane* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationPane*>("_NavigationPane*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationPane>("_NavigationPane", qax_pointer);
    QVariant qax_result = property("NavigationPane");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationPane**)qax_result.constData();
}

inline Outlook::Panes* _Explorer::Panes() const
{
    Outlook::Panes* qax_pointer = 0;
    qRegisterMetaType<Outlook::Panes*>("Panes*", &qax_pointer);
    qRegisterMetaType<Outlook::Panes>("Panes", qax_pointer);
    QVariant qax_result = property("Panes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Panes**)qax_result.constData();
}

inline IDispatch* _Explorer::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_PreviewPane* _Explorer::PreviewPane() const
{
    Outlook::_PreviewPane* qax_pointer = 0;
    qRegisterMetaType<Outlook::_PreviewPane*>("_PreviewPane*", &qax_pointer);
    qRegisterMetaType<Outlook::_PreviewPane>("_PreviewPane", qax_pointer);
    QVariant qax_result = property("PreviewPane");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_PreviewPane**)qax_result.constData();
}

inline Outlook::Selection* _Explorer::Selection() const
{
    Outlook::Selection* qax_pointer = 0;
    qRegisterMetaType<Outlook::Selection*>("Selection*", &qax_pointer);
    qRegisterMetaType<Outlook::Selection>("Selection", qax_pointer);
    QVariant qax_result = property("Selection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Selection**)qax_result.constData();
}

inline Outlook::_NameSpace* _Explorer::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _Explorer::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explorer::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline IDispatch* _Explorer::Views() const
{
    QVariant qax_result = property("Views");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _Explorer::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explorer::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline Outlook::OlWindowState _Explorer::WindowState() const
{
    QVariant qax_result = property("WindowState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlWindowState*)qax_result.constData();
}
inline void _Explorer::SetWindowState(Outlook::OlWindowState value){ setProperty("WindowState", QVariant(value)); }

inline void _Explorer::Activate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Explorer::AddToSelection(IDispatch* Item)
{
    void *_a[] = {0, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _Explorer::ClearSearch()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Explorer::ClearSelection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Explorer::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _Explorer::DeselectFolder(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _Explorer::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline bool _Explorer::IsFolderSelected(Outlook::MAPIFolder* Folder)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool _Explorer::IsItemSelectableInView(IDispatch* Item)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline bool _Explorer::IsPaneVisible(Outlook::OlPane Pane)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Pane};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _Explorer::RemoveFromSelection(IDispatch* Item)
{
    void *_a[] = {0, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _Explorer::Search(const QString& Query, Outlook::OlSearchScope SearchScope)
{
    void *_a[] = {0, (void*)&Query, (void*)&SearchScope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _Explorer::SelectAllItems()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _Explorer::SelectFolder(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _Explorer::ShowPane(Outlook::OlPane Pane, bool Visible)
{
    void *_a[] = {0, (void*)&Pane, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}


inline Outlook::_Application* Panes::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Panes::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Panes::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Panes::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Panes::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* Panes::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* _NavigationPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::NavigationModule* _NavigationPane::CurrentModule() const
{
    Outlook::NavigationModule* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationModule*>("NavigationModule*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationModule>("NavigationModule", qax_pointer);
    QVariant qax_result = property("CurrentModule");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationModule**)qax_result.constData();
}
inline void _NavigationPane::SetCurrentModule(Outlook::NavigationModule* value){
    int typeId = qRegisterMetaType<Outlook::NavigationModule*>("Outlook::NavigationModule*", &value);
    setProperty("CurrentModule", QVariant(typeId, &value));
}

inline int _NavigationPane::DisplayedModuleCount() const
{
    QVariant qax_result = property("DisplayedModuleCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NavigationPane::SetDisplayedModuleCount(int value){ setProperty("DisplayedModuleCount", QVariant(value)); }

inline bool _NavigationPane::IsCollapsed() const
{
    QVariant qax_result = property("IsCollapsed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NavigationPane::SetIsCollapsed(bool value){ setProperty("IsCollapsed", QVariant(value)); }

inline Outlook::NavigationModules* _NavigationPane::Modules() const
{
    Outlook::NavigationModules* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationModules*>("NavigationModules*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationModules>("NavigationModules", qax_pointer);
    QVariant qax_result = property("Modules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationModules**)qax_result.constData();
}

inline IDispatch* _NavigationPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NavigationPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* NavigationModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString NavigationModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlNavigationModuleType NavigationModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* NavigationModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int NavigationModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NavigationModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* NavigationModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool NavigationModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NavigationModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _NavigationModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _NavigationModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _NavigationModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _NavigationModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _NavigationModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NavigationModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _NavigationModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _NavigationModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NavigationModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* NavigationModules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationModules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int NavigationModules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* NavigationModules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NavigationModules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationModule* NavigationModules::GetNavigationModule(Outlook::OlNavigationModuleType ModuleType)
{
    Outlook::NavigationModule* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationModule*>("NavigationModule*", &qax_result);
    qRegisterMetaType<Outlook::NavigationModule>("NavigationModule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ModuleType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_NavigationModule* NavigationModules::Item(const QVariant& Index)
{
    Outlook::_NavigationModule* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationModule*>("_NavigationModule*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationModule>("_NavigationModule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* _NavigationModules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationModules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _NavigationModules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _NavigationModules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NavigationModules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationModule* _NavigationModules::GetNavigationModule(Outlook::OlNavigationModuleType ModuleType)
{
    Outlook::NavigationModule* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationModule*>("NavigationModule*", &qax_result);
    qRegisterMetaType<Outlook::NavigationModule>("NavigationModule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ModuleType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_NavigationModule* _NavigationModules::Item(const QVariant& Index)
{
    Outlook::_NavigationModule* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationModule*>("_NavigationModule*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationModule>("_NavigationModule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* _AccountSelector::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AccountSelector::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* _AccountSelector::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Account* _AccountSelector::SelectedAccount() const
{
    Outlook::_Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Account*>("_Account*", &qax_pointer);
    qRegisterMetaType<Outlook::_Account>("_Account", qax_pointer);
    QVariant qax_result = property("SelectedAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Account**)qax_result.constData();
}

inline Outlook::_NameSpace* _AccountSelector::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlAccountType _Account::AccountType() const
{
    QVariant qax_result = property("AccountType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAccountType*)qax_result.constData();
}

inline Outlook::_Application* _Account::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlAutoDiscoverConnectionMode _Account::AutoDiscoverConnectionMode() const
{
    QVariant qax_result = property("AutoDiscoverConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoDiscoverConnectionMode*)qax_result.constData();
}

inline QString _Account::AutoDiscoverXml() const
{
    QVariant qax_result = property("AutoDiscoverXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass _Account::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::Recipient* _Account::CurrentUser() const
{
    Outlook::Recipient* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_pointer);
    QVariant qax_result = property("CurrentUser");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipient**)qax_result.constData();
}

inline Outlook::Store* _Account::DeliveryStore() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("DeliveryStore");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline QString _Account::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlExchangeConnectionMode _Account::ExchangeConnectionMode() const
{
    QVariant qax_result = property("ExchangeConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeConnectionMode*)qax_result.constData();
}

inline QString _Account::ExchangeMailboxServerName() const
{
    QVariant qax_result = property("ExchangeMailboxServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _Account::ExchangeMailboxServerVersion() const
{
    QVariant qax_result = property("ExchangeMailboxServerVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IUnknown* _Account::IOlkAccount() const
{
    QVariant qax_result = property("IOlkAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* _Account::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Account::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _Account::SmtpAddress() const
{
    QVariant qax_result = property("SmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _Account::UserName() const
{
    QVariant qax_result = property("UserName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::AddressEntry* _Account::GetAddressEntryFromID(const QString& ID)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Recipient* _Account::GetRecipientFromID(const QString& EntryID)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* Store::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Categories* Store::Categories() const
{
    Outlook::Categories* qax_pointer = 0;
    qRegisterMetaType<Outlook::Categories*>("Categories*", &qax_pointer);
    qRegisterMetaType<Outlook::Categories>("Categories", qax_pointer);
    QVariant qax_result = property("Categories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Categories**)qax_result.constData();
}

inline Outlook::OlObjectClass Store::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString Store::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlExchangeStoreType Store::ExchangeStoreType() const
{
    QVariant qax_result = property("ExchangeStoreType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeStoreType*)qax_result.constData();
}

inline QString Store::FilePath() const
{
    QVariant qax_result = property("FilePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool Store::IsCachedExchange() const
{
    QVariant qax_result = property("IsCachedExchange");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Store::IsConversationEnabled() const
{
    QVariant qax_result = property("IsConversationEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Store::IsDataFileStore() const
{
    QVariant qax_result = property("IsDataFileStore");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Store::IsInstantSearchEnabled() const
{
    QVariant qax_result = property("IsInstantSearchEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool Store::IsOpen() const
{
    QVariant qax_result = property("IsOpen");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IUnknown* Store::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* Store::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* Store::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* Store::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString Store::StoreID() const
{
    QVariant qax_result = property("StoreID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Store::CreateUnifiedGroup(const QString& Name, const QString& Alias, const QString& Description, bool FAutoSubscribeMembers, Outlook::OlUnifiedGroupType GroupType)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Alias, (void*)&Description, (void*)&FAutoSubscribeMembers, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void Store::DeleteUnifiedGroup(const QString& GroupSmtpAddress)
{
    void *_a[] = {0, (void*)&GroupSmtpAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline Outlook::MAPIFolder* Store::GetDefaultFolder(Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Store::GetRootFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Rules* Store::GetRules()
{
    Outlook::Rules* qax_result = 0;
    qRegisterMetaType<Outlook::Rules*>("Rules*", &qax_result);
    qRegisterMetaType<Outlook::Rules>("Rules", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::_Folders* Store::GetSearchFolders()
{
    Outlook::_Folders* qax_result = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_result);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Store::GetSpecialFolder(Outlook::OlSpecialFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void Store::RefreshQuotaDisplay()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline bool Store::VerifyGroupFollowInfo(int GroupFollowOption)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GroupFollowOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}


inline Outlook::_Application* _Store::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Categories* _Store::Categories() const
{
    Outlook::Categories* qax_pointer = 0;
    qRegisterMetaType<Outlook::Categories*>("Categories*", &qax_pointer);
    qRegisterMetaType<Outlook::Categories>("Categories", qax_pointer);
    QVariant qax_result = property("Categories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Categories**)qax_result.constData();
}

inline Outlook::OlObjectClass _Store::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _Store::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlExchangeStoreType _Store::ExchangeStoreType() const
{
    QVariant qax_result = property("ExchangeStoreType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeStoreType*)qax_result.constData();
}

inline QString _Store::FilePath() const
{
    QVariant qax_result = property("FilePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _Store::IsCachedExchange() const
{
    QVariant qax_result = property("IsCachedExchange");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _Store::IsConversationEnabled() const
{
    QVariant qax_result = property("IsConversationEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _Store::IsDataFileStore() const
{
    QVariant qax_result = property("IsDataFileStore");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _Store::IsInstantSearchEnabled() const
{
    QVariant qax_result = property("IsInstantSearchEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _Store::IsOpen() const
{
    QVariant qax_result = property("IsOpen");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IUnknown* _Store::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* _Store::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _Store::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* _Store::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _Store::StoreID() const
{
    QVariant qax_result = property("StoreID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _Store::CreateUnifiedGroup(const QString& Name, const QString& Alias, const QString& Description, bool FAutoSubscribeMembers, Outlook::OlUnifiedGroupType GroupType)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Alias, (void*)&Description, (void*)&FAutoSubscribeMembers, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _Store::DeleteUnifiedGroup(const QString& GroupSmtpAddress)
{
    void *_a[] = {0, (void*)&GroupSmtpAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline Outlook::MAPIFolder* _Store::GetDefaultFolder(Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Store::GetRootFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Rules* _Store::GetRules()
{
    Outlook::Rules* qax_result = 0;
    qRegisterMetaType<Outlook::Rules*>("Rules*", &qax_result);
    qRegisterMetaType<Outlook::Rules>("Rules", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::_Folders* _Store::GetSearchFolders()
{
    Outlook::_Folders* qax_result = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_result);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Store::GetSpecialFolder(Outlook::OlSpecialFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _Store::RefreshQuotaDisplay()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline bool _Store::VerifyGroupFollowInfo(int GroupFollowOption)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&GroupFollowOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}


inline Outlook::_Application* Rules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Rules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Rules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool Rules::IsRssRulesProcessingEnabled() const
{
    QVariant qax_result = property("IsRssRulesProcessingEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Rules::SetIsRssRulesProcessingEnabled(bool value){ setProperty("IsRssRulesProcessingEnabled", QVariant(value)); }

inline IDispatch* Rules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Rules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Rule* Rules::Create(const QString& Name, Outlook::OlRuleType RuleType)
{
    Outlook::Rule* qax_result = 0;
    qRegisterMetaType<Outlook::Rule*>("Rule*", &qax_result);
    qRegisterMetaType<Outlook::Rule>("Rule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&RuleType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Rule* Rules::Item(const QVariant& Index)
{
    Outlook::_Rule* qax_result = 0;
    qRegisterMetaType<Outlook::_Rule*>("_Rule*", &qax_result);
    qRegisterMetaType<Outlook::_Rule>("_Rule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Rules::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Rules::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Rules::Save(const QVariant& ShowProgress)
{
    void *_a[] = {0, (void*)&ShowProgress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* _Rules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Rules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Rules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _Rules::IsRssRulesProcessingEnabled() const
{
    QVariant qax_result = property("IsRssRulesProcessingEnabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _Rules::SetIsRssRulesProcessingEnabled(bool value){ setProperty("IsRssRulesProcessingEnabled", QVariant(value)); }

inline IDispatch* _Rules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Rules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Rule* _Rules::Create(const QString& Name, Outlook::OlRuleType RuleType)
{
    Outlook::Rule* qax_result = 0;
    qRegisterMetaType<Outlook::Rule*>("Rule*", &qax_result);
    qRegisterMetaType<Outlook::Rule>("Rule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&RuleType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Rule* _Rules::Item(const QVariant& Index)
{
    Outlook::_Rule* qax_result = 0;
    qRegisterMetaType<Outlook::_Rule*>("_Rule*", &qax_result);
    qRegisterMetaType<Outlook::_Rule>("_Rule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _Rules::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Rules::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Rules::Save(const QVariant& ShowProgress)
{
    void *_a[] = {0, (void*)&ShowProgress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::RuleActions* _Rule::Actions() const
{
    Outlook::RuleActions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleActions*>("RuleActions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleActions>("RuleActions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleActions**)qax_result.constData();
}

inline Outlook::_Application* _Rule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Rule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::RuleConditions* _Rule::Conditions() const
{
    Outlook::RuleConditions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleConditions*>("RuleConditions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleConditions>("RuleConditions", qax_pointer);
    QVariant qax_result = property("Conditions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleConditions**)qax_result.constData();
}

inline bool _Rule::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _Rule::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::RuleConditions* _Rule::Exceptions() const
{
    Outlook::RuleConditions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleConditions*>("RuleConditions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleConditions>("RuleConditions", qax_pointer);
    QVariant qax_result = property("Exceptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleConditions**)qax_result.constData();
}

inline int _Rule::ExecutionOrder() const
{
    QVariant qax_result = property("ExecutionOrder");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Rule::SetExecutionOrder(int value){ setProperty("ExecutionOrder", QVariant(value)); }

inline bool _Rule::IsLocalRule() const
{
    QVariant qax_result = property("IsLocalRule");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _Rule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Rule::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _Rule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlRuleType _Rule::RuleType() const
{
    QVariant qax_result = property("RuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleType*)qax_result.constData();
}

inline Outlook::_NameSpace* _Rule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void _Rule::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Rule::Execute(const QVariant& ShowProgress)
{
    void *_a[] = {0, (void*)&ShowProgress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder, (void*)&IncludeSubfolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders, const QVariant& RuleExecuteOption)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder, (void*)&IncludeSubfolders, (void*)&RuleExecuteOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* RuleActions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AssignToCategoryRuleAction* RuleActions::AssignToCategory() const
{
    Outlook::AssignToCategoryRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::AssignToCategoryRuleAction*>("AssignToCategoryRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::AssignToCategoryRuleAction>("AssignToCategoryRuleAction", qax_pointer);
    QVariant qax_result = property("AssignToCategory");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AssignToCategoryRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* RuleActions::CC() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("CC");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::OlObjectClass RuleActions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::ClearCategories() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("ClearCategories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::MoveOrCopyRuleAction* RuleActions::CopyToFolder() const
{
    Outlook::MoveOrCopyRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction*>("MoveOrCopyRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction>("MoveOrCopyRuleAction", qax_pointer);
    QVariant qax_result = property("CopyToFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MoveOrCopyRuleAction**)qax_result.constData();
}

inline int RuleActions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::Delete() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("Delete");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::DeletePermanently() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("DeletePermanently");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::DesktopAlert() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("DesktopAlert");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* RuleActions::Forward() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("Forward");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* RuleActions::ForwardAsAttachment() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("ForwardAsAttachment");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::MarkAsTaskRuleAction* RuleActions::MarkAsTask() const
{
    Outlook::MarkAsTaskRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MarkAsTaskRuleAction*>("MarkAsTaskRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MarkAsTaskRuleAction>("MarkAsTaskRuleAction", qax_pointer);
    QVariant qax_result = property("MarkAsTask");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MarkAsTaskRuleAction**)qax_result.constData();
}

inline Outlook::MoveOrCopyRuleAction* RuleActions::MoveToFolder() const
{
    Outlook::MoveOrCopyRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction*>("MoveOrCopyRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction>("MoveOrCopyRuleAction", qax_pointer);
    QVariant qax_result = property("MoveToFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MoveOrCopyRuleAction**)qax_result.constData();
}

inline Outlook::NewItemAlertRuleAction* RuleActions::NewItemAlert() const
{
    Outlook::NewItemAlertRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::NewItemAlertRuleAction*>("NewItemAlertRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::NewItemAlertRuleAction>("NewItemAlertRuleAction", qax_pointer);
    QVariant qax_result = property("NewItemAlert");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NewItemAlertRuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::NotifyDelivery() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("NotifyDelivery");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::NotifyRead() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("NotifyRead");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline IDispatch* RuleActions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PlaySoundRuleAction* RuleActions::PlaySound() const
{
    Outlook::PlaySoundRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::PlaySoundRuleAction*>("PlaySoundRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::PlaySoundRuleAction>("PlaySoundRuleAction", qax_pointer);
    QVariant qax_result = property("PlaySound");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PlaySoundRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* RuleActions::Redirect() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("Redirect");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::_NameSpace* RuleActions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::RuleAction* RuleActions::Stop() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("Stop");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::_RuleAction* RuleActions::Item(int Index)
{
    Outlook::_RuleAction* qax_result = 0;
    qRegisterMetaType<Outlook::_RuleAction*>("_RuleAction*", &qax_result);
    qRegisterMetaType<Outlook::_RuleAction>("_RuleAction", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* _RuleActions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AssignToCategoryRuleAction* _RuleActions::AssignToCategory() const
{
    Outlook::AssignToCategoryRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::AssignToCategoryRuleAction*>("AssignToCategoryRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::AssignToCategoryRuleAction>("AssignToCategoryRuleAction", qax_pointer);
    QVariant qax_result = property("AssignToCategory");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AssignToCategoryRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* _RuleActions::CC() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("CC");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::OlObjectClass _RuleActions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::ClearCategories() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("ClearCategories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::MoveOrCopyRuleAction* _RuleActions::CopyToFolder() const
{
    Outlook::MoveOrCopyRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction*>("MoveOrCopyRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction>("MoveOrCopyRuleAction", qax_pointer);
    QVariant qax_result = property("CopyToFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MoveOrCopyRuleAction**)qax_result.constData();
}

inline int _RuleActions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::Delete() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("Delete");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::DeletePermanently() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("DeletePermanently");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::DesktopAlert() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("DesktopAlert");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* _RuleActions::Forward() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("Forward");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* _RuleActions::ForwardAsAttachment() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("ForwardAsAttachment");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::MarkAsTaskRuleAction* _RuleActions::MarkAsTask() const
{
    Outlook::MarkAsTaskRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MarkAsTaskRuleAction*>("MarkAsTaskRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MarkAsTaskRuleAction>("MarkAsTaskRuleAction", qax_pointer);
    QVariant qax_result = property("MarkAsTask");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MarkAsTaskRuleAction**)qax_result.constData();
}

inline Outlook::MoveOrCopyRuleAction* _RuleActions::MoveToFolder() const
{
    Outlook::MoveOrCopyRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction*>("MoveOrCopyRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::MoveOrCopyRuleAction>("MoveOrCopyRuleAction", qax_pointer);
    QVariant qax_result = property("MoveToFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MoveOrCopyRuleAction**)qax_result.constData();
}

inline Outlook::NewItemAlertRuleAction* _RuleActions::NewItemAlert() const
{
    Outlook::NewItemAlertRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::NewItemAlertRuleAction*>("NewItemAlertRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::NewItemAlertRuleAction>("NewItemAlertRuleAction", qax_pointer);
    QVariant qax_result = property("NewItemAlert");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NewItemAlertRuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::NotifyDelivery() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("NotifyDelivery");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::NotifyRead() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("NotifyRead");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline IDispatch* _RuleActions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PlaySoundRuleAction* _RuleActions::PlaySound() const
{
    Outlook::PlaySoundRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::PlaySoundRuleAction*>("PlaySoundRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::PlaySoundRuleAction>("PlaySoundRuleAction", qax_pointer);
    QVariant qax_result = property("PlaySound");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PlaySoundRuleAction**)qax_result.constData();
}

inline Outlook::SendRuleAction* _RuleActions::Redirect() const
{
    Outlook::SendRuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::SendRuleAction*>("SendRuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::SendRuleAction>("SendRuleAction", qax_pointer);
    QVariant qax_result = property("Redirect");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SendRuleAction**)qax_result.constData();
}

inline Outlook::_NameSpace* _RuleActions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::RuleAction* _RuleActions::Stop() const
{
    Outlook::RuleAction* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleAction*>("RuleAction*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleAction>("RuleAction", qax_pointer);
    QVariant qax_result = property("Stop");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleAction**)qax_result.constData();
}

inline Outlook::_RuleAction* _RuleActions::Item(int Index)
{
    Outlook::_RuleAction* qax_result = 0;
    qRegisterMetaType<Outlook::_RuleAction*>("_RuleAction*", &qax_result);
    qRegisterMetaType<Outlook::_RuleAction>("_RuleAction", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::OlRuleActionType _RuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _RuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _RuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _RuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _RuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _RuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _RuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType MoveOrCopyRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* MoveOrCopyRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass MoveOrCopyRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool MoveOrCopyRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MoveOrCopyRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::MAPIFolder* MoveOrCopyRuleAction::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void MoveOrCopyRuleAction::SetFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("Folder", QVariant(typeId, &value));
}

inline IDispatch* MoveOrCopyRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* MoveOrCopyRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType _MoveOrCopyRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _MoveOrCopyRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _MoveOrCopyRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _MoveOrCopyRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MoveOrCopyRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::MAPIFolder* _MoveOrCopyRuleAction::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void _MoveOrCopyRuleAction::SetFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("Folder", QVariant(typeId, &value));
}

inline IDispatch* _MoveOrCopyRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _MoveOrCopyRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType RuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* RuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass RuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool RuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* RuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* RuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType SendRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* SendRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SendRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool SendRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SendRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* SendRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* SendRuleAction::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::_NameSpace* SendRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType _SendRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _SendRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SendRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _SendRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SendRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _SendRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* _SendRuleAction::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::_NameSpace* _SendRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* Recipients::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Recipients::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Recipients::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Recipients::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Recipients::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Recipient* Recipients::Add(const QString& Name)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Recipient* Recipients::Item(const QVariant& Index)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Recipients::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline bool Recipients::ResolveAll()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline Outlook::OlRuleActionType AssignToCategoryRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* AssignToCategoryRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QVariant AssignToCategoryRuleAction::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void AssignToCategoryRuleAction::SetCategories(const QVariant& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass AssignToCategoryRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool AssignToCategoryRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AssignToCategoryRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* AssignToCategoryRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AssignToCategoryRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType _AssignToCategoryRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _AssignToCategoryRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QVariant _AssignToCategoryRuleAction::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _AssignToCategoryRuleAction::SetCategories(const QVariant& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _AssignToCategoryRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _AssignToCategoryRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AssignToCategoryRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _AssignToCategoryRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AssignToCategoryRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType PlaySoundRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* PlaySoundRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PlaySoundRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool PlaySoundRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PlaySoundRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString PlaySoundRuleAction::FilePath() const
{
    QVariant qax_result = property("FilePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PlaySoundRuleAction::SetFilePath(const QString& value){ setProperty("FilePath", QVariant(value)); }

inline IDispatch* PlaySoundRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* PlaySoundRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType _PlaySoundRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _PlaySoundRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _PlaySoundRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _PlaySoundRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PlaySoundRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString _PlaySoundRuleAction::FilePath() const
{
    QVariant qax_result = property("FilePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PlaySoundRuleAction::SetFilePath(const QString& value){ setProperty("FilePath", QVariant(value)); }

inline IDispatch* _PlaySoundRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _PlaySoundRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType MarkAsTaskRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* MarkAsTaskRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass MarkAsTaskRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool MarkAsTaskRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MarkAsTaskRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString MarkAsTaskRuleAction::FlagTo() const
{
    QVariant qax_result = property("FlagTo");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MarkAsTaskRuleAction::SetFlagTo(const QString& value){ setProperty("FlagTo", QVariant(value)); }

inline Outlook::OlMarkInterval MarkAsTaskRuleAction::MarkInterval() const
{
    QVariant qax_result = property("MarkInterval");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMarkInterval*)qax_result.constData();
}
inline void MarkAsTaskRuleAction::SetMarkInterval(Outlook::OlMarkInterval value){ setProperty("MarkInterval", QVariant(value)); }

inline IDispatch* MarkAsTaskRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* MarkAsTaskRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType _MarkAsTaskRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _MarkAsTaskRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _MarkAsTaskRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _MarkAsTaskRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MarkAsTaskRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString _MarkAsTaskRuleAction::FlagTo() const
{
    QVariant qax_result = property("FlagTo");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MarkAsTaskRuleAction::SetFlagTo(const QString& value){ setProperty("FlagTo", QVariant(value)); }

inline Outlook::OlMarkInterval _MarkAsTaskRuleAction::MarkInterval() const
{
    QVariant qax_result = property("MarkInterval");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMarkInterval*)qax_result.constData();
}
inline void _MarkAsTaskRuleAction::SetMarkInterval(Outlook::OlMarkInterval value){ setProperty("MarkInterval", QVariant(value)); }

inline IDispatch* _MarkAsTaskRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _MarkAsTaskRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlRuleActionType NewItemAlertRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* NewItemAlertRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NewItemAlertRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool NewItemAlertRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NewItemAlertRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* NewItemAlertRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NewItemAlertRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString NewItemAlertRuleAction::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void NewItemAlertRuleAction::SetText(const QString& value){ setProperty("Text", QVariant(value)); }


inline Outlook::OlRuleActionType _NewItemAlertRuleAction::ActionType() const
{
    QVariant qax_result = property("ActionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleActionType*)qax_result.constData();
}

inline Outlook::_Application* _NewItemAlertRuleAction::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NewItemAlertRuleAction::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _NewItemAlertRuleAction::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NewItemAlertRuleAction::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _NewItemAlertRuleAction::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NewItemAlertRuleAction::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _NewItemAlertRuleAction::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _NewItemAlertRuleAction::SetText(const QString& value){ setProperty("Text", QVariant(value)); }


inline Outlook::AccountRuleCondition* RuleConditions::Account() const
{
    Outlook::AccountRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AccountRuleCondition*>("AccountRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AccountRuleCondition>("AccountRuleCondition", qax_pointer);
    QVariant qax_result = property("Account");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AccountRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::AnyCategory() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("AnyCategory");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::_Application* RuleConditions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::TextRuleCondition* RuleConditions::Body() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("Body");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::TextRuleCondition* RuleConditions::BodyOrSubject() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("BodyOrSubject");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::CC() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("CC");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::CategoryRuleCondition* RuleConditions::Category() const
{
    Outlook::CategoryRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::CategoryRuleCondition*>("CategoryRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::CategoryRuleCondition>("CategoryRuleCondition", qax_pointer);
    QVariant qax_result = property("Category");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::CategoryRuleCondition**)qax_result.constData();
}

inline Outlook::OlObjectClass RuleConditions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int RuleConditions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::FormNameRuleCondition* RuleConditions::FormName() const
{
    Outlook::FormNameRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormNameRuleCondition*>("FormNameRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::FormNameRuleCondition>("FormNameRuleCondition", qax_pointer);
    QVariant qax_result = property("FormName");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormNameRuleCondition**)qax_result.constData();
}

inline Outlook::ToOrFromRuleCondition* RuleConditions::From() const
{
    Outlook::ToOrFromRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ToOrFromRuleCondition*>("ToOrFromRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ToOrFromRuleCondition>("ToOrFromRuleCondition", qax_pointer);
    QVariant qax_result = property("From");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ToOrFromRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::FromAnyRSSFeed() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("FromAnyRSSFeed");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::FromRssFeedRuleCondition* RuleConditions::FromRssFeed() const
{
    Outlook::FromRssFeedRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::FromRssFeedRuleCondition*>("FromRssFeedRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::FromRssFeedRuleCondition>("FromRssFeedRuleCondition", qax_pointer);
    QVariant qax_result = property("FromRssFeed");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FromRssFeedRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::HasAttachment() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("HasAttachment");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::ImportanceRuleCondition* RuleConditions::Importance() const
{
    Outlook::ImportanceRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ImportanceRuleCondition*>("ImportanceRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ImportanceRuleCondition>("ImportanceRuleCondition", qax_pointer);
    QVariant qax_result = property("Importance");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ImportanceRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::MeetingInviteOrUpdate() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("MeetingInviteOrUpdate");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::TextRuleCondition* RuleConditions::MessageHeader() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("MessageHeader");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::NotTo() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("NotTo");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::OnLocalMachine() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnLocalMachine");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::OnOtherMachine() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnOtherMachine");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::OnlyToMe() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnlyToMe");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline IDispatch* RuleConditions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::AddressRuleCondition* RuleConditions::RecipientAddress() const
{
    Outlook::AddressRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressRuleCondition*>("AddressRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressRuleCondition>("AddressRuleCondition", qax_pointer);
    QVariant qax_result = property("RecipientAddress");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressRuleCondition**)qax_result.constData();
}

inline Outlook::AddressRuleCondition* RuleConditions::SenderAddress() const
{
    Outlook::AddressRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressRuleCondition*>("AddressRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressRuleCondition>("AddressRuleCondition", qax_pointer);
    QVariant qax_result = property("SenderAddress");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressRuleCondition**)qax_result.constData();
}

inline Outlook::SenderInAddressListRuleCondition* RuleConditions::SenderInAddressList() const
{
    Outlook::SenderInAddressListRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::SenderInAddressListRuleCondition*>("SenderInAddressListRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::SenderInAddressListRuleCondition>("SenderInAddressListRuleCondition", qax_pointer);
    QVariant qax_result = property("SenderInAddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SenderInAddressListRuleCondition**)qax_result.constData();
}

inline Outlook::SensitivityRuleCondition* RuleConditions::Sensitivity() const
{
    Outlook::SensitivityRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::SensitivityRuleCondition*>("SensitivityRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::SensitivityRuleCondition>("SensitivityRuleCondition", qax_pointer);
    QVariant qax_result = property("Sensitivity");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SensitivityRuleCondition**)qax_result.constData();
}

inline Outlook::ToOrFromRuleCondition* RuleConditions::SentTo() const
{
    Outlook::ToOrFromRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ToOrFromRuleCondition*>("ToOrFromRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ToOrFromRuleCondition>("ToOrFromRuleCondition", qax_pointer);
    QVariant qax_result = property("SentTo");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ToOrFromRuleCondition**)qax_result.constData();
}

inline Outlook::_NameSpace* RuleConditions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::TextRuleCondition* RuleConditions::Subject() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("Subject");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::ToMe() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("ToMe");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* RuleConditions::ToOrCc() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("ToOrCc");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::_RuleCondition* RuleConditions::Item(int Index)
{
    Outlook::_RuleCondition* qax_result = 0;
    qRegisterMetaType<Outlook::_RuleCondition*>("_RuleCondition*", &qax_result);
    qRegisterMetaType<Outlook::_RuleCondition>("_RuleCondition", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::AccountRuleCondition* _RuleConditions::Account() const
{
    Outlook::AccountRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AccountRuleCondition*>("AccountRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AccountRuleCondition>("AccountRuleCondition", qax_pointer);
    QVariant qax_result = property("Account");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AccountRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::AnyCategory() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("AnyCategory");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::_Application* _RuleConditions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::TextRuleCondition* _RuleConditions::Body() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("Body");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::TextRuleCondition* _RuleConditions::BodyOrSubject() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("BodyOrSubject");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::CC() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("CC");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::CategoryRuleCondition* _RuleConditions::Category() const
{
    Outlook::CategoryRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::CategoryRuleCondition*>("CategoryRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::CategoryRuleCondition>("CategoryRuleCondition", qax_pointer);
    QVariant qax_result = property("Category");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::CategoryRuleCondition**)qax_result.constData();
}

inline Outlook::OlObjectClass _RuleConditions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _RuleConditions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::FormNameRuleCondition* _RuleConditions::FormName() const
{
    Outlook::FormNameRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormNameRuleCondition*>("FormNameRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::FormNameRuleCondition>("FormNameRuleCondition", qax_pointer);
    QVariant qax_result = property("FormName");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormNameRuleCondition**)qax_result.constData();
}

inline Outlook::ToOrFromRuleCondition* _RuleConditions::From() const
{
    Outlook::ToOrFromRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ToOrFromRuleCondition*>("ToOrFromRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ToOrFromRuleCondition>("ToOrFromRuleCondition", qax_pointer);
    QVariant qax_result = property("From");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ToOrFromRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::FromAnyRSSFeed() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("FromAnyRSSFeed");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::FromRssFeedRuleCondition* _RuleConditions::FromRssFeed() const
{
    Outlook::FromRssFeedRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::FromRssFeedRuleCondition*>("FromRssFeedRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::FromRssFeedRuleCondition>("FromRssFeedRuleCondition", qax_pointer);
    QVariant qax_result = property("FromRssFeed");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FromRssFeedRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::HasAttachment() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("HasAttachment");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::ImportanceRuleCondition* _RuleConditions::Importance() const
{
    Outlook::ImportanceRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ImportanceRuleCondition*>("ImportanceRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ImportanceRuleCondition>("ImportanceRuleCondition", qax_pointer);
    QVariant qax_result = property("Importance");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ImportanceRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::MeetingInviteOrUpdate() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("MeetingInviteOrUpdate");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::TextRuleCondition* _RuleConditions::MessageHeader() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("MessageHeader");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::NotTo() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("NotTo");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::OnLocalMachine() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnLocalMachine");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::OnOtherMachine() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnOtherMachine");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::OnlyToMe() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("OnlyToMe");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline IDispatch* _RuleConditions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::AddressRuleCondition* _RuleConditions::RecipientAddress() const
{
    Outlook::AddressRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressRuleCondition*>("AddressRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressRuleCondition>("AddressRuleCondition", qax_pointer);
    QVariant qax_result = property("RecipientAddress");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressRuleCondition**)qax_result.constData();
}

inline Outlook::AddressRuleCondition* _RuleConditions::SenderAddress() const
{
    Outlook::AddressRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressRuleCondition*>("AddressRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressRuleCondition>("AddressRuleCondition", qax_pointer);
    QVariant qax_result = property("SenderAddress");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressRuleCondition**)qax_result.constData();
}

inline Outlook::SenderInAddressListRuleCondition* _RuleConditions::SenderInAddressList() const
{
    Outlook::SenderInAddressListRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::SenderInAddressListRuleCondition*>("SenderInAddressListRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::SenderInAddressListRuleCondition>("SenderInAddressListRuleCondition", qax_pointer);
    QVariant qax_result = property("SenderInAddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SenderInAddressListRuleCondition**)qax_result.constData();
}

inline Outlook::SensitivityRuleCondition* _RuleConditions::Sensitivity() const
{
    Outlook::SensitivityRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::SensitivityRuleCondition*>("SensitivityRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::SensitivityRuleCondition>("SensitivityRuleCondition", qax_pointer);
    QVariant qax_result = property("Sensitivity");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SensitivityRuleCondition**)qax_result.constData();
}

inline Outlook::ToOrFromRuleCondition* _RuleConditions::SentTo() const
{
    Outlook::ToOrFromRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::ToOrFromRuleCondition*>("ToOrFromRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::ToOrFromRuleCondition>("ToOrFromRuleCondition", qax_pointer);
    QVariant qax_result = property("SentTo");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ToOrFromRuleCondition**)qax_result.constData();
}

inline Outlook::_NameSpace* _RuleConditions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::TextRuleCondition* _RuleConditions::Subject() const
{
    Outlook::TextRuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::TextRuleCondition*>("TextRuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::TextRuleCondition>("TextRuleCondition", qax_pointer);
    QVariant qax_result = property("Subject");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TextRuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::ToMe() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("ToMe");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::RuleCondition* _RuleConditions::ToOrCc() const
{
    Outlook::RuleCondition* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleCondition*>("RuleCondition*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleCondition>("RuleCondition", qax_pointer);
    QVariant qax_result = property("ToOrCc");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleCondition**)qax_result.constData();
}

inline Outlook::_RuleCondition* _RuleConditions::Item(int Index)
{
    Outlook::_RuleCondition* qax_result = 0;
    qRegisterMetaType<Outlook::_RuleCondition*>("_RuleCondition*", &qax_result);
    qRegisterMetaType<Outlook::_RuleCondition>("_RuleCondition", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* _RuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _RuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _RuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _RuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _RuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _RuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _RuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* RuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass RuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType RuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool RuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* RuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* RuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* ImportanceRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ImportanceRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType ImportanceRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool ImportanceRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ImportanceRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlImportance ImportanceRuleCondition::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void ImportanceRuleCondition::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline IDispatch* ImportanceRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ImportanceRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _ImportanceRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ImportanceRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _ImportanceRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _ImportanceRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ImportanceRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::OlImportance _ImportanceRuleCondition::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _ImportanceRuleCondition::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline IDispatch* _ImportanceRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ImportanceRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::Account* AccountRuleCondition::Account() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("Account");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void AccountRuleCondition::SetAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("Account", QVariant(typeId, &value));
}

inline Outlook::_Application* AccountRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AccountRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType AccountRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool AccountRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AccountRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* AccountRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AccountRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::Account* _AccountRuleCondition::Account() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("Account");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _AccountRuleCondition::SetAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("Account", QVariant(typeId, &value));
}

inline Outlook::_Application* _AccountRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AccountRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _AccountRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _AccountRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AccountRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _AccountRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AccountRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::OlAccountType Account::AccountType() const
{
    QVariant qax_result = property("AccountType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAccountType*)qax_result.constData();
}

inline Outlook::_Application* Account::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlAutoDiscoverConnectionMode Account::AutoDiscoverConnectionMode() const
{
    QVariant qax_result = property("AutoDiscoverConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoDiscoverConnectionMode*)qax_result.constData();
}

inline QString Account::AutoDiscoverXml() const
{
    QVariant qax_result = property("AutoDiscoverXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass Account::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::Recipient* Account::CurrentUser() const
{
    Outlook::Recipient* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_pointer);
    QVariant qax_result = property("CurrentUser");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipient**)qax_result.constData();
}

inline Outlook::Store* Account::DeliveryStore() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("DeliveryStore");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline QString Account::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlExchangeConnectionMode Account::ExchangeConnectionMode() const
{
    QVariant qax_result = property("ExchangeConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeConnectionMode*)qax_result.constData();
}

inline QString Account::ExchangeMailboxServerName() const
{
    QVariant qax_result = property("ExchangeMailboxServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Account::ExchangeMailboxServerVersion() const
{
    QVariant qax_result = property("ExchangeMailboxServerVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IUnknown* Account::IOlkAccount() const
{
    QVariant qax_result = property("IOlkAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline IDispatch* Account::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Account::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString Account::SmtpAddress() const
{
    QVariant qax_result = property("SmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Account::UserName() const
{
    QVariant qax_result = property("UserName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::AddressEntry* Account::GetAddressEntryFromID(const QString& ID)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Recipient* Account::GetRecipientFromID(const QString& EntryID)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* TextRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass TextRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType TextRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool TextRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TextRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* TextRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* TextRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QVariant TextRuleCondition::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TextRuleCondition::SetText(const QVariant& value){ setProperty("Text", QVariant(value)); }


inline Outlook::_Application* _TextRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _TextRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _TextRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _TextRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TextRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _TextRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _TextRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QVariant _TextRuleCondition::Text() const
{
    QVariant qax_result = property("Text");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TextRuleCondition::SetText(const QVariant& value){ setProperty("Text", QVariant(value)); }


inline Outlook::_Application* CategoryRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QVariant CategoryRuleCondition::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void CategoryRuleCondition::SetCategories(const QVariant& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass CategoryRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType CategoryRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool CategoryRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CategoryRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* CategoryRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* CategoryRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _CategoryRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QVariant _CategoryRuleCondition::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _CategoryRuleCondition::SetCategories(const QVariant& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _CategoryRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _CategoryRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _CategoryRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CategoryRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _CategoryRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _CategoryRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* FormNameRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass FormNameRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType FormNameRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool FormNameRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormNameRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QVariant FormNameRuleCondition::FormName() const
{
    QVariant qax_result = property("FormName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void FormNameRuleCondition::SetFormName(const QVariant& value){ setProperty("FormName", QVariant(value)); }

inline IDispatch* FormNameRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* FormNameRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _FormNameRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _FormNameRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _FormNameRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _FormNameRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _FormNameRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QVariant _FormNameRuleCondition::FormName() const
{
    QVariant qax_result = property("FormName");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _FormNameRuleCondition::SetFormName(const QVariant& value){ setProperty("FormName", QVariant(value)); }

inline IDispatch* _FormNameRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _FormNameRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* ToOrFromRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ToOrFromRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType ToOrFromRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool ToOrFromRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ToOrFromRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* ToOrFromRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* ToOrFromRuleCondition::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::_NameSpace* ToOrFromRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _ToOrFromRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ToOrFromRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _ToOrFromRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _ToOrFromRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ToOrFromRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _ToOrFromRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* _ToOrFromRuleCondition::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::_NameSpace* _ToOrFromRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline QVariant AddressRuleCondition::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void AddressRuleCondition::SetAddress(const QVariant& value){ setProperty("Address", QVariant(value)); }

inline Outlook::_Application* AddressRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AddressRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType AddressRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool AddressRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AddressRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* AddressRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AddressRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline QVariant _AddressRuleCondition::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _AddressRuleCondition::SetAddress(const QVariant& value){ setProperty("Address", QVariant(value)); }

inline Outlook::_Application* _AddressRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AddressRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _AddressRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _AddressRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AddressRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _AddressRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AddressRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::AddressList* SenderInAddressListRuleCondition::AddressList() const
{
    Outlook::AddressList* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_pointer);
    QVariant qax_result = property("AddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressList**)qax_result.constData();
}
inline void SenderInAddressListRuleCondition::SetAddressList(Outlook::AddressList* value){
    int typeId = qRegisterMetaType<Outlook::AddressList*>("Outlook::AddressList*", &value);
    setProperty("AddressList", QVariant(typeId, &value));
}

inline Outlook::_Application* SenderInAddressListRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SenderInAddressListRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType SenderInAddressListRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool SenderInAddressListRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SenderInAddressListRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* SenderInAddressListRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* SenderInAddressListRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::AddressList* _SenderInAddressListRuleCondition::AddressList() const
{
    Outlook::AddressList* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_pointer);
    QVariant qax_result = property("AddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressList**)qax_result.constData();
}
inline void _SenderInAddressListRuleCondition::SetAddressList(Outlook::AddressList* value){
    int typeId = qRegisterMetaType<Outlook::AddressList*>("Outlook::AddressList*", &value);
    setProperty("AddressList", QVariant(typeId, &value));
}

inline Outlook::_Application* _SenderInAddressListRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SenderInAddressListRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _SenderInAddressListRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _SenderInAddressListRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SenderInAddressListRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _SenderInAddressListRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _SenderInAddressListRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::AddressEntries* AddressList::AddressEntries() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("AddressEntries");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline Outlook::OlAddressListType AddressList::AddressListType() const
{
    QVariant qax_result = property("AddressListType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressListType*)qax_result.constData();
}

inline Outlook::_Application* AddressList::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AddressList::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString AddressList::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int AddressList::Index() const
{
    QVariant qax_result = property("Index");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool AddressList::IsInitialAddressList() const
{
    QVariant qax_result = property("IsInitialAddressList");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool AddressList::IsReadOnly() const
{
    QVariant qax_result = property("IsReadOnly");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString AddressList::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* AddressList::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* AddressList::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline int AddressList::ResolutionOrder() const
{
    QVariant qax_result = property("ResolutionOrder");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::_NameSpace* AddressList::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::MAPIFolder* AddressList::GetContactsFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* FromRssFeedRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass FromRssFeedRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType FromRssFeedRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool FromRssFeedRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FromRssFeedRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QVariant FromRssFeedRuleCondition::FromRssFeed() const
{
    QVariant qax_result = property("FromRssFeed");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void FromRssFeedRuleCondition::SetFromRssFeed(const QVariant& value){ setProperty("FromRssFeed", QVariant(value)); }

inline IDispatch* FromRssFeedRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* FromRssFeedRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _FromRssFeedRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _FromRssFeedRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _FromRssFeedRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _FromRssFeedRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _FromRssFeedRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QVariant _FromRssFeedRuleCondition::FromRssFeed() const
{
    QVariant qax_result = property("FromRssFeed");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _FromRssFeedRuleCondition::SetFromRssFeed(const QVariant& value){ setProperty("FromRssFeed", QVariant(value)); }

inline IDispatch* _FromRssFeedRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _FromRssFeedRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* SensitivityRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SensitivityRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType SensitivityRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool SensitivityRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SensitivityRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* SensitivityRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlSensitivity SensitivityRuleCondition::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void SensitivityRuleCondition::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* SensitivityRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _SensitivityRuleCondition::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SensitivityRuleCondition::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlRuleConditionType _SensitivityRuleCondition::ConditionType() const
{
    QVariant qax_result = property("ConditionType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleConditionType*)qax_result.constData();
}

inline bool _SensitivityRuleCondition::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SensitivityRuleCondition::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline IDispatch* _SensitivityRuleCondition::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlSensitivity _SensitivityRuleCondition::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _SensitivityRuleCondition::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _SensitivityRuleCondition::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::RuleActions* Rule::Actions() const
{
    Outlook::RuleActions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleActions*>("RuleActions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleActions>("RuleActions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleActions**)qax_result.constData();
}

inline Outlook::_Application* Rule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Rule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::RuleConditions* Rule::Conditions() const
{
    Outlook::RuleConditions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleConditions*>("RuleConditions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleConditions>("RuleConditions", qax_pointer);
    QVariant qax_result = property("Conditions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleConditions**)qax_result.constData();
}

inline bool Rule::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Rule::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline Outlook::RuleConditions* Rule::Exceptions() const
{
    Outlook::RuleConditions* qax_pointer = 0;
    qRegisterMetaType<Outlook::RuleConditions*>("RuleConditions*", &qax_pointer);
    qRegisterMetaType<Outlook::RuleConditions>("RuleConditions", qax_pointer);
    QVariant qax_result = property("Exceptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::RuleConditions**)qax_result.constData();
}

inline int Rule::ExecutionOrder() const
{
    QVariant qax_result = property("ExecutionOrder");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Rule::SetExecutionOrder(int value){ setProperty("ExecutionOrder", QVariant(value)); }

inline bool Rule::IsLocalRule() const
{
    QVariant qax_result = property("IsLocalRule");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString Rule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Rule::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* Rule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlRuleType Rule::RuleType() const
{
    QVariant qax_result = property("RuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRuleType*)qax_result.constData();
}

inline Outlook::_NameSpace* Rule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void Rule::Execute()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void Rule::Execute(const QVariant& ShowProgress)
{
    void *_a[] = {0, (void*)&ShowProgress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder, (void*)&IncludeSubfolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Rule::Execute(const QVariant& ShowProgress, const QVariant& Folder, const QVariant& IncludeSubfolders, const QVariant& RuleExecuteOption)
{
    void *_a[] = {0, (void*)&ShowProgress, (void*)&Folder, (void*)&IncludeSubfolders, (void*)&RuleExecuteOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* Categories::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Categories::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Categories::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Categories::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Categories::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Category* Categories::Add(const QString& Name)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Category* Categories::Add(const QString& Name, const QVariant& Color)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Category* Categories::Add(const QString& Name, const QVariant& Color, const QVariant& ShortcutKey)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Color, (void*)&ShortcutKey};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::_Category* Categories::Item(const QVariant& Index)
{
    Outlook::_Category* qax_result = 0;
    qRegisterMetaType<Outlook::_Category*>("_Category*", &qax_result);
    qRegisterMetaType<Outlook::_Category>("_Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void Categories::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* _Categories::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Categories::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Categories::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Categories::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Categories::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Category* _Categories::Add(const QString& Name)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Category* _Categories::Add(const QString& Name, const QVariant& Color)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Category* _Categories::Add(const QString& Name, const QVariant& Color, const QVariant& ShortcutKey)
{
    Outlook::Category* qax_result = 0;
    qRegisterMetaType<Outlook::Category*>("Category*", &qax_result);
    qRegisterMetaType<Outlook::Category>("Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Color, (void*)&ShortcutKey};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::_Category* _Categories::Item(const QVariant& Index)
{
    Outlook::_Category* qax_result = 0;
    qRegisterMetaType<Outlook::_Category*>("_Category*", &qax_result);
    qRegisterMetaType<Outlook::_Category>("_Category", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void _Categories::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* _Category::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QColor _Category::CategoryBorderColor() const
{
    QVariant qax_result = property("CategoryBorderColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QColor _Category::CategoryGradientBottomColor() const
{
    QVariant qax_result = property("CategoryGradientBottomColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QColor _Category::CategoryGradientTopColor() const
{
    QVariant qax_result = property("CategoryGradientTopColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QString _Category::CategoryID() const
{
    QVariant qax_result = property("CategoryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass _Category::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlCategoryColor _Category::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryColor*)qax_result.constData();
}
inline void _Category::SetColor(Outlook::OlCategoryColor value){ setProperty("Color", QVariant(value)); }

inline QString _Category::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _Category::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _Category::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Category::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlCategoryShortcutKey _Category::ShortcutKey() const
{
    QVariant qax_result = property("ShortcutKey");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryShortcutKey*)qax_result.constData();
}
inline void _Category::SetShortcutKey(Outlook::OlCategoryShortcutKey value){ setProperty("ShortcutKey", QVariant(value)); }


inline Outlook::_Application* Category::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QColor Category::CategoryBorderColor() const
{
    QVariant qax_result = property("CategoryBorderColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QColor Category::CategoryGradientBottomColor() const
{
    QVariant qax_result = property("CategoryGradientBottomColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QColor Category::CategoryGradientTopColor() const
{
    QVariant qax_result = property("CategoryGradientTopColor");
    Q_ASSERT(qax_result.isValid());
    return *(QColor*)qax_result.constData();
}

inline QString Category::CategoryID() const
{
    QVariant qax_result = property("CategoryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass Category::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlCategoryColor Category::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryColor*)qax_result.constData();
}
inline void Category::SetColor(Outlook::OlCategoryColor value){ setProperty("Color", QVariant(value)); }

inline QString Category::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Category::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* Category::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Category::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlCategoryShortcutKey Category::ShortcutKey() const
{
    QVariant qax_result = property("ShortcutKey");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryShortcutKey*)qax_result.constData();
}
inline void Category::SetShortcutKey(Outlook::OlCategoryShortcutKey value){ setProperty("ShortcutKey", QVariant(value)); }


inline Outlook::_Application* _PreviewPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _PreviewPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* _PreviewPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _PreviewPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* _PreviewPane::WordEditor() const
{
    QVariant qax_result = property("WordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline Outlook::_Application* View::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass View::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString View::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void View::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString View::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void View::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool View::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void View::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString View::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void View::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* View::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption View::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* View::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool View::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType View::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString View::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void View::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void View::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* View::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* View::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void View::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void View::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void View::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void View::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _Views::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Views::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Views::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Views::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Views::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::View* _Views::Add(const QString& Name, Outlook::OlViewType ViewType)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&ViewType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::View* _Views::Add(const QString& Name, Outlook::OlViewType ViewType, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&ViewType, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _Views::Item(const QVariant& Index)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _Views::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IUnknown* _Views::_NewEnum()
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline Outlook::_Application* _StorageItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _StorageItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline QString _StorageItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _StorageItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlObjectClass _StorageItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QDateTime _StorageItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _StorageItem::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _StorageItem::SetCreator(const QString& value){ setProperty("Creator", QVariant(value)); }

inline QString _StorageItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _StorageItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IDispatch* _StorageItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _StorageItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* _StorageItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _StorageItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _StorageItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _StorageItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline Outlook::UserProperties* _StorageItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _StorageItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _StorageItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::_Application* Table::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Table::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::Columns* Table::Columns() const
{
    Outlook::Columns* qax_pointer = 0;
    qRegisterMetaType<Outlook::Columns*>("Columns*", &qax_pointer);
    qRegisterMetaType<Outlook::Columns>("Columns", qax_pointer);
    QVariant qax_result = property("Columns");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Columns**)qax_result.constData();
}

inline bool Table::EndOfTable() const
{
    QVariant qax_result = property("EndOfTable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* Table::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Table::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Row* Table::FindNextRow()
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Row* Table::FindRow(const QString& Filter)
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant Table::GetArray(int MaxRows)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MaxRows};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Row* Table::GetNextRow()
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int Table::GetRowCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void Table::MoveToStart()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Outlook::Table* Table::Restrict(const QString& Filter)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void Table::Sort(const QString& SortProperty)
{
    void *_a[] = {0, (void*)&SortProperty};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void Table::Sort(const QString& SortProperty, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&SortProperty, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}


inline Outlook::_Application* _Table::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Table::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::Columns* _Table::Columns() const
{
    Outlook::Columns* qax_pointer = 0;
    qRegisterMetaType<Outlook::Columns*>("Columns*", &qax_pointer);
    qRegisterMetaType<Outlook::Columns>("Columns", qax_pointer);
    QVariant qax_result = property("Columns");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Columns**)qax_result.constData();
}

inline bool _Table::EndOfTable() const
{
    QVariant qax_result = property("EndOfTable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* _Table::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Table::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Row* _Table::FindNextRow()
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Row* _Table::FindRow(const QString& Filter)
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant _Table::GetArray(int MaxRows)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&MaxRows};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Row* _Table::GetNextRow()
{
    Outlook::Row* qax_result = 0;
    qRegisterMetaType<Outlook::Row*>("Row*", &qax_result);
    qRegisterMetaType<Outlook::Row>("Row", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int _Table::GetRowCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _Table::MoveToStart()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Outlook::Table* _Table::Restrict(const QString& Filter)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _Table::Sort(const QString& SortProperty)
{
    void *_a[] = {0, (void*)&SortProperty};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _Table::Sort(const QString& SortProperty, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&SortProperty, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}


inline Outlook::_Application* Row::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Row::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* Row::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Row::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString Row::BinaryToString(const QVariant& Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant Row::GetValues()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant Row::Item(const QVariant& Index)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QDateTime Row::LocalTimeToUTC(const QVariant& Index)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QDateTime Row::UTCToLocalTime(const QVariant& Index)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline Outlook::_Application* _Row::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Row::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* _Row::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Row::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _Row::BinaryToString(const QVariant& Index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant _Row::GetValues()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant _Row::Item(const QVariant& Index)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QDateTime _Row::LocalTimeToUTC(const QVariant& Index)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QDateTime _Row::UTCToLocalTime(const QVariant& Index)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline Outlook::_Application* Columns::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Columns::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Columns::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Columns::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Columns::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Column* Columns::Add(const QString& Name)
{
    Outlook::Column* qax_result = 0;
    qRegisterMetaType<Outlook::Column*>("Column*", &qax_result);
    qRegisterMetaType<Outlook::Column>("Column", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Column* Columns::Item(const QVariant& Index)
{
    Outlook::_Column* qax_result = 0;
    qRegisterMetaType<Outlook::_Column*>("_Column*", &qax_result);
    qRegisterMetaType<Outlook::_Column>("_Column", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Columns::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Columns::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* _Columns::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Columns::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Columns::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Columns::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Columns::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Column* _Columns::Add(const QString& Name)
{
    Outlook::Column* qax_result = 0;
    qRegisterMetaType<Outlook::Column*>("Column*", &qax_result);
    qRegisterMetaType<Outlook::Column>("Column", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Column* _Columns::Item(const QVariant& Index)
{
    Outlook::_Column* qax_result = 0;
    qRegisterMetaType<Outlook::_Column*>("_Column*", &qax_result);
    qRegisterMetaType<Outlook::_Column>("_Column", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _Columns::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _Columns::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* _Column::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Column::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _Column::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _Column::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Column::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* Column::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Column::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString Column::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Column::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Column::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* CalendarSharing::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlCalendarDetail CalendarSharing::CalendarDetail() const
{
    QVariant qax_result = property("CalendarDetail");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCalendarDetail*)qax_result.constData();
}
inline void CalendarSharing::SetCalendarDetail(Outlook::OlCalendarDetail value){ setProperty("CalendarDetail", QVariant(value)); }

inline Outlook::OlObjectClass CalendarSharing::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QDateTime CalendarSharing::EndDate() const
{
    QVariant qax_result = property("EndDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void CalendarSharing::SetEndDate(const QDateTime& value){ setProperty("EndDate", QVariant(value)); }

inline Outlook::MAPIFolder* CalendarSharing::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}

inline bool CalendarSharing::IncludeAttachments() const
{
    QVariant qax_result = property("IncludeAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarSharing::SetIncludeAttachments(bool value){ setProperty("IncludeAttachments", QVariant(value)); }

inline bool CalendarSharing::IncludePrivateDetails() const
{
    QVariant qax_result = property("IncludePrivateDetails");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarSharing::SetIncludePrivateDetails(bool value){ setProperty("IncludePrivateDetails", QVariant(value)); }

inline bool CalendarSharing::IncludeWholeCalendar() const
{
    QVariant qax_result = property("IncludeWholeCalendar");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarSharing::SetIncludeWholeCalendar(bool value){ setProperty("IncludeWholeCalendar", QVariant(value)); }

inline IDispatch* CalendarSharing::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool CalendarSharing::RestrictToWorkingHours() const
{
    QVariant qax_result = property("RestrictToWorkingHours");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarSharing::SetRestrictToWorkingHours(bool value){ setProperty("RestrictToWorkingHours", QVariant(value)); }

inline Outlook::_NameSpace* CalendarSharing::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QDateTime CalendarSharing::StartDate() const
{
    QVariant qax_result = property("StartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void CalendarSharing::SetStartDate(const QDateTime& value){ setProperty("StartDate", QVariant(value)); }

inline Outlook::MailItem* CalendarSharing::ForwardAsICal(Outlook::OlCalendarMailFormat MailFormat)
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&MailFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void CalendarSharing::SaveAsICal(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::_Application* _CalendarSharing::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlCalendarDetail _CalendarSharing::CalendarDetail() const
{
    QVariant qax_result = property("CalendarDetail");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCalendarDetail*)qax_result.constData();
}
inline void _CalendarSharing::SetCalendarDetail(Outlook::OlCalendarDetail value){ setProperty("CalendarDetail", QVariant(value)); }

inline Outlook::OlObjectClass _CalendarSharing::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QDateTime _CalendarSharing::EndDate() const
{
    QVariant qax_result = property("EndDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _CalendarSharing::SetEndDate(const QDateTime& value){ setProperty("EndDate", QVariant(value)); }

inline Outlook::MAPIFolder* _CalendarSharing::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}

inline bool _CalendarSharing::IncludeAttachments() const
{
    QVariant qax_result = property("IncludeAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarSharing::SetIncludeAttachments(bool value){ setProperty("IncludeAttachments", QVariant(value)); }

inline bool _CalendarSharing::IncludePrivateDetails() const
{
    QVariant qax_result = property("IncludePrivateDetails");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarSharing::SetIncludePrivateDetails(bool value){ setProperty("IncludePrivateDetails", QVariant(value)); }

inline bool _CalendarSharing::IncludeWholeCalendar() const
{
    QVariant qax_result = property("IncludeWholeCalendar");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarSharing::SetIncludeWholeCalendar(bool value){ setProperty("IncludeWholeCalendar", QVariant(value)); }

inline IDispatch* _CalendarSharing::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline bool _CalendarSharing::RestrictToWorkingHours() const
{
    QVariant qax_result = property("RestrictToWorkingHours");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarSharing::SetRestrictToWorkingHours(bool value){ setProperty("RestrictToWorkingHours", QVariant(value)); }

inline Outlook::_NameSpace* _CalendarSharing::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QDateTime _CalendarSharing::StartDate() const
{
    QVariant qax_result = property("StartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _CalendarSharing::SetStartDate(const QDateTime& value){ setProperty("StartDate", QVariant(value)); }

inline Outlook::MailItem* _CalendarSharing::ForwardAsICal(Outlook::OlCalendarMailFormat MailFormat)
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&MailFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _CalendarSharing::SaveAsICal(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::Actions* MailItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool MailItem::AlternateRecipientAllowed() const
{
    QVariant qax_result = property("AlternateRecipientAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetAlternateRecipientAllowed(bool value){ setProperty("AlternateRecipientAllowed", QVariant(value)); }

inline Outlook::_Application* MailItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* MailItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool MailItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline bool MailItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString MailItem::BCC() const
{
    QVariant qax_result = property("BCC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetBCC(const QString& value){ setProperty("BCC", QVariant(value)); }

inline QString MailItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString MailItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat MailItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void MailItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString MailItem::CC() const
{
    QVariant qax_result = property("CC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetCC(const QString& value){ setProperty("CC", QVariant(value)); }

inline QString MailItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass MailItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString MailItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* MailItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString MailItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MailItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime MailItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool MailItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState MailItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline bool MailItem::EnableSharedAttachments() const
{
    QVariant qax_result = property("EnableSharedAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetEnableSharedAttachments(bool value){ setProperty("EnableSharedAttachments", QVariant(value)); }

inline QString MailItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MailItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime MailItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon MailItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void MailItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString MailItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus MailItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void MailItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* MailItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* MailItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString MailItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline bool MailItem::HasCoverSheet() const
{
    QVariant qax_result = property("HasCoverSheet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetHasCoverSheet(bool value){ setProperty("HasCoverSheet", QVariant(value)); }

inline Outlook::OlImportance MailItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void MailItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int MailItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void MailItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool MailItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool MailItem::IsIPFax() const
{
    QVariant qax_result = property("IsIPFax");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetIsIPFax(bool value){ setProperty("IsIPFax", QVariant(value)); }

inline bool MailItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* MailItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime MailItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* MailItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* MailItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus MailItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void MailItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString MailItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString MailItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool MailItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool MailItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int MailItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MailItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* MailItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlPermission MailItem::Permission() const
{
    QVariant qax_result = property("Permission");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermission*)qax_result.constData();
}
inline void MailItem::SetPermission(Outlook::OlPermission value){ setProperty("Permission", QVariant(value)); }

inline Outlook::OlPermissionService MailItem::PermissionService() const
{
    QVariant qax_result = property("PermissionService");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermissionService*)qax_result.constData();
}
inline void MailItem::SetPermissionService(Outlook::OlPermissionService value){ setProperty("PermissionService", QVariant(value)); }

inline QString MailItem::PermissionTemplateGuid() const
{
    QVariant qax_result = property("PermissionTemplateGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetPermissionTemplateGuid(const QString& value){ setProperty("PermissionTemplateGuid", QVariant(value)); }

inline Outlook::PropertyAccessor* MailItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant MailItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void MailItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool MailItem::ReadReceiptRequested() const
{
    QVariant qax_result = property("ReadReceiptRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetReadReceiptRequested(bool value){ setProperty("ReadReceiptRequested", QVariant(value)); }

inline QString MailItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::ReceivedOnBehalfOfEntryID() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::ReceivedOnBehalfOfName() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MailItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool MailItem::RecipientReassignmentProhibited() const
{
    QVariant qax_result = property("RecipientReassignmentProhibited");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetRecipientReassignmentProhibited(bool value){ setProperty("RecipientReassignmentProhibited", QVariant(value)); }

inline Outlook::Recipients* MailItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool MailItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool MailItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool MailItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString MailItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime MailItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::OlRemoteStatus MailItem::RemoteStatus() const
{
    QVariant qax_result = property("RemoteStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void MailItem::SetRemoteStatus(Outlook::OlRemoteStatus value){ setProperty("RemoteStatus", QVariant(value)); }

inline QString MailItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* MailItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QDateTime MailItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString MailItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* MailItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void MailItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool MailItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* MailItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void MailItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* MailItem::Sender() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Sender");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}
inline void MailItem::SetSender(Outlook::AddressEntry* value){
    int typeId = qRegisterMetaType<Outlook::AddressEntry*>("Outlook::AddressEntry*", &value);
    setProperty("Sender", QVariant(typeId, &value));
}

inline QString MailItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MailItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity MailItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void MailItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool MailItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime MailItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString MailItem::SentOnBehalfOfName() const
{
    QVariant qax_result = property("SentOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetSentOnBehalfOfName(const QString& value){ setProperty("SentOnBehalfOfName", QVariant(value)); }

inline Outlook::_NameSpace* MailItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int MailItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MailItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool MailItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime MailItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime MailItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime MailItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString MailItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString MailItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline QDateTime MailItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MailItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool MailItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* MailItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline QString MailItem::VotingOptions() const
{
    QVariant qax_result = property("VotingOptions");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetVotingOptions(const QString& value){ setProperty("VotingOptions", QVariant(value)); }

inline QString MailItem::VotingResponse() const
{
    QVariant qax_result = property("VotingResponse");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MailItem::SetVotingResponse(const QString& value){ setProperty("VotingResponse", QVariant(value)); }

inline void MailItem::AddBusinessCard(Outlook::ContactItem* contact)
{
    void *_a[] = {0, (void*)&contact};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void MailItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void MailItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void MailItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline IDispatch* MailItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void MailItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void MailItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void MailItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline Outlook::MailItem* MailItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::_Conversation* MailItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline void MailItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline IDispatch* MailItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void MailItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline Outlook::MailItem* MailItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline Outlook::MailItem* MailItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline void MailItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void MailItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void MailItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void MailItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void MailItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
}


inline Outlook::Actions* _MailItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool _MailItem::AlternateRecipientAllowed() const
{
    QVariant qax_result = property("AlternateRecipientAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetAlternateRecipientAllowed(bool value){ setProperty("AlternateRecipientAllowed", QVariant(value)); }

inline Outlook::_Application* _MailItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _MailItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _MailItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline bool _MailItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _MailItem::BCC() const
{
    QVariant qax_result = property("BCC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetBCC(const QString& value){ setProperty("BCC", QVariant(value)); }

inline QString _MailItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _MailItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat _MailItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void _MailItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString _MailItem::CC() const
{
    QVariant qax_result = property("CC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetCC(const QString& value){ setProperty("CC", QVariant(value)); }

inline QString _MailItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _MailItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _MailItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _MailItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _MailItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MailItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _MailItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool _MailItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState _MailItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline bool _MailItem::EnableSharedAttachments() const
{
    QVariant qax_result = property("EnableSharedAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetEnableSharedAttachments(bool value){ setProperty("EnableSharedAttachments", QVariant(value)); }

inline QString _MailItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MailItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime _MailItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon _MailItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void _MailItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString _MailItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus _MailItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void _MailItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* _MailItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _MailItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _MailItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline bool _MailItem::HasCoverSheet() const
{
    QVariant qax_result = property("HasCoverSheet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetHasCoverSheet(bool value){ setProperty("HasCoverSheet", QVariant(value)); }

inline Outlook::OlImportance _MailItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _MailItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int _MailItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _MailItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool _MailItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _MailItem::IsIPFax() const
{
    QVariant qax_result = property("IsIPFax");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetIsIPFax(bool value){ setProperty("IsIPFax", QVariant(value)); }

inline bool _MailItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _MailItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _MailItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _MailItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _MailItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _MailItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _MailItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _MailItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _MailItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _MailItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool _MailItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int _MailItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MailItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _MailItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlPermission _MailItem::Permission() const
{
    QVariant qax_result = property("Permission");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermission*)qax_result.constData();
}
inline void _MailItem::SetPermission(Outlook::OlPermission value){ setProperty("Permission", QVariant(value)); }

inline Outlook::OlPermissionService _MailItem::PermissionService() const
{
    QVariant qax_result = property("PermissionService");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermissionService*)qax_result.constData();
}
inline void _MailItem::SetPermissionService(Outlook::OlPermissionService value){ setProperty("PermissionService", QVariant(value)); }

inline QString _MailItem::PermissionTemplateGuid() const
{
    QVariant qax_result = property("PermissionTemplateGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetPermissionTemplateGuid(const QString& value){ setProperty("PermissionTemplateGuid", QVariant(value)); }

inline Outlook::PropertyAccessor* _MailItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _MailItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _MailItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _MailItem::ReadReceiptRequested() const
{
    QVariant qax_result = property("ReadReceiptRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetReadReceiptRequested(bool value){ setProperty("ReadReceiptRequested", QVariant(value)); }

inline QString _MailItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::ReceivedOnBehalfOfEntryID() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::ReceivedOnBehalfOfName() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MailItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool _MailItem::RecipientReassignmentProhibited() const
{
    QVariant qax_result = property("RecipientReassignmentProhibited");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetRecipientReassignmentProhibited(bool value){ setProperty("RecipientReassignmentProhibited", QVariant(value)); }

inline Outlook::Recipients* _MailItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool _MailItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _MailItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _MailItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _MailItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _MailItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::OlRemoteStatus _MailItem::RemoteStatus() const
{
    QVariant qax_result = property("RemoteStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _MailItem::SetRemoteStatus(Outlook::OlRemoteStatus value){ setProperty("RemoteStatus", QVariant(value)); }

inline QString _MailItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* _MailItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QDateTime _MailItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _MailItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* _MailItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void _MailItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool _MailItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* _MailItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _MailItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* _MailItem::Sender() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Sender");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}
inline void _MailItem::SetSender(Outlook::AddressEntry* value){
    int typeId = qRegisterMetaType<Outlook::AddressEntry*>("Outlook::AddressEntry*", &value);
    setProperty("Sender", QVariant(typeId, &value));
}

inline QString _MailItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MailItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity _MailItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _MailItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool _MailItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _MailItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _MailItem::SentOnBehalfOfName() const
{
    QVariant qax_result = property("SentOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetSentOnBehalfOfName(const QString& value){ setProperty("SentOnBehalfOfName", QVariant(value)); }

inline Outlook::_NameSpace* _MailItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _MailItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MailItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _MailItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _MailItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime _MailItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime _MailItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString _MailItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString _MailItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline QDateTime _MailItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MailItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool _MailItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _MailItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline QString _MailItem::VotingOptions() const
{
    QVariant qax_result = property("VotingOptions");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetVotingOptions(const QString& value){ setProperty("VotingOptions", QVariant(value)); }

inline QString _MailItem::VotingResponse() const
{
    QVariant qax_result = property("VotingResponse");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MailItem::SetVotingResponse(const QString& value){ setProperty("VotingResponse", QVariant(value)); }

inline void _MailItem::AddBusinessCard(Outlook::ContactItem* contact)
{
    void *_a[] = {0, (void*)&contact};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _MailItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _MailItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _MailItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IDispatch* _MailItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _MailItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _MailItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _MailItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline Outlook::MailItem* _MailItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::_Conversation* _MailItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _MailItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline IDispatch* _MailItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _MailItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline Outlook::MailItem* _MailItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::MailItem* _MailItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void _MailItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _MailItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _MailItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _MailItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _MailItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}


inline Outlook::_Application* Links::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Links::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Links::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Links::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Links::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Link* Links::Add(IDispatch* Item)
{
    Outlook::Link* qax_result = 0;
    qRegisterMetaType<Outlook::Link*>("Link*", &qax_result);
    qRegisterMetaType<Outlook::Link>("Link", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Link* Links::Item(const QVariant& Index)
{
    Outlook::Link* qax_result = 0;
    qRegisterMetaType<Outlook::Link*>("Link*", &qax_result);
    qRegisterMetaType<Outlook::Link>("Link", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Links::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* Link::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Link::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* Link::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString Link::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Link::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Link::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlObjectClass Link::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}


inline Outlook::_Application* ItemProperties::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ItemProperties::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int ItemProperties::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ItemProperties::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ItemProperties::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::ItemProperty* ItemProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type)
{
    Outlook::ItemProperty* qax_result = 0;
    qRegisterMetaType<Outlook::ItemProperty*>("ItemProperty*", &qax_result);
    qRegisterMetaType<Outlook::ItemProperty>("ItemProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::ItemProperty* ItemProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields)
{
    Outlook::ItemProperty* qax_result = 0;
    qRegisterMetaType<Outlook::ItemProperty*>("ItemProperty*", &qax_result);
    qRegisterMetaType<Outlook::ItemProperty>("ItemProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&AddToFolderFields};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::ItemProperty* ItemProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& AddToFolderFields, const QVariant& DisplayFormat)
{
    Outlook::ItemProperty* qax_result = 0;
    qRegisterMetaType<Outlook::ItemProperty*>("ItemProperty*", &qax_result);
    qRegisterMetaType<Outlook::ItemProperty>("ItemProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&AddToFolderFields, (void*)&DisplayFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::ItemProperty* ItemProperties::Item(const QVariant& Index)
{
    Outlook::ItemProperty* qax_result = 0;
    qRegisterMetaType<Outlook::ItemProperty*>("ItemProperty*", &qax_result);
    qRegisterMetaType<Outlook::ItemProperty>("ItemProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void ItemProperties::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline IUnknown* ItemProperties::_NewEnum()
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}


inline Outlook::_Application* ItemProperty::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ItemProperty::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ItemProperty::Formula() const
{
    QVariant qax_result = property("Formula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ItemProperty::SetFormula(const QString& value){ setProperty("Formula", QVariant(value)); }

inline bool ItemProperty::IsUserProperty() const
{
    QVariant qax_result = property("IsUserProperty");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString ItemProperty::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* ItemProperty::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ItemProperty::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlUserPropertyType ItemProperty::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline QString ItemProperty::ValidationFormula() const
{
    QVariant qax_result = property("ValidationFormula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ItemProperty::SetValidationFormula(const QString& value){ setProperty("ValidationFormula", QVariant(value)); }

inline QString ItemProperty::ValidationText() const
{
    QVariant qax_result = property("ValidationText");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ItemProperty::SetValidationText(const QString& value){ setProperty("ValidationText", QVariant(value)); }

inline QVariant ItemProperty::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ItemProperty::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void ItemProperty::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* Conflicts::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Conflicts::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Conflicts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Conflicts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Conflicts::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Conflict* Conflicts::GetFirst()
{
    Outlook::Conflict* qax_result = 0;
    qRegisterMetaType<Outlook::Conflict*>("Conflict*", &qax_result);
    qRegisterMetaType<Outlook::Conflict>("Conflict", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Conflict* Conflicts::GetLast()
{
    Outlook::Conflict* qax_result = 0;
    qRegisterMetaType<Outlook::Conflict*>("Conflict*", &qax_result);
    qRegisterMetaType<Outlook::Conflict>("Conflict", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Conflict* Conflicts::GetNext()
{
    Outlook::Conflict* qax_result = 0;
    qRegisterMetaType<Outlook::Conflict*>("Conflict*", &qax_result);
    qRegisterMetaType<Outlook::Conflict>("Conflict", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Conflict* Conflicts::GetPrevious()
{
    Outlook::Conflict* qax_result = 0;
    qRegisterMetaType<Outlook::Conflict*>("Conflict*", &qax_result);
    qRegisterMetaType<Outlook::Conflict>("Conflict", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::Conflict* Conflicts::Item(const QVariant& Index)
{
    Outlook::Conflict* qax_result = 0;
    qRegisterMetaType<Outlook::Conflict*>("Conflict*", &qax_result);
    qRegisterMetaType<Outlook::Conflict>("Conflict", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}


inline Outlook::_Application* Conflict::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Conflict::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* Conflict::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString Conflict::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Conflict::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Conflict::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlObjectClass Conflict::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}


inline QString ContactItem::Account() const
{
    QVariant qax_result = property("Account");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetAccount(const QString& value){ setProperty("Account", QVariant(value)); }

inline Outlook::Actions* ContactItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline QDateTime ContactItem::Anniversary() const
{
    QVariant qax_result = property("Anniversary");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetAnniversary(const QDateTime& value){ setProperty("Anniversary", QVariant(value)); }

inline Outlook::_Application* ContactItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString ContactItem::AssistantName() const
{
    QVariant qax_result = property("AssistantName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetAssistantName(const QString& value){ setProperty("AssistantName", QVariant(value)); }

inline QString ContactItem::AssistantTelephoneNumber() const
{
    QVariant qax_result = property("AssistantTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetAssistantTelephoneNumber(const QString& value){ setProperty("AssistantTelephoneNumber", QVariant(value)); }

inline Outlook::Attachments* ContactItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool ContactItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString ContactItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QDateTime ContactItem::Birthday() const
{
    QVariant qax_result = property("Birthday");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetBirthday(const QDateTime& value){ setProperty("Birthday", QVariant(value)); }

inline QString ContactItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString ContactItem::Business2TelephoneNumber() const
{
    QVariant qax_result = property("Business2TelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusiness2TelephoneNumber(const QString& value){ setProperty("Business2TelephoneNumber", QVariant(value)); }

inline QString ContactItem::BusinessAddress() const
{
    QVariant qax_result = property("BusinessAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddress(const QString& value){ setProperty("BusinessAddress", QVariant(value)); }

inline QString ContactItem::BusinessAddressCity() const
{
    QVariant qax_result = property("BusinessAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressCity(const QString& value){ setProperty("BusinessAddressCity", QVariant(value)); }

inline QString ContactItem::BusinessAddressCountry() const
{
    QVariant qax_result = property("BusinessAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressCountry(const QString& value){ setProperty("BusinessAddressCountry", QVariant(value)); }

inline QString ContactItem::BusinessAddressPostOfficeBox() const
{
    QVariant qax_result = property("BusinessAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressPostOfficeBox(const QString& value){ setProperty("BusinessAddressPostOfficeBox", QVariant(value)); }

inline QString ContactItem::BusinessAddressPostalCode() const
{
    QVariant qax_result = property("BusinessAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressPostalCode(const QString& value){ setProperty("BusinessAddressPostalCode", QVariant(value)); }

inline QString ContactItem::BusinessAddressState() const
{
    QVariant qax_result = property("BusinessAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressState(const QString& value){ setProperty("BusinessAddressState", QVariant(value)); }

inline QString ContactItem::BusinessAddressStreet() const
{
    QVariant qax_result = property("BusinessAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessAddressStreet(const QString& value){ setProperty("BusinessAddressStreet", QVariant(value)); }

inline QString ContactItem::BusinessCardLayoutXml() const
{
    QVariant qax_result = property("BusinessCardLayoutXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessCardLayoutXml(const QString& value){ setProperty("BusinessCardLayoutXml", QVariant(value)); }

inline Outlook::OlBusinessCardType ContactItem::BusinessCardType() const
{
    QVariant qax_result = property("BusinessCardType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBusinessCardType*)qax_result.constData();
}

inline QString ContactItem::BusinessFaxNumber() const
{
    QVariant qax_result = property("BusinessFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessFaxNumber(const QString& value){ setProperty("BusinessFaxNumber", QVariant(value)); }

inline QString ContactItem::BusinessHomePage() const
{
    QVariant qax_result = property("BusinessHomePage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessHomePage(const QString& value){ setProperty("BusinessHomePage", QVariant(value)); }

inline QString ContactItem::BusinessTelephoneNumber() const
{
    QVariant qax_result = property("BusinessTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetBusinessTelephoneNumber(const QString& value){ setProperty("BusinessTelephoneNumber", QVariant(value)); }

inline QString ContactItem::CallbackTelephoneNumber() const
{
    QVariant qax_result = property("CallbackTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCallbackTelephoneNumber(const QString& value){ setProperty("CallbackTelephoneNumber", QVariant(value)); }

inline QString ContactItem::CarTelephoneNumber() const
{
    QVariant qax_result = property("CarTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCarTelephoneNumber(const QString& value){ setProperty("CarTelephoneNumber", QVariant(value)); }

inline QString ContactItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline QString ContactItem::Children() const
{
    QVariant qax_result = property("Children");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetChildren(const QString& value){ setProperty("Children", QVariant(value)); }

inline Outlook::OlObjectClass ContactItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ContactItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline QString ContactItem::CompanyAndFullName() const
{
    QVariant qax_result = property("CompanyAndFullName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::CompanyLastFirstNoSpace() const
{
    QVariant qax_result = property("CompanyLastFirstNoSpace");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::CompanyLastFirstSpaceOnly() const
{
    QVariant qax_result = property("CompanyLastFirstSpaceOnly");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::CompanyMainTelephoneNumber() const
{
    QVariant qax_result = property("CompanyMainTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCompanyMainTelephoneNumber(const QString& value){ setProperty("CompanyMainTelephoneNumber", QVariant(value)); }

inline QString ContactItem::CompanyName() const
{
    QVariant qax_result = property("CompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCompanyName(const QString& value){ setProperty("CompanyName", QVariant(value)); }

inline QString ContactItem::ComputerNetworkName() const
{
    QVariant qax_result = property("ComputerNetworkName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetComputerNetworkName(const QString& value){ setProperty("ComputerNetworkName", QVariant(value)); }

inline Outlook::Conflicts* ContactItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString ContactItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime ContactItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString ContactItem::CustomerID() const
{
    QVariant qax_result = property("CustomerID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetCustomerID(const QString& value){ setProperty("CustomerID", QVariant(value)); }

inline QString ContactItem::Department() const
{
    QVariant qax_result = property("Department");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetDepartment(const QString& value){ setProperty("Department", QVariant(value)); }

inline Outlook::OlDownloadState ContactItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString ContactItem::Email1Address() const
{
    QVariant qax_result = property("Email1Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail1Address(const QString& value){ setProperty("Email1Address", QVariant(value)); }

inline QString ContactItem::Email1AddressType() const
{
    QVariant qax_result = property("Email1AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail1AddressType(const QString& value){ setProperty("Email1AddressType", QVariant(value)); }

inline QString ContactItem::Email1DisplayName() const
{
    QVariant qax_result = property("Email1DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail1DisplayName(const QString& value){ setProperty("Email1DisplayName", QVariant(value)); }

inline QString ContactItem::Email1EntryID() const
{
    QVariant qax_result = property("Email1EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::Email2Address() const
{
    QVariant qax_result = property("Email2Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail2Address(const QString& value){ setProperty("Email2Address", QVariant(value)); }

inline QString ContactItem::Email2AddressType() const
{
    QVariant qax_result = property("Email2AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail2AddressType(const QString& value){ setProperty("Email2AddressType", QVariant(value)); }

inline QString ContactItem::Email2DisplayName() const
{
    QVariant qax_result = property("Email2DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail2DisplayName(const QString& value){ setProperty("Email2DisplayName", QVariant(value)); }

inline QString ContactItem::Email2EntryID() const
{
    QVariant qax_result = property("Email2EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::Email3Address() const
{
    QVariant qax_result = property("Email3Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail3Address(const QString& value){ setProperty("Email3Address", QVariant(value)); }

inline QString ContactItem::Email3AddressType() const
{
    QVariant qax_result = property("Email3AddressType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail3AddressType(const QString& value){ setProperty("Email3AddressType", QVariant(value)); }

inline QString ContactItem::Email3DisplayName() const
{
    QVariant qax_result = property("Email3DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetEmail3DisplayName(const QString& value){ setProperty("Email3DisplayName", QVariant(value)); }

inline QString ContactItem::Email3EntryID() const
{
    QVariant qax_result = property("Email3EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::FTPSite() const
{
    QVariant qax_result = property("FTPSite");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetFTPSite(const QString& value){ setProperty("FTPSite", QVariant(value)); }

inline QString ContactItem::FileAs() const
{
    QVariant qax_result = property("FileAs");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetFileAs(const QString& value){ setProperty("FileAs", QVariant(value)); }

inline QString ContactItem::FirstName() const
{
    QVariant qax_result = property("FirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetFirstName(const QString& value){ setProperty("FirstName", QVariant(value)); }

inline Outlook::FormDescription* ContactItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline QString ContactItem::FullName() const
{
    QVariant qax_result = property("FullName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetFullName(const QString& value){ setProperty("FullName", QVariant(value)); }

inline QString ContactItem::FullNameAndCompany() const
{
    QVariant qax_result = property("FullNameAndCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlGender ContactItem::Gender() const
{
    QVariant qax_result = property("Gender");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGender*)qax_result.constData();
}
inline void ContactItem::SetGender(Outlook::OlGender value){ setProperty("Gender", QVariant(value)); }

inline Outlook::_Inspector* ContactItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString ContactItem::GovernmentIDNumber() const
{
    QVariant qax_result = property("GovernmentIDNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetGovernmentIDNumber(const QString& value){ setProperty("GovernmentIDNumber", QVariant(value)); }

inline bool ContactItem::HasPicture() const
{
    QVariant qax_result = property("HasPicture");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString ContactItem::Hobby() const
{
    QVariant qax_result = property("Hobby");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHobby(const QString& value){ setProperty("Hobby", QVariant(value)); }

inline QString ContactItem::Home2TelephoneNumber() const
{
    QVariant qax_result = property("Home2TelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHome2TelephoneNumber(const QString& value){ setProperty("Home2TelephoneNumber", QVariant(value)); }

inline QString ContactItem::HomeAddress() const
{
    QVariant qax_result = property("HomeAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddress(const QString& value){ setProperty("HomeAddress", QVariant(value)); }

inline QString ContactItem::HomeAddressCity() const
{
    QVariant qax_result = property("HomeAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressCity(const QString& value){ setProperty("HomeAddressCity", QVariant(value)); }

inline QString ContactItem::HomeAddressCountry() const
{
    QVariant qax_result = property("HomeAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressCountry(const QString& value){ setProperty("HomeAddressCountry", QVariant(value)); }

inline QString ContactItem::HomeAddressPostOfficeBox() const
{
    QVariant qax_result = property("HomeAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressPostOfficeBox(const QString& value){ setProperty("HomeAddressPostOfficeBox", QVariant(value)); }

inline QString ContactItem::HomeAddressPostalCode() const
{
    QVariant qax_result = property("HomeAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressPostalCode(const QString& value){ setProperty("HomeAddressPostalCode", QVariant(value)); }

inline QString ContactItem::HomeAddressState() const
{
    QVariant qax_result = property("HomeAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressState(const QString& value){ setProperty("HomeAddressState", QVariant(value)); }

inline QString ContactItem::HomeAddressStreet() const
{
    QVariant qax_result = property("HomeAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeAddressStreet(const QString& value){ setProperty("HomeAddressStreet", QVariant(value)); }

inline QString ContactItem::HomeFaxNumber() const
{
    QVariant qax_result = property("HomeFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeFaxNumber(const QString& value){ setProperty("HomeFaxNumber", QVariant(value)); }

inline QString ContactItem::HomeTelephoneNumber() const
{
    QVariant qax_result = property("HomeTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetHomeTelephoneNumber(const QString& value){ setProperty("HomeTelephoneNumber", QVariant(value)); }

inline QString ContactItem::IMAddress() const
{
    QVariant qax_result = property("IMAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetIMAddress(const QString& value){ setProperty("IMAddress", QVariant(value)); }

inline QString ContactItem::ISDNNumber() const
{
    QVariant qax_result = property("ISDNNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetISDNNumber(const QString& value){ setProperty("ISDNNumber", QVariant(value)); }

inline Outlook::OlImportance ContactItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void ContactItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline QString ContactItem::Initials() const
{
    QVariant qax_result = property("Initials");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetInitials(const QString& value){ setProperty("Initials", QVariant(value)); }

inline QString ContactItem::InternetFreeBusyAddress() const
{
    QVariant qax_result = property("InternetFreeBusyAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetInternetFreeBusyAddress(const QString& value){ setProperty("InternetFreeBusyAddress", QVariant(value)); }

inline bool ContactItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool ContactItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* ContactItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QString ContactItem::JobTitle() const
{
    QVariant qax_result = property("JobTitle");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetJobTitle(const QString& value){ setProperty("JobTitle", QVariant(value)); }

inline bool ContactItem::Journal() const
{
    QVariant qax_result = property("Journal");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetJournal(bool value){ setProperty("Journal", QVariant(value)); }

inline QString ContactItem::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline QString ContactItem::LastFirstAndSuffix() const
{
    QVariant qax_result = property("LastFirstAndSuffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::LastFirstNoSpace() const
{
    QVariant qax_result = property("LastFirstNoSpace");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::LastFirstNoSpaceAndSuffix() const
{
    QVariant qax_result = property("LastFirstNoSpaceAndSuffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::LastFirstNoSpaceCompany() const
{
    QVariant qax_result = property("LastFirstNoSpaceCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::LastFirstSpaceOnly() const
{
    QVariant qax_result = property("LastFirstSpaceOnly");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::LastFirstSpaceOnlyCompany() const
{
    QVariant qax_result = property("LastFirstSpaceOnlyCompany");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime ContactItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString ContactItem::LastName() const
{
    QVariant qax_result = property("LastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetLastName(const QString& value){ setProperty("LastName", QVariant(value)); }

inline QString ContactItem::LastNameAndFirstName() const
{
    QVariant qax_result = property("LastNameAndFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Links* ContactItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* ContactItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString ContactItem::MailingAddress() const
{
    QVariant qax_result = property("MailingAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddress(const QString& value){ setProperty("MailingAddress", QVariant(value)); }

inline QString ContactItem::MailingAddressCity() const
{
    QVariant qax_result = property("MailingAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressCity(const QString& value){ setProperty("MailingAddressCity", QVariant(value)); }

inline QString ContactItem::MailingAddressCountry() const
{
    QVariant qax_result = property("MailingAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressCountry(const QString& value){ setProperty("MailingAddressCountry", QVariant(value)); }

inline QString ContactItem::MailingAddressPostOfficeBox() const
{
    QVariant qax_result = property("MailingAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressPostOfficeBox(const QString& value){ setProperty("MailingAddressPostOfficeBox", QVariant(value)); }

inline QString ContactItem::MailingAddressPostalCode() const
{
    QVariant qax_result = property("MailingAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressPostalCode(const QString& value){ setProperty("MailingAddressPostalCode", QVariant(value)); }

inline QString ContactItem::MailingAddressState() const
{
    QVariant qax_result = property("MailingAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressState(const QString& value){ setProperty("MailingAddressState", QVariant(value)); }

inline QString ContactItem::MailingAddressStreet() const
{
    QVariant qax_result = property("MailingAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMailingAddressStreet(const QString& value){ setProperty("MailingAddressStreet", QVariant(value)); }

inline QString ContactItem::ManagerName() const
{
    QVariant qax_result = property("ManagerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetManagerName(const QString& value){ setProperty("ManagerName", QVariant(value)); }

inline Outlook::OlRemoteStatus ContactItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void ContactItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString ContactItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString ContactItem::MiddleName() const
{
    QVariant qax_result = property("MiddleName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMiddleName(const QString& value){ setProperty("MiddleName", QVariant(value)); }

inline QString ContactItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline QString ContactItem::MobileTelephoneNumber() const
{
    QVariant qax_result = property("MobileTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetMobileTelephoneNumber(const QString& value){ setProperty("MobileTelephoneNumber", QVariant(value)); }

inline QString ContactItem::NetMeetingAlias() const
{
    QVariant qax_result = property("NetMeetingAlias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetNetMeetingAlias(const QString& value){ setProperty("NetMeetingAlias", QVariant(value)); }

inline QString ContactItem::NetMeetingServer() const
{
    QVariant qax_result = property("NetMeetingServer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetNetMeetingServer(const QString& value){ setProperty("NetMeetingServer", QVariant(value)); }

inline QString ContactItem::NickName() const
{
    QVariant qax_result = property("NickName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetNickName(const QString& value){ setProperty("NickName", QVariant(value)); }

inline bool ContactItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QString ContactItem::OfficeLocation() const
{
    QVariant qax_result = property("OfficeLocation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOfficeLocation(const QString& value){ setProperty("OfficeLocation", QVariant(value)); }

inline QString ContactItem::OrganizationalIDNumber() const
{
    QVariant qax_result = property("OrganizationalIDNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOrganizationalIDNumber(const QString& value){ setProperty("OrganizationalIDNumber", QVariant(value)); }

inline QString ContactItem::OtherAddress() const
{
    QVariant qax_result = property("OtherAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddress(const QString& value){ setProperty("OtherAddress", QVariant(value)); }

inline QString ContactItem::OtherAddressCity() const
{
    QVariant qax_result = property("OtherAddressCity");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressCity(const QString& value){ setProperty("OtherAddressCity", QVariant(value)); }

inline QString ContactItem::OtherAddressCountry() const
{
    QVariant qax_result = property("OtherAddressCountry");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressCountry(const QString& value){ setProperty("OtherAddressCountry", QVariant(value)); }

inline QString ContactItem::OtherAddressPostOfficeBox() const
{
    QVariant qax_result = property("OtherAddressPostOfficeBox");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressPostOfficeBox(const QString& value){ setProperty("OtherAddressPostOfficeBox", QVariant(value)); }

inline QString ContactItem::OtherAddressPostalCode() const
{
    QVariant qax_result = property("OtherAddressPostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressPostalCode(const QString& value){ setProperty("OtherAddressPostalCode", QVariant(value)); }

inline QString ContactItem::OtherAddressState() const
{
    QVariant qax_result = property("OtherAddressState");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressState(const QString& value){ setProperty("OtherAddressState", QVariant(value)); }

inline QString ContactItem::OtherAddressStreet() const
{
    QVariant qax_result = property("OtherAddressStreet");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherAddressStreet(const QString& value){ setProperty("OtherAddressStreet", QVariant(value)); }

inline QString ContactItem::OtherFaxNumber() const
{
    QVariant qax_result = property("OtherFaxNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherFaxNumber(const QString& value){ setProperty("OtherFaxNumber", QVariant(value)); }

inline QString ContactItem::OtherTelephoneNumber() const
{
    QVariant qax_result = property("OtherTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetOtherTelephoneNumber(const QString& value){ setProperty("OtherTelephoneNumber", QVariant(value)); }

inline int ContactItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ContactItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ContactItem::PagerNumber() const
{
    QVariant qax_result = property("PagerNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetPagerNumber(const QString& value){ setProperty("PagerNumber", QVariant(value)); }

inline IDispatch* ContactItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ContactItem::PersonalHomePage() const
{
    QVariant qax_result = property("PersonalHomePage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetPersonalHomePage(const QString& value){ setProperty("PersonalHomePage", QVariant(value)); }

inline QString ContactItem::PrimaryTelephoneNumber() const
{
    QVariant qax_result = property("PrimaryTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetPrimaryTelephoneNumber(const QString& value){ setProperty("PrimaryTelephoneNumber", QVariant(value)); }

inline QString ContactItem::Profession() const
{
    QVariant qax_result = property("Profession");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetProfession(const QString& value){ setProperty("Profession", QVariant(value)); }

inline Outlook::PropertyAccessor* ContactItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant ContactItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void ContactItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QString ContactItem::RadioTelephoneNumber() const
{
    QVariant qax_result = property("RadioTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetRadioTelephoneNumber(const QString& value){ setProperty("RadioTelephoneNumber", QVariant(value)); }

inline QString ContactItem::ReferredBy() const
{
    QVariant qax_result = property("ReferredBy");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetReferredBy(const QString& value){ setProperty("ReferredBy", QVariant(value)); }

inline bool ContactItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool ContactItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool ContactItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString ContactItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime ContactItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool ContactItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlMailingAddress ContactItem::SelectedMailingAddress() const
{
    QVariant qax_result = property("SelectedMailingAddress");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMailingAddress*)qax_result.constData();
}
inline void ContactItem::SetSelectedMailingAddress(Outlook::OlMailingAddress value){ setProperty("SelectedMailingAddress", QVariant(value)); }

inline Outlook::OlSensitivity ContactItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void ContactItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* ContactItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int ContactItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ContactItem::Spouse() const
{
    QVariant qax_result = property("Spouse");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetSpouse(const QString& value){ setProperty("Spouse", QVariant(value)); }

inline QString ContactItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QString ContactItem::Suffix() const
{
    QVariant qax_result = property("Suffix");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetSuffix(const QString& value){ setProperty("Suffix", QVariant(value)); }

inline QString ContactItem::TTYTDDTelephoneNumber() const
{
    QVariant qax_result = property("TTYTDDTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetTTYTDDTelephoneNumber(const QString& value){ setProperty("TTYTDDTelephoneNumber", QVariant(value)); }

inline QDateTime ContactItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime ContactItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime ContactItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString ContactItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString ContactItem::TelexNumber() const
{
    QVariant qax_result = property("TelexNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetTelexNumber(const QString& value){ setProperty("TelexNumber", QVariant(value)); }

inline QString ContactItem::Title() const
{
    QVariant qax_result = property("Title");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetTitle(const QString& value){ setProperty("Title", QVariant(value)); }

inline QDateTime ContactItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void ContactItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool ContactItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline QString ContactItem::User1() const
{
    QVariant qax_result = property("User1");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetUser1(const QString& value){ setProperty("User1", QVariant(value)); }

inline QString ContactItem::User2() const
{
    QVariant qax_result = property("User2");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetUser2(const QString& value){ setProperty("User2", QVariant(value)); }

inline QString ContactItem::User3() const
{
    QVariant qax_result = property("User3");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetUser3(const QString& value){ setProperty("User3", QVariant(value)); }

inline QString ContactItem::User4() const
{
    QVariant qax_result = property("User4");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetUser4(const QString& value){ setProperty("User4", QVariant(value)); }

inline QString ContactItem::UserCertificate() const
{
    QVariant qax_result = property("UserCertificate");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetUserCertificate(const QString& value){ setProperty("UserCertificate", QVariant(value)); }

inline Outlook::UserProperties* ContactItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline QString ContactItem::WebPage() const
{
    QVariant qax_result = property("WebPage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetWebPage(const QString& value){ setProperty("WebPage", QVariant(value)); }

inline QString ContactItem::YomiCompanyName() const
{
    QVariant qax_result = property("YomiCompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetYomiCompanyName(const QString& value){ setProperty("YomiCompanyName", QVariant(value)); }

inline QString ContactItem::YomiFirstName() const
{
    QVariant qax_result = property("YomiFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetYomiFirstName(const QString& value){ setProperty("YomiFirstName", QVariant(value)); }

inline QString ContactItem::YomiLastName() const
{
    QVariant qax_result = property("YomiLastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ContactItem::SetYomiLastName(const QString& value){ setProperty("YomiLastName", QVariant(value)); }

inline void ContactItem::AddBusinessCardLogoPicture(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void ContactItem::AddPicture(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void ContactItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void ContactItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline IDispatch* ContactItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void ContactItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void ContactItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void ContactItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline Outlook::MailItem* ContactItem::ForwardAsBusinessCard()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::MailItem* ContactItem::ForwardAsVcard()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline Outlook::_Conversation* ContactItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void ContactItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline IDispatch* ContactItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline void ContactItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void ContactItem::RemovePicture()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void ContactItem::ResetBusinessCard()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void ContactItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void ContactItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void ContactItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void ContactItem::SaveBusinessCardImage(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void ContactItem::ShowBusinessCardEditor()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 181, _a);
}

inline void ContactItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 182, _a);
}

inline void ContactItem::ShowCheckAddressDialog(Outlook::OlMailingAddress MailingAddress)
{
    void *_a[] = {0, (void*)&MailingAddress};
    qt_metacall(QMetaObject::InvokeMetaMethod, 183, _a);
}

inline void ContactItem::ShowCheckFullNameDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 184, _a);
}

inline void ContactItem::ShowCheckPhoneDialog(Outlook::OlContactPhoneNumber PhoneNumber)
{
    void *_a[] = {0, (void*)&PhoneNumber};
    qt_metacall(QMetaObject::InvokeMetaMethod, 185, _a);
}


inline Outlook::_Application* _Conversation::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Conversation::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _Conversation::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _Conversation::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Conversation::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void _Conversation::ClearAlwaysAssignCategories(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString _Conversation::GetAlwaysAssignCategories(Outlook::_Store* Store)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline OlAlwaysDeleteConversation _Conversation::GetAlwaysDelete(Outlook::_Store* Store)
{
    OlAlwaysDeleteConversation qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _Conversation::GetAlwaysMoveToFolder(Outlook::_Store* Store)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::SimpleItems* _Conversation::GetChildren(IDispatch* Item)
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline IDispatch* _Conversation::GetParent(IDispatch* Item)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::SimpleItems* _Conversation::GetRootItems()
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::Table* _Conversation::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _Conversation::MarkAsRead()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _Conversation::MarkAsUnread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _Conversation::SetAlwaysAssignCategories(const QString& Categories, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Categories, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _Conversation::SetAlwaysDelete(Outlook::OlAlwaysDeleteConversation AlwaysDelete, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&AlwaysDelete, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _Conversation::SetAlwaysMoveToFolder(Outlook::MAPIFolder* MoveToFolder, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&MoveToFolder, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _Conversation::StopAlwaysDelete(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _Conversation::StopAlwaysMoveToFolder(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}


inline Outlook::_Application* SimpleItems::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SimpleItems::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int SimpleItems::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* SimpleItems::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* SimpleItems::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* SimpleItems::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* _SimpleItems::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SimpleItems::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _SimpleItems::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _SimpleItems::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _SimpleItems::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* _SimpleItems::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* UserDefinedProperties::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass UserDefinedProperties::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int UserDefinedProperties::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* UserDefinedProperties::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* UserDefinedProperties::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::UserDefinedProperty* UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&DisplayFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat, const QVariant& Formula)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&DisplayFormat, (void*)&Formula};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* UserDefinedProperties::Find(const QString& Name)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::_UserDefinedProperty* UserDefinedProperties::Item(const QVariant& Index)
{
    Outlook::_UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::_UserDefinedProperty*>("_UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::_UserDefinedProperty>("_UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void UserDefinedProperties::Refresh()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void UserDefinedProperties::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _UserDefinedProperties::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _UserDefinedProperties::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _UserDefinedProperties::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _UserDefinedProperties::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _UserDefinedProperties::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::UserDefinedProperty* _UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* _UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&DisplayFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* _UserDefinedProperties::Add(const QString& Name, Outlook::OlUserPropertyType Type, const QVariant& DisplayFormat, const QVariant& Formula)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type, (void*)&DisplayFormat, (void*)&Formula};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::UserDefinedProperty* _UserDefinedProperties::Find(const QString& Name)
{
    Outlook::UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::UserDefinedProperty*>("UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::UserDefinedProperty>("UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::_UserDefinedProperty* _UserDefinedProperties::Item(const QVariant& Index)
{
    Outlook::_UserDefinedProperty* qax_result = 0;
    qRegisterMetaType<Outlook::_UserDefinedProperty*>("_UserDefinedProperty*", &qax_result);
    qRegisterMetaType<Outlook::_UserDefinedProperty>("_UserDefinedProperty", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _UserDefinedProperties::Refresh()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _UserDefinedProperties::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _UserDefinedProperty::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _UserDefinedProperty::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _UserDefinedProperty::DisplayFormat() const
{
    QVariant qax_result = property("DisplayFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _UserDefinedProperty::Formula() const
{
    QVariant qax_result = property("Formula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _UserDefinedProperty::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _UserDefinedProperty::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _UserDefinedProperty::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlUserPropertyType _UserDefinedProperty::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline void _UserDefinedProperty::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* UserDefinedProperty::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass UserDefinedProperty::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int UserDefinedProperty::DisplayFormat() const
{
    QVariant qax_result = property("DisplayFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString UserDefinedProperty::Formula() const
{
    QVariant qax_result = property("Formula");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString UserDefinedProperty::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* UserDefinedProperty::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* UserDefinedProperty::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlUserPropertyType UserDefinedProperty::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline void UserDefinedProperty::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline QString ExchangeUser::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline Outlook::OlAddressEntryUserType ExchangeUser::AddressEntryUserType() const
{
    QVariant qax_result = property("AddressEntryUserType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressEntryUserType*)qax_result.constData();
}

inline QString ExchangeUser::Alias() const
{
    QVariant qax_result = property("Alias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Application* ExchangeUser::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString ExchangeUser::AssistantName() const
{
    QVariant qax_result = property("AssistantName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetAssistantName(const QString& value){ setProperty("AssistantName", QVariant(value)); }

inline QString ExchangeUser::BusinessTelephoneNumber() const
{
    QVariant qax_result = property("BusinessTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetBusinessTelephoneNumber(const QString& value){ setProperty("BusinessTelephoneNumber", QVariant(value)); }

inline QString ExchangeUser::City() const
{
    QVariant qax_result = property("City");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetCity(const QString& value){ setProperty("City", QVariant(value)); }

inline Outlook::OlObjectClass ExchangeUser::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ExchangeUser::Comments() const
{
    QVariant qax_result = property("Comments");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetComments(const QString& value){ setProperty("Comments", QVariant(value)); }

inline QString ExchangeUser::CompanyName() const
{
    QVariant qax_result = property("CompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetCompanyName(const QString& value){ setProperty("CompanyName", QVariant(value)); }

inline QString ExchangeUser::Department() const
{
    QVariant qax_result = property("Department");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetDepartment(const QString& value){ setProperty("Department", QVariant(value)); }

inline Outlook::OlDisplayType ExchangeUser::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString ExchangeUser::FirstName() const
{
    QVariant qax_result = property("FirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetFirstName(const QString& value){ setProperty("FirstName", QVariant(value)); }

inline QString ExchangeUser::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ExchangeUser::JobTitle() const
{
    QVariant qax_result = property("JobTitle");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetJobTitle(const QString& value){ setProperty("JobTitle", QVariant(value)); }

inline QString ExchangeUser::LastName() const
{
    QVariant qax_result = property("LastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetLastName(const QString& value){ setProperty("LastName", QVariant(value)); }

inline IUnknown* ExchangeUser::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void ExchangeUser::SetMAPIOBJECT(IUnknown* value){
    int typeId = qRegisterMetaType<IUnknown*>("IUnknown*", &value);
    setProperty("MAPIOBJECT", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* ExchangeUser::Manager() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Manager");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}

inline Outlook::AddressEntries* ExchangeUser::Members() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline QString ExchangeUser::MobileTelephoneNumber() const
{
    QVariant qax_result = property("MobileTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetMobileTelephoneNumber(const QString& value){ setProperty("MobileTelephoneNumber", QVariant(value)); }

inline QString ExchangeUser::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline QString ExchangeUser::OfficeLocation() const
{
    QVariant qax_result = property("OfficeLocation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetOfficeLocation(const QString& value){ setProperty("OfficeLocation", QVariant(value)); }

inline IDispatch* ExchangeUser::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ExchangeUser::PostalCode() const
{
    QVariant qax_result = property("PostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetPostalCode(const QString& value){ setProperty("PostalCode", QVariant(value)); }

inline QString ExchangeUser::PrimarySmtpAddress() const
{
    QVariant qax_result = property("PrimarySmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::PropertyAccessor* ExchangeUser::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* ExchangeUser::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString ExchangeUser::StateOrProvince() const
{
    QVariant qax_result = property("StateOrProvince");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetStateOrProvince(const QString& value){ setProperty("StateOrProvince", QVariant(value)); }

inline QString ExchangeUser::StreetAddress() const
{
    QVariant qax_result = property("StreetAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetStreetAddress(const QString& value){ setProperty("StreetAddress", QVariant(value)); }

inline QString ExchangeUser::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline QString ExchangeUser::YomiCompanyName() const
{
    QVariant qax_result = property("YomiCompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetYomiCompanyName(const QString& value){ setProperty("YomiCompanyName", QVariant(value)); }

inline QString ExchangeUser::YomiDepartment() const
{
    QVariant qax_result = property("YomiDepartment");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetYomiDepartment(const QString& value){ setProperty("YomiDepartment", QVariant(value)); }

inline QString ExchangeUser::YomiDisplayName() const
{
    QVariant qax_result = property("YomiDisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetYomiDisplayName(const QString& value){ setProperty("YomiDisplayName", QVariant(value)); }

inline QString ExchangeUser::YomiFirstName() const
{
    QVariant qax_result = property("YomiFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetYomiFirstName(const QString& value){ setProperty("YomiFirstName", QVariant(value)); }

inline QString ExchangeUser::YomiLastName() const
{
    QVariant qax_result = property("YomiLastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeUser::SetYomiLastName(const QString& value){ setProperty("YomiLastName", QVariant(value)); }

inline void ExchangeUser::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ExchangeUser::Details()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ExchangeUser::Details(const QVariant& HWnd)
{
    void *_a[] = {0, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Outlook::_ContactItem* ExchangeUser::GetContact()
{
    Outlook::_ContactItem* qax_result = 0;
    qRegisterMetaType<Outlook::_ContactItem*>("_ContactItem*", &qax_result);
    qRegisterMetaType<Outlook::_ContactItem>("_ContactItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::AddressEntries* ExchangeUser::GetDirectReports()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::ExchangeDistributionList* ExchangeUser::GetExchangeDistributionList()
{
    Outlook::ExchangeDistributionList* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeDistributionList*>("ExchangeDistributionList*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeDistributionList>("ExchangeDistributionList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* ExchangeUser::GetExchangeUser()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* ExchangeUser::GetExchangeUserManager()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString ExchangeUser::GetFreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QString ExchangeUser::GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::AddressEntries* ExchangeUser::GetMemberOfList()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QPixmap ExchangeUser::GetPicture()
{
    QPixmap qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* ExchangeUser::GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* ExchangeUser::GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType, (void*)&StoreID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool ExchangeUser::IsUnifiedGroup()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void ExchangeUser::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void ExchangeUser::Update(const QVariant& MakePermanent)
{
    void *_a[] = {0, (void*)&MakePermanent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void ExchangeUser::Update(const QVariant& MakePermanent, const QVariant& Refresh)
{
    void *_a[] = {0, (void*)&MakePermanent, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void ExchangeUser::UpdateFreeBusy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}


inline QString _ExchangeUser::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline Outlook::OlAddressEntryUserType _ExchangeUser::AddressEntryUserType() const
{
    QVariant qax_result = property("AddressEntryUserType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressEntryUserType*)qax_result.constData();
}

inline QString _ExchangeUser::Alias() const
{
    QVariant qax_result = property("Alias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Application* _ExchangeUser::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString _ExchangeUser::AssistantName() const
{
    QVariant qax_result = property("AssistantName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetAssistantName(const QString& value){ setProperty("AssistantName", QVariant(value)); }

inline QString _ExchangeUser::BusinessTelephoneNumber() const
{
    QVariant qax_result = property("BusinessTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetBusinessTelephoneNumber(const QString& value){ setProperty("BusinessTelephoneNumber", QVariant(value)); }

inline QString _ExchangeUser::City() const
{
    QVariant qax_result = property("City");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetCity(const QString& value){ setProperty("City", QVariant(value)); }

inline Outlook::OlObjectClass _ExchangeUser::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ExchangeUser::Comments() const
{
    QVariant qax_result = property("Comments");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetComments(const QString& value){ setProperty("Comments", QVariant(value)); }

inline QString _ExchangeUser::CompanyName() const
{
    QVariant qax_result = property("CompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetCompanyName(const QString& value){ setProperty("CompanyName", QVariant(value)); }

inline QString _ExchangeUser::Department() const
{
    QVariant qax_result = property("Department");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetDepartment(const QString& value){ setProperty("Department", QVariant(value)); }

inline Outlook::OlDisplayType _ExchangeUser::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString _ExchangeUser::FirstName() const
{
    QVariant qax_result = property("FirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetFirstName(const QString& value){ setProperty("FirstName", QVariant(value)); }

inline QString _ExchangeUser::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ExchangeUser::JobTitle() const
{
    QVariant qax_result = property("JobTitle");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetJobTitle(const QString& value){ setProperty("JobTitle", QVariant(value)); }

inline QString _ExchangeUser::LastName() const
{
    QVariant qax_result = property("LastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetLastName(const QString& value){ setProperty("LastName", QVariant(value)); }

inline IUnknown* _ExchangeUser::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void _ExchangeUser::SetMAPIOBJECT(IUnknown* value){
    int typeId = qRegisterMetaType<IUnknown*>("IUnknown*", &value);
    setProperty("MAPIOBJECT", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* _ExchangeUser::Manager() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Manager");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}

inline Outlook::AddressEntries* _ExchangeUser::Members() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline QString _ExchangeUser::MobileTelephoneNumber() const
{
    QVariant qax_result = property("MobileTelephoneNumber");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetMobileTelephoneNumber(const QString& value){ setProperty("MobileTelephoneNumber", QVariant(value)); }

inline QString _ExchangeUser::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline QString _ExchangeUser::OfficeLocation() const
{
    QVariant qax_result = property("OfficeLocation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetOfficeLocation(const QString& value){ setProperty("OfficeLocation", QVariant(value)); }

inline IDispatch* _ExchangeUser::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString _ExchangeUser::PostalCode() const
{
    QVariant qax_result = property("PostalCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetPostalCode(const QString& value){ setProperty("PostalCode", QVariant(value)); }

inline QString _ExchangeUser::PrimarySmtpAddress() const
{
    QVariant qax_result = property("PrimarySmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::PropertyAccessor* _ExchangeUser::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* _ExchangeUser::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _ExchangeUser::StateOrProvince() const
{
    QVariant qax_result = property("StateOrProvince");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetStateOrProvince(const QString& value){ setProperty("StateOrProvince", QVariant(value)); }

inline QString _ExchangeUser::StreetAddress() const
{
    QVariant qax_result = property("StreetAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetStreetAddress(const QString& value){ setProperty("StreetAddress", QVariant(value)); }

inline QString _ExchangeUser::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline QString _ExchangeUser::YomiCompanyName() const
{
    QVariant qax_result = property("YomiCompanyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetYomiCompanyName(const QString& value){ setProperty("YomiCompanyName", QVariant(value)); }

inline QString _ExchangeUser::YomiDepartment() const
{
    QVariant qax_result = property("YomiDepartment");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetYomiDepartment(const QString& value){ setProperty("YomiDepartment", QVariant(value)); }

inline QString _ExchangeUser::YomiDisplayName() const
{
    QVariant qax_result = property("YomiDisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetYomiDisplayName(const QString& value){ setProperty("YomiDisplayName", QVariant(value)); }

inline QString _ExchangeUser::YomiFirstName() const
{
    QVariant qax_result = property("YomiFirstName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetYomiFirstName(const QString& value){ setProperty("YomiFirstName", QVariant(value)); }

inline QString _ExchangeUser::YomiLastName() const
{
    QVariant qax_result = property("YomiLastName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeUser::SetYomiLastName(const QString& value){ setProperty("YomiLastName", QVariant(value)); }

inline void _ExchangeUser::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _ExchangeUser::Details()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _ExchangeUser::Details(const QVariant& HWnd)
{
    void *_a[] = {0, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Outlook::_ContactItem* _ExchangeUser::GetContact()
{
    Outlook::_ContactItem* qax_result = 0;
    qRegisterMetaType<Outlook::_ContactItem*>("_ContactItem*", &qax_result);
    qRegisterMetaType<Outlook::_ContactItem>("_ContactItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::AddressEntries* _ExchangeUser::GetDirectReports()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::ExchangeDistributionList* _ExchangeUser::GetExchangeDistributionList()
{
    Outlook::ExchangeDistributionList* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeDistributionList*>("ExchangeDistributionList*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeDistributionList>("ExchangeDistributionList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* _ExchangeUser::GetExchangeUser()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* _ExchangeUser::GetExchangeUserManager()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString _ExchangeUser::GetFreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline QString _ExchangeUser::GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::AddressEntries* _ExchangeUser::GetMemberOfList()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QPixmap _ExchangeUser::GetPicture()
{
    QPixmap qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _ExchangeUser::GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _ExchangeUser::GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType, (void*)&StoreID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool _ExchangeUser::IsUnifiedGroup()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void _ExchangeUser::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void _ExchangeUser::Update(const QVariant& MakePermanent)
{
    void *_a[] = {0, (void*)&MakePermanent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void _ExchangeUser::Update(const QVariant& MakePermanent, const QVariant& Refresh)
{
    void *_a[] = {0, (void*)&MakePermanent, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void _ExchangeUser::UpdateFreeBusy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}


inline QString ExchangeDistributionList::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeDistributionList::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline Outlook::OlAddressEntryUserType ExchangeDistributionList::AddressEntryUserType() const
{
    QVariant qax_result = property("AddressEntryUserType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressEntryUserType*)qax_result.constData();
}

inline QString ExchangeDistributionList::Alias() const
{
    QVariant qax_result = property("Alias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Application* ExchangeDistributionList::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ExchangeDistributionList::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ExchangeDistributionList::Comments() const
{
    QVariant qax_result = property("Comments");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeDistributionList::SetComments(const QString& value){ setProperty("Comments", QVariant(value)); }

inline Outlook::OlDisplayType ExchangeDistributionList::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString ExchangeDistributionList::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IUnknown* ExchangeDistributionList::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void ExchangeDistributionList::SetMAPIOBJECT(IUnknown* value){
    int typeId = qRegisterMetaType<IUnknown*>("IUnknown*", &value);
    setProperty("MAPIOBJECT", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* ExchangeDistributionList::Manager() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Manager");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}

inline Outlook::AddressEntries* ExchangeDistributionList::Members() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline QString ExchangeDistributionList::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeDistributionList::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* ExchangeDistributionList::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString ExchangeDistributionList::PrimarySmtpAddress() const
{
    QVariant qax_result = property("PrimarySmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::PropertyAccessor* ExchangeDistributionList::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* ExchangeDistributionList::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString ExchangeDistributionList::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ExchangeDistributionList::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline void ExchangeDistributionList::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void ExchangeDistributionList::Details()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void ExchangeDistributionList::Details(const QVariant& HWnd)
{
    void *_a[] = {0, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Outlook::_ContactItem* ExchangeDistributionList::GetContact()
{
    Outlook::_ContactItem* qax_result = 0;
    qRegisterMetaType<Outlook::_ContactItem*>("_ContactItem*", &qax_result);
    qRegisterMetaType<Outlook::_ContactItem>("_ContactItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::ExchangeDistributionList* ExchangeDistributionList::GetExchangeDistributionList()
{
    Outlook::ExchangeDistributionList* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeDistributionList*>("ExchangeDistributionList*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeDistributionList>("ExchangeDistributionList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::AddressEntries* ExchangeDistributionList::GetExchangeDistributionListMembers()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* ExchangeDistributionList::GetExchangeUser()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString ExchangeDistributionList::GetFreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString ExchangeDistributionList::GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::AddressEntries* ExchangeDistributionList::GetMemberOfList()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::AddressEntries* ExchangeDistributionList::GetOwners()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* ExchangeDistributionList::GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* ExchangeDistributionList::GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType, (void*)&StoreID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline bool ExchangeDistributionList::IsUnifiedGroup()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void ExchangeDistributionList::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void ExchangeDistributionList::Update(const QVariant& MakePermanent)
{
    void *_a[] = {0, (void*)&MakePermanent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void ExchangeDistributionList::Update(const QVariant& MakePermanent, const QVariant& Refresh)
{
    void *_a[] = {0, (void*)&MakePermanent, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void ExchangeDistributionList::UpdateFreeBusy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}


inline QString _ExchangeDistributionList::Address() const
{
    QVariant qax_result = property("Address");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeDistributionList::SetAddress(const QString& value){ setProperty("Address", QVariant(value)); }

inline Outlook::OlAddressEntryUserType _ExchangeDistributionList::AddressEntryUserType() const
{
    QVariant qax_result = property("AddressEntryUserType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAddressEntryUserType*)qax_result.constData();
}

inline QString _ExchangeDistributionList::Alias() const
{
    QVariant qax_result = property("Alias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Application* _ExchangeDistributionList::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ExchangeDistributionList::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ExchangeDistributionList::Comments() const
{
    QVariant qax_result = property("Comments");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeDistributionList::SetComments(const QString& value){ setProperty("Comments", QVariant(value)); }

inline Outlook::OlDisplayType _ExchangeDistributionList::DisplayType() const
{
    QVariant qax_result = property("DisplayType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayType*)qax_result.constData();
}

inline QString _ExchangeDistributionList::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IUnknown* _ExchangeDistributionList::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}
inline void _ExchangeDistributionList::SetMAPIOBJECT(IUnknown* value){
    int typeId = qRegisterMetaType<IUnknown*>("IUnknown*", &value);
    setProperty("MAPIOBJECT", QVariant(typeId, &value));
}

inline Outlook::AddressEntry* _ExchangeDistributionList::Manager() const
{
    Outlook::AddressEntry* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_pointer);
    QVariant qax_result = property("Manager");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntry**)qax_result.constData();
}

inline Outlook::AddressEntries* _ExchangeDistributionList::Members() const
{
    Outlook::AddressEntries* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_pointer);
    QVariant qax_result = property("Members");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressEntries**)qax_result.constData();
}

inline QString _ExchangeDistributionList::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeDistributionList::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _ExchangeDistributionList::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QString _ExchangeDistributionList::PrimarySmtpAddress() const
{
    QVariant qax_result = property("PrimarySmtpAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::PropertyAccessor* _ExchangeDistributionList::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* _ExchangeDistributionList::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _ExchangeDistributionList::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ExchangeDistributionList::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline void _ExchangeDistributionList::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _ExchangeDistributionList::Details()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _ExchangeDistributionList::Details(const QVariant& HWnd)
{
    void *_a[] = {0, (void*)&HWnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline Outlook::_ContactItem* _ExchangeDistributionList::GetContact()
{
    Outlook::_ContactItem* qax_result = 0;
    qRegisterMetaType<Outlook::_ContactItem*>("_ContactItem*", &qax_result);
    qRegisterMetaType<Outlook::_ContactItem>("_ContactItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::ExchangeDistributionList* _ExchangeDistributionList::GetExchangeDistributionList()
{
    Outlook::ExchangeDistributionList* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeDistributionList*>("ExchangeDistributionList*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeDistributionList>("ExchangeDistributionList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::AddressEntries* _ExchangeDistributionList::GetExchangeDistributionListMembers()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::ExchangeUser* _ExchangeDistributionList::GetExchangeUser()
{
    Outlook::ExchangeUser* qax_result = 0;
    qRegisterMetaType<Outlook::ExchangeUser*>("ExchangeUser*", &qax_result);
    qRegisterMetaType<Outlook::ExchangeUser>("ExchangeUser", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString _ExchangeDistributionList::GetFreeBusy(const QDateTime& Start, int MinPerChar)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString _ExchangeDistributionList::GetFreeBusy(const QDateTime& Start, int MinPerChar, const QVariant& CompleteFormat)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Start, (void*)&MinPerChar, (void*)&CompleteFormat};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::AddressEntries* _ExchangeDistributionList::GetMemberOfList()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::AddressEntries* _ExchangeDistributionList::GetOwners()
{
    Outlook::AddressEntries* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntries*>("AddressEntries*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntries>("AddressEntries", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _ExchangeDistributionList::GetUnifiedGroup(Outlook::OlUnifiedGroupFolderType GroupType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _ExchangeDistributionList::GetUnifiedGroupFromStore(Outlook::OlUnifiedGroupFolderType GroupType, const QString& StoreID)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupType, (void*)&StoreID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline bool _ExchangeDistributionList::IsUnifiedGroup()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void _ExchangeDistributionList::Update()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _ExchangeDistributionList::Update(const QVariant& MakePermanent)
{
    void *_a[] = {0, (void*)&MakePermanent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _ExchangeDistributionList::Update(const QVariant& MakePermanent, const QVariant& Refresh)
{
    void *_a[] = {0, (void*)&MakePermanent, (void*)&Refresh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void _ExchangeDistributionList::UpdateFreeBusy()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}


inline Outlook::_Application* AddressLists::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AddressLists::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int AddressLists::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* AddressLists::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AddressLists::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::AddressList* AddressLists::Item(const QVariant& Index)
{
    Outlook::AddressList* qax_result = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_result);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_SyncObject* SyncObjects::AppFolders() const
{
    Outlook::_SyncObject* qax_pointer = 0;
    qRegisterMetaType<Outlook::_SyncObject*>("_SyncObject*", &qax_pointer);
    qRegisterMetaType<Outlook::_SyncObject>("_SyncObject", qax_pointer);
    QVariant qax_result = property("AppFolders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_SyncObject**)qax_result.constData();
}

inline Outlook::_Application* SyncObjects::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SyncObjects::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int SyncObjects::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* SyncObjects::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* SyncObjects::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::SyncObject* SyncObjects::Item(const QVariant& Index)
{
    Outlook::SyncObject* qax_result = 0;
    qRegisterMetaType<Outlook::SyncObject*>("SyncObject*", &qax_result);
    qRegisterMetaType<Outlook::SyncObject>("SyncObject", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* SyncObject::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SyncObject::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString SyncObject::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* SyncObject::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* SyncObject::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void SyncObject::Start()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void SyncObject::Stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline Outlook::_Application* _SyncObject::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SyncObject::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _SyncObject::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _SyncObject::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _SyncObject::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void _SyncObject::Start()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _SyncObject::Stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::_Application* Accounts::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Accounts::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Accounts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Accounts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Accounts::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Account* Accounts::Item(const QVariant& Index)
{
    Outlook::_Account* qax_result = 0;
    qRegisterMetaType<Outlook::_Account*>("_Account*", &qax_result);
    qRegisterMetaType<Outlook::_Account>("_Account", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* _Accounts::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Accounts::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Accounts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Accounts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Accounts::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Account* _Accounts::Item(const QVariant& Index)
{
    Outlook::_Account* qax_result = 0;
    qRegisterMetaType<Outlook::_Account*>("_Account*", &qax_result);
    qRegisterMetaType<Outlook::_Account>("_Account", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* Stores::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Stores::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Stores::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Stores::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Stores::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Store* Stores::Item(const QVariant& Index)
{
    Outlook::_Store* qax_result = 0;
    qRegisterMetaType<Outlook::_Store*>("_Store*", &qax_result);
    qRegisterMetaType<Outlook::_Store>("_Store", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline Outlook::_Application* _Stores::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Stores::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Stores::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Stores::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Stores::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Store* _Stores::Item(const QVariant& Index)
{
    Outlook::_Store* qax_result = 0;
    qRegisterMetaType<Outlook::_Store*>("_Store*", &qax_result);
    qRegisterMetaType<Outlook::_Store>("_Store", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline bool SelectNamesDialog::AllowMultipleSelection() const
{
    QVariant qax_result = property("AllowMultipleSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SelectNamesDialog::SetAllowMultipleSelection(bool value){ setProperty("AllowMultipleSelection", QVariant(value)); }

inline Outlook::_Application* SelectNamesDialog::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString SelectNamesDialog::BccLabel() const
{
    QVariant qax_result = property("BccLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectNamesDialog::SetBccLabel(const QString& value){ setProperty("BccLabel", QVariant(value)); }

inline QString SelectNamesDialog::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectNamesDialog::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline QString SelectNamesDialog::CcLabel() const
{
    QVariant qax_result = property("CcLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectNamesDialog::SetCcLabel(const QString& value){ setProperty("CcLabel", QVariant(value)); }

inline Outlook::OlObjectClass SelectNamesDialog::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool SelectNamesDialog::ForceResolution() const
{
    QVariant qax_result = property("ForceResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SelectNamesDialog::SetForceResolution(bool value){ setProperty("ForceResolution", QVariant(value)); }

inline Outlook::AddressList* SelectNamesDialog::InitialAddressList() const
{
    Outlook::AddressList* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_pointer);
    QVariant qax_result = property("InitialAddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressList**)qax_result.constData();
}
inline void SelectNamesDialog::SetInitialAddressList(Outlook::AddressList* value){
    int typeId = qRegisterMetaType<Outlook::AddressList*>("Outlook::AddressList*", &value);
    setProperty("InitialAddressList", QVariant(typeId, &value));
}

inline Outlook::OlRecipientSelectors SelectNamesDialog::NumberOfRecipientSelectors() const
{
    QVariant qax_result = property("NumberOfRecipientSelectors");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRecipientSelectors*)qax_result.constData();
}
inline void SelectNamesDialog::SetNumberOfRecipientSelectors(Outlook::OlRecipientSelectors value){ setProperty("NumberOfRecipientSelectors", QVariant(value)); }

inline IDispatch* SelectNamesDialog::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* SelectNamesDialog::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}
inline void SelectNamesDialog::SetRecipients(Outlook::Recipients* value){
    int typeId = qRegisterMetaType<Outlook::Recipients*>("Outlook::Recipients*", &value);
    setProperty("Recipients", QVariant(typeId, &value));
}

inline Outlook::_NameSpace* SelectNamesDialog::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool SelectNamesDialog::ShowOnlyInitialAddressList() const
{
    QVariant qax_result = property("ShowOnlyInitialAddressList");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SelectNamesDialog::SetShowOnlyInitialAddressList(bool value){ setProperty("ShowOnlyInitialAddressList", QVariant(value)); }

inline QString SelectNamesDialog::ToLabel() const
{
    QVariant qax_result = property("ToLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SelectNamesDialog::SetToLabel(const QString& value){ setProperty("ToLabel", QVariant(value)); }

inline bool SelectNamesDialog::Display()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void SelectNamesDialog::SetDefaultDisplayMode(Outlook::OlDefaultSelectNamesDisplayMode defaultMode)
{
    void *_a[] = {0, (void*)&defaultMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline bool _SelectNamesDialog::AllowMultipleSelection() const
{
    QVariant qax_result = property("AllowMultipleSelection");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SelectNamesDialog::SetAllowMultipleSelection(bool value){ setProperty("AllowMultipleSelection", QVariant(value)); }

inline Outlook::_Application* _SelectNamesDialog::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString _SelectNamesDialog::BccLabel() const
{
    QVariant qax_result = property("BccLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SelectNamesDialog::SetBccLabel(const QString& value){ setProperty("BccLabel", QVariant(value)); }

inline QString _SelectNamesDialog::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SelectNamesDialog::SetCaption(const QString& value){ setProperty("Caption", QVariant(value)); }

inline QString _SelectNamesDialog::CcLabel() const
{
    QVariant qax_result = property("CcLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SelectNamesDialog::SetCcLabel(const QString& value){ setProperty("CcLabel", QVariant(value)); }

inline Outlook::OlObjectClass _SelectNamesDialog::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _SelectNamesDialog::ForceResolution() const
{
    QVariant qax_result = property("ForceResolution");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SelectNamesDialog::SetForceResolution(bool value){ setProperty("ForceResolution", QVariant(value)); }

inline Outlook::AddressList* _SelectNamesDialog::InitialAddressList() const
{
    Outlook::AddressList* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_pointer);
    QVariant qax_result = property("InitialAddressList");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressList**)qax_result.constData();
}
inline void _SelectNamesDialog::SetInitialAddressList(Outlook::AddressList* value){
    int typeId = qRegisterMetaType<Outlook::AddressList*>("Outlook::AddressList*", &value);
    setProperty("InitialAddressList", QVariant(typeId, &value));
}

inline Outlook::OlRecipientSelectors _SelectNamesDialog::NumberOfRecipientSelectors() const
{
    QVariant qax_result = property("NumberOfRecipientSelectors");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRecipientSelectors*)qax_result.constData();
}
inline void _SelectNamesDialog::SetNumberOfRecipientSelectors(Outlook::OlRecipientSelectors value){ setProperty("NumberOfRecipientSelectors", QVariant(value)); }

inline IDispatch* _SelectNamesDialog::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::Recipients* _SelectNamesDialog::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}
inline void _SelectNamesDialog::SetRecipients(Outlook::Recipients* value){
    int typeId = qRegisterMetaType<Outlook::Recipients*>("Outlook::Recipients*", &value);
    setProperty("Recipients", QVariant(typeId, &value));
}

inline Outlook::_NameSpace* _SelectNamesDialog::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _SelectNamesDialog::ShowOnlyInitialAddressList() const
{
    QVariant qax_result = property("ShowOnlyInitialAddressList");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SelectNamesDialog::SetShowOnlyInitialAddressList(bool value){ setProperty("ShowOnlyInitialAddressList", QVariant(value)); }

inline QString _SelectNamesDialog::ToLabel() const
{
    QVariant qax_result = property("ToLabel");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SelectNamesDialog::SetToLabel(const QString& value){ setProperty("ToLabel", QVariant(value)); }

inline bool _SelectNamesDialog::Display()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _SelectNamesDialog::SetDefaultDisplayMode(Outlook::OlDefaultSelectNamesDisplayMode defaultMode)
{
    void *_a[] = {0, (void*)&defaultMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline Outlook::Actions* SharingItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool SharingItem::AllowWriteAccess() const
{
    QVariant qax_result = property("AllowWriteAccess");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetAllowWriteAccess(bool value){ setProperty("AllowWriteAccess", QVariant(value)); }

inline bool SharingItem::AlternateRecipientAllowed() const
{
    QVariant qax_result = property("AlternateRecipientAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetAlternateRecipientAllowed(bool value){ setProperty("AlternateRecipientAllowed", QVariant(value)); }

inline Outlook::_Application* SharingItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* SharingItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool SharingItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline QString SharingItem::BCC() const
{
    QVariant qax_result = property("BCC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetBCC(const QString& value){ setProperty("BCC", QVariant(value)); }

inline QString SharingItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString SharingItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat SharingItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void SharingItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString SharingItem::CC() const
{
    QVariant qax_result = property("CC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetCC(const QString& value){ setProperty("CC", QVariant(value)); }

inline QString SharingItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass SharingItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString SharingItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* SharingItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString SharingItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime SharingItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime SharingItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool SharingItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState SharingItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline bool SharingItem::EnableSharedAttachments() const
{
    QVariant qax_result = property("EnableSharedAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetEnableSharedAttachments(bool value){ setProperty("EnableSharedAttachments", QVariant(value)); }

inline QString SharingItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime SharingItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime SharingItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon SharingItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void SharingItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString SharingItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus SharingItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void SharingItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* SharingItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* SharingItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString SharingItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance SharingItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void SharingItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int SharingItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void SharingItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool SharingItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool SharingItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* SharingItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime SharingItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IUnknown* SharingItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus SharingItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void SharingItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString SharingItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString SharingItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool SharingItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool SharingItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int SharingItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharingItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* SharingItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlPermission SharingItem::Permission() const
{
    QVariant qax_result = property("Permission");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermission*)qax_result.constData();
}
inline void SharingItem::SetPermission(Outlook::OlPermission value){ setProperty("Permission", QVariant(value)); }

inline Outlook::OlPermissionService SharingItem::PermissionService() const
{
    QVariant qax_result = property("PermissionService");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermissionService*)qax_result.constData();
}
inline void SharingItem::SetPermissionService(Outlook::OlPermissionService value){ setProperty("PermissionService", QVariant(value)); }

inline QString SharingItem::PermissionTemplateGuid() const
{
    QVariant qax_result = property("PermissionTemplateGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetPermissionTemplateGuid(const QString& value){ setProperty("PermissionTemplateGuid", QVariant(value)); }

inline Outlook::PropertyAccessor* SharingItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant SharingItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void SharingItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool SharingItem::ReadReceiptRequested() const
{
    QVariant qax_result = property("ReadReceiptRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetReadReceiptRequested(bool value){ setProperty("ReadReceiptRequested", QVariant(value)); }

inline QString SharingItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::ReceivedOnBehalfOfEntryID() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::ReceivedOnBehalfOfName() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime SharingItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool SharingItem::RecipientReassignmentProhibited() const
{
    QVariant qax_result = property("RecipientReassignmentProhibited");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetRecipientReassignmentProhibited(bool value){ setProperty("RecipientReassignmentProhibited", QVariant(value)); }

inline Outlook::Recipients* SharingItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool SharingItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool SharingItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool SharingItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString SharingItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime SharingItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline QString SharingItem::RemoteID() const
{
    QVariant qax_result = property("RemoteID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::RemoteName() const
{
    QVariant qax_result = property("RemoteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::RemotePath() const
{
    QVariant qax_result = property("RemotePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlRemoteStatus SharingItem::RemoteStatus() const
{
    QVariant qax_result = property("RemoteStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void SharingItem::SetRemoteStatus(Outlook::OlRemoteStatus value){ setProperty("RemoteStatus", QVariant(value)); }

inline QString SharingItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* SharingItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::OlDefaultFolders SharingItem::RequestedFolder() const
{
    QVariant qax_result = property("RequestedFolder");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultFolders*)qax_result.constData();
}

inline QDateTime SharingItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString SharingItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* SharingItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void SharingItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool SharingItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* SharingItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void SharingItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString SharingItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString SharingItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity SharingItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void SharingItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool SharingItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime SharingItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString SharingItem::SentOnBehalfOfName() const
{
    QVariant qax_result = property("SentOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetSentOnBehalfOfName(const QString& value){ setProperty("SentOnBehalfOfName", QVariant(value)); }

inline Outlook::_NameSpace* SharingItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlSharingProvider SharingItem::SharingProvider() const
{
    QVariant qax_result = property("SharingProvider");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSharingProvider*)qax_result.constData();
}

inline QString SharingItem::SharingProviderGuid() const
{
    QVariant qax_result = property("SharingProviderGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int SharingItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString SharingItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool SharingItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime SharingItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime SharingItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime SharingItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString SharingItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString SharingItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void SharingItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline QDateTime SharingItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void SharingItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline Outlook::OlSharingMsgType SharingItem::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSharingMsgType*)qax_result.constData();
}
inline void SharingItem::SetType(Outlook::OlSharingMsgType value){ setProperty("Type", QVariant(value)); }

inline bool SharingItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SharingItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* SharingItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void SharingItem::AddBusinessCard(Outlook::ContactItem* contact)
{
    void *_a[] = {0, (void*)&contact};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void SharingItem::Allow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void SharingItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void SharingItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void SharingItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline IDispatch* SharingItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void SharingItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline Outlook::SharingItem* SharingItem::Deny()
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void SharingItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void SharingItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline Outlook::SharingItem* SharingItem::Forward()
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline Outlook::_Conversation* SharingItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void SharingItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline IDispatch* SharingItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* SharingItem::OpenSharedFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline void SharingItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline Outlook::MailItem* SharingItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline Outlook::MailItem* SharingItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline void SharingItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void SharingItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void SharingItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void SharingItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void SharingItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
}


inline Outlook::Actions* _SharingItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool _SharingItem::AllowWriteAccess() const
{
    QVariant qax_result = property("AllowWriteAccess");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetAllowWriteAccess(bool value){ setProperty("AllowWriteAccess", QVariant(value)); }

inline bool _SharingItem::AlternateRecipientAllowed() const
{
    QVariant qax_result = property("AlternateRecipientAllowed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetAlternateRecipientAllowed(bool value){ setProperty("AlternateRecipientAllowed", QVariant(value)); }

inline Outlook::_Application* _SharingItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _SharingItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _SharingItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline QString _SharingItem::BCC() const
{
    QVariant qax_result = property("BCC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetBCC(const QString& value){ setProperty("BCC", QVariant(value)); }

inline QString _SharingItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _SharingItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat _SharingItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void _SharingItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString _SharingItem::CC() const
{
    QVariant qax_result = property("CC");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetCC(const QString& value){ setProperty("CC", QVariant(value)); }

inline QString _SharingItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _SharingItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _SharingItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _SharingItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _SharingItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _SharingItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _SharingItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool _SharingItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState _SharingItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline bool _SharingItem::EnableSharedAttachments() const
{
    QVariant qax_result = property("EnableSharedAttachments");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetEnableSharedAttachments(bool value){ setProperty("EnableSharedAttachments", QVariant(value)); }

inline QString _SharingItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _SharingItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime _SharingItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon _SharingItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void _SharingItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString _SharingItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus _SharingItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void _SharingItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* _SharingItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _SharingItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _SharingItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance _SharingItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _SharingItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int _SharingItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _SharingItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool _SharingItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _SharingItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _SharingItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _SharingItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IUnknown* _SharingItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _SharingItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _SharingItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _SharingItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _SharingItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _SharingItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool _SharingItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int _SharingItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _SharingItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _SharingItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlPermission _SharingItem::Permission() const
{
    QVariant qax_result = property("Permission");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermission*)qax_result.constData();
}
inline void _SharingItem::SetPermission(Outlook::OlPermission value){ setProperty("Permission", QVariant(value)); }

inline Outlook::OlPermissionService _SharingItem::PermissionService() const
{
    QVariant qax_result = property("PermissionService");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlPermissionService*)qax_result.constData();
}
inline void _SharingItem::SetPermissionService(Outlook::OlPermissionService value){ setProperty("PermissionService", QVariant(value)); }

inline QString _SharingItem::PermissionTemplateGuid() const
{
    QVariant qax_result = property("PermissionTemplateGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetPermissionTemplateGuid(const QString& value){ setProperty("PermissionTemplateGuid", QVariant(value)); }

inline Outlook::PropertyAccessor* _SharingItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _SharingItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _SharingItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _SharingItem::ReadReceiptRequested() const
{
    QVariant qax_result = property("ReadReceiptRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetReadReceiptRequested(bool value){ setProperty("ReadReceiptRequested", QVariant(value)); }

inline QString _SharingItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::ReceivedOnBehalfOfEntryID() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::ReceivedOnBehalfOfName() const
{
    QVariant qax_result = property("ReceivedOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _SharingItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool _SharingItem::RecipientReassignmentProhibited() const
{
    QVariant qax_result = property("RecipientReassignmentProhibited");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetRecipientReassignmentProhibited(bool value){ setProperty("RecipientReassignmentProhibited", QVariant(value)); }

inline Outlook::Recipients* _SharingItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool _SharingItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _SharingItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _SharingItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _SharingItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _SharingItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline QString _SharingItem::RemoteID() const
{
    QVariant qax_result = property("RemoteID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::RemoteName() const
{
    QVariant qax_result = property("RemoteName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::RemotePath() const
{
    QVariant qax_result = property("RemotePath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlRemoteStatus _SharingItem::RemoteStatus() const
{
    QVariant qax_result = property("RemoteStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _SharingItem::SetRemoteStatus(Outlook::OlRemoteStatus value){ setProperty("RemoteStatus", QVariant(value)); }

inline QString _SharingItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* _SharingItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::OlDefaultFolders _SharingItem::RequestedFolder() const
{
    QVariant qax_result = property("RequestedFolder");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultFolders*)qax_result.constData();
}

inline QDateTime _SharingItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _SharingItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* _SharingItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void _SharingItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool _SharingItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* _SharingItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _SharingItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString _SharingItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _SharingItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity _SharingItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _SharingItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool _SharingItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _SharingItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _SharingItem::SentOnBehalfOfName() const
{
    QVariant qax_result = property("SentOnBehalfOfName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetSentOnBehalfOfName(const QString& value){ setProperty("SentOnBehalfOfName", QVariant(value)); }

inline Outlook::_NameSpace* _SharingItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OlSharingProvider _SharingItem::SharingProvider() const
{
    QVariant qax_result = property("SharingProvider");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSharingProvider*)qax_result.constData();
}

inline QString _SharingItem::SharingProviderGuid() const
{
    QVariant qax_result = property("SharingProviderGuid");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _SharingItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _SharingItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _SharingItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _SharingItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime _SharingItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime _SharingItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString _SharingItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QString _SharingItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _SharingItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline QDateTime _SharingItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _SharingItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline Outlook::OlSharingMsgType _SharingItem::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSharingMsgType*)qax_result.constData();
}
inline void _SharingItem::SetType(Outlook::OlSharingMsgType value){ setProperty("Type", QVariant(value)); }

inline bool _SharingItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SharingItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _SharingItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _SharingItem::AddBusinessCard(Outlook::ContactItem* contact)
{
    void *_a[] = {0, (void*)&contact};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _SharingItem::Allow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _SharingItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _SharingItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _SharingItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline IDispatch* _SharingItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _SharingItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Outlook::SharingItem* _SharingItem::Deny()
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _SharingItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _SharingItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline Outlook::SharingItem* _SharingItem::Forward()
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::_Conversation* _SharingItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _SharingItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline IDispatch* _SharingItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* _SharingItem::OpenSharedFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void _SharingItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline Outlook::MailItem* _SharingItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline Outlook::MailItem* _SharingItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void _SharingItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _SharingItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _SharingItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void _SharingItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void _SharingItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
}


inline Outlook::_Application* _Explorers::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Explorers::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Explorers::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Explorers::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Explorers::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Explorer* _Explorers::Add(const QVariant& Folder)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_Explorer* _Explorers::Add(const QVariant& Folder, Outlook::OlFolderDisplayMode DisplayMode)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder, (void*)&DisplayMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Explorer* _Explorers::Item(const QVariant& Index)
{
    Outlook::Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::Explorer*>("Explorer*", &qax_result);
    qRegisterMetaType<Outlook::Explorer>("Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline Outlook::_AccountSelector* Explorer::AccountSelector() const
{
    Outlook::_AccountSelector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AccountSelector*>("_AccountSelector*", &qax_pointer);
    qRegisterMetaType<Outlook::_AccountSelector>("_AccountSelector", qax_pointer);
    QVariant qax_result = property("AccountSelector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AccountSelector**)qax_result.constData();
}

inline IDispatch* Explorer::ActiveInlineResponse() const
{
    QVariant qax_result = property("ActiveInlineResponse");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* Explorer::ActiveInlineResponseWordEditor() const
{
    QVariant qax_result = property("ActiveInlineResponseWordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Application* Explorer::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::_AttachmentSelection* Explorer::AttachmentSelection() const
{
    Outlook::_AttachmentSelection* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AttachmentSelection*>("_AttachmentSelection*", &qax_pointer);
    qRegisterMetaType<Outlook::_AttachmentSelection>("_AttachmentSelection", qax_pointer);
    QVariant qax_result = property("AttachmentSelection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AttachmentSelection**)qax_result.constData();
}

inline QString Explorer::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass Explorer::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::CommandBars* Explorer::CommandBars() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::CommandBars* qax_pointer = 0;
    qRegisterMetaType<Office::CommandBars*>("Office::CommandBars*", &qax_pointer);
    qRegisterMetaType<Office::CommandBars>("Office::CommandBars", qax_pointer);
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBars**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Outlook::MAPIFolder* Explorer::CurrentFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("CurrentFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void Explorer::SetCurrentFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("CurrentFolder", QVariant(typeId, &value));
}

inline QVariant Explorer::CurrentView() const
{
    QVariant qax_result = property("CurrentView");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void Explorer::SetCurrentView(const QVariant& value){ setProperty("CurrentView", QVariant(value)); }

inline Outlook::OlDisplayMode Explorer::DisplayMode() const
{
    QVariant qax_result = property("DisplayMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDisplayMode*)qax_result.constData();
}

inline IDispatch* Explorer::HTMLDocument() const
{
    QVariant qax_result = property("HTMLDocument");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Explorer::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explorer::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int Explorer::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explorer::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline Outlook::_NavigationPane* Explorer::NavigationPane() const
{
    Outlook::_NavigationPane* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationPane*>("_NavigationPane*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationPane>("_NavigationPane", qax_pointer);
    QVariant qax_result = property("NavigationPane");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationPane**)qax_result.constData();
}

inline Outlook::Panes* Explorer::Panes() const
{
    Outlook::Panes* qax_pointer = 0;
    qRegisterMetaType<Outlook::Panes*>("Panes*", &qax_pointer);
    qRegisterMetaType<Outlook::Panes>("Panes", qax_pointer);
    QVariant qax_result = property("Panes");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Panes**)qax_result.constData();
}

inline IDispatch* Explorer::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_PreviewPane* Explorer::PreviewPane() const
{
    Outlook::_PreviewPane* qax_pointer = 0;
    qRegisterMetaType<Outlook::_PreviewPane*>("_PreviewPane*", &qax_pointer);
    qRegisterMetaType<Outlook::_PreviewPane>("_PreviewPane", qax_pointer);
    QVariant qax_result = property("PreviewPane");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_PreviewPane**)qax_result.constData();
}

inline Outlook::Selection* Explorer::Selection() const
{
    Outlook::Selection* qax_pointer = 0;
    qRegisterMetaType<Outlook::Selection*>("Selection*", &qax_pointer);
    qRegisterMetaType<Outlook::Selection>("Selection", qax_pointer);
    QVariant qax_result = property("Selection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Selection**)qax_result.constData();
}

inline Outlook::_NameSpace* Explorer::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int Explorer::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explorer::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline IDispatch* Explorer::Views() const
{
    QVariant qax_result = property("Views");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Explorer::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explorer::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline Outlook::OlWindowState Explorer::WindowState() const
{
    QVariant qax_result = property("WindowState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlWindowState*)qax_result.constData();
}
inline void Explorer::SetWindowState(Outlook::OlWindowState value){ setProperty("WindowState", QVariant(value)); }

inline void Explorer::Activate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void Explorer::AddToSelection(IDispatch* Item)
{
    void *_a[] = {0, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void Explorer::ClearSearch()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void Explorer::ClearSelection()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void Explorer::Close()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void Explorer::DeselectFolder(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void Explorer::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline bool Explorer::IsFolderSelected(Outlook::MAPIFolder* Folder)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline bool Explorer::IsItemSelectableInView(IDispatch* Item)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline bool Explorer::IsPaneVisible(Outlook::OlPane Pane)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Pane};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline void Explorer::RemoveFromSelection(IDispatch* Item)
{
    void *_a[] = {0, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void Explorer::Search(const QString& Query, Outlook::OlSearchScope SearchScope)
{
    void *_a[] = {0, (void*)&Query, (void*)&SearchScope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void Explorer::SelectAllItems()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void Explorer::SelectFolder(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void Explorer::ShowPane(Outlook::OlPane Pane, bool Visible)
{
    void *_a[] = {0, (void*)&Pane, (void*)&Visible};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}


inline Outlook::_Application* _Inspectors::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Inspectors::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Inspectors::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Inspectors::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Inspectors::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Inspector* _Inspectors::Add(IDispatch* Item)
{
    Outlook::_Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_result);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Inspector* _Inspectors::Item(const QVariant& Index)
{
    Outlook::Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::Inspector*>("Inspector*", &qax_result);
    qRegisterMetaType<Outlook::Inspector>("Inspector", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* Inspector::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::_AttachmentSelection* Inspector::AttachmentSelection() const
{
    Outlook::_AttachmentSelection* qax_pointer = 0;
    qRegisterMetaType<Outlook::_AttachmentSelection*>("_AttachmentSelection*", &qax_pointer);
    qRegisterMetaType<Outlook::_AttachmentSelection>("_AttachmentSelection", qax_pointer);
    QVariant qax_result = property("AttachmentSelection");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_AttachmentSelection**)qax_result.constData();
}

inline QString Inspector::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass Inspector::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::CommandBars* Inspector::CommandBars() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::CommandBars* qax_pointer = 0;
    qRegisterMetaType<Office::CommandBars*>("Office::CommandBars*", &qax_pointer);
    qRegisterMetaType<Office::CommandBars>("Office::CommandBars", qax_pointer);
    QVariant qax_result = property("CommandBars");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::CommandBars**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline IDispatch* Inspector::CurrentItem() const
{
    QVariant qax_result = property("CurrentItem");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlEditorType Inspector::EditorType() const
{
    QVariant qax_result = property("EditorType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlEditorType*)qax_result.constData();
}

inline IDispatch* Inspector::HTMLEditor() const
{
    QVariant qax_result = property("HTMLEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int Inspector::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Inspector::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline int Inspector::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Inspector::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline IDispatch* Inspector::ModifiedFormPages() const
{
    QVariant qax_result = property("ModifiedFormPages");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IDispatch* Inspector::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Inspector::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int Inspector::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Inspector::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int Inspector::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Inspector::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline Outlook::OlWindowState Inspector::WindowState() const
{
    QVariant qax_result = property("WindowState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlWindowState*)qax_result.constData();
}
inline void Inspector::SetWindowState(Outlook::OlWindowState value){ setProperty("WindowState", QVariant(value)); }

inline IDispatch* Inspector::WordEditor() const
{
    QVariant qax_result = property("WordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline void Inspector::Activate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void Inspector::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void Inspector::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void Inspector::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void Inspector::HideFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline bool Inspector::IsWordMail()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline IDispatch* Inspector::NewFormRegion()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline IDispatch* Inspector::OpenFormRegion(const QString& Path)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void Inspector::SaveFormRegion(IDispatch* Page, const QString& FileName)
{
    void *_a[] = {0, (void*)&Page, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void Inspector::SetControlItemProperty(IDispatch* Control, const QString& PropertyName)
{
    void *_a[] = {0, (void*)&Control, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void Inspector::SetCurrentFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void Inspector::SetSchedulingStartTime(const QDateTime& Start)
{
    void *_a[] = {0, (void*)&Start};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void Inspector::ShowFormPage(const QString& PageName)
{
    void *_a[] = {0, (void*)&PageName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}


inline Outlook::_Application* Search::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Search::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString Search::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool Search::IsSynchronous() const
{
    QVariant qax_result = property("IsSynchronous");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* Search::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Results* Search::Results() const
{
    Outlook::_Results* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Results*>("_Results*", &qax_pointer);
    qRegisterMetaType<Outlook::_Results>("_Results", qax_pointer);
    QVariant qax_result = property("Results");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Results**)qax_result.constData();
}

inline QString Search::Scope() const
{
    QVariant qax_result = property("Scope");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool Search::SearchSubFolders() const
{
    QVariant qax_result = property("SearchSubFolders");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_NameSpace* Search::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString Search::Tag() const
{
    QVariant qax_result = property("Tag");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Table* Search::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Search::Save(const QString& Name)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void Search::Stop()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* _Results::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Results::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Results::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlItemType _Results::DefaultItemType() const
{
    QVariant qax_result = property("DefaultItemType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlItemType*)qax_result.constData();
}
inline void _Results::SetDefaultItemType(Outlook::OlItemType value){ setProperty("DefaultItemType", QVariant(value)); }

inline IDispatch* _Results::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* _Results::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* _Results::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* _Results::GetFirst()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline IDispatch* _Results::GetLast()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline IDispatch* _Results::GetNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline IDispatch* _Results::GetPrevious()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline IDispatch* _Results::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _Results::ResetColumns()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _Results::SetColumns(const QString& Columns)
{
    void *_a[] = {0, (void*)&Columns};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _Results::Sort(const QString& Property)
{
    void *_a[] = {0, (void*)&Property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _Results::Sort(const QString& Property, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&Property, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}


inline Outlook::_Application* _Reminders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _Reminders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _Reminders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _Reminders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Reminders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Reminder* _Reminders::Item(const QVariant& Index)
{
    Outlook::_Reminder* qax_result = 0;
    qRegisterMetaType<Outlook::_Reminder*>("_Reminder*", &qax_result);
    qRegisterMetaType<Outlook::_Reminder>("_Reminder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _Reminders::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline IUnknown* _Reminders::_NewEnum()
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline Outlook::_Application* _Reminder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString _Reminder::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass _Reminder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _Reminder::IsVisible() const
{
    QVariant qax_result = property("IsVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* _Reminder::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QDateTime _Reminder::NextReminderDate() const
{
    QVariant qax_result = property("NextReminderDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _Reminder::OriginalReminderDate() const
{
    QVariant qax_result = property("OriginalReminderDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IDispatch* _Reminder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _Reminder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void _Reminder::Dismiss()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Reminder::Snooze()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _Reminder::Snooze(const QVariant& SnoozeTime)
{
    void *_a[] = {0, (void*)&SnoozeTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* TimeZones::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass TimeZones::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int TimeZones::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::_TimeZone* TimeZones::CurrentTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("CurrentTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}

inline IDispatch* TimeZones::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* TimeZones::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QDateTime TimeZones::ConvertTime(const QDateTime& SourceDateTime, Outlook::_TimeZone* SourceTimeZone, Outlook::_TimeZone* DestinationTimeZone)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SourceDateTime, (void*)&SourceTimeZone, (void*)&DestinationTimeZone};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_TimeZone* TimeZones::Item(const QVariant& Index)
{
    Outlook::_TimeZone* qax_result = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_result);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* _TimeZones::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _TimeZones::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _TimeZones::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::_TimeZone* _TimeZones::CurrentTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("CurrentTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}

inline IDispatch* _TimeZones::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _TimeZones::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QDateTime _TimeZones::ConvertTime(const QDateTime& SourceDateTime, Outlook::_TimeZone* SourceTimeZone, Outlook::_TimeZone* DestinationTimeZone)
{
    QDateTime qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&SourceDateTime, (void*)&SourceTimeZone, (void*)&DestinationTimeZone};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_TimeZone* _TimeZones::Item(const QVariant& Index)
{
    Outlook::_TimeZone* qax_result = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_result);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::OlAppointmentTimeField _OlkTimeZoneControl::AppointmentTimeField() const
{
    QVariant qax_result = property("AppointmentTimeField");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAppointmentTimeField*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetAppointmentTimeField(Outlook::OlAppointmentTimeField value){ setProperty("AppointmentTimeField", QVariant(value)); }

inline Outlook::OlBorderStyle _OlkTimeZoneControl::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline bool _OlkTimeZoneControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline bool _OlkTimeZoneControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap _OlkTimeZoneControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer _OlkTimeZoneControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int _OlkTimeZoneControl::SelectedTimeZoneIndex() const
{
    QVariant qax_result = property("SelectedTimeZoneIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetSelectedTimeZoneIndex(int value){ setProperty("SelectedTimeZoneIndex", QVariant(value)); }

inline QVariant _OlkTimeZoneControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _OlkTimeZoneControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void _OlkTimeZoneControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::OlAppointmentTimeField OlkTimeZoneControl::AppointmentTimeField() const
{
    QVariant qax_result = property("AppointmentTimeField");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAppointmentTimeField*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetAppointmentTimeField(Outlook::OlAppointmentTimeField value){ setProperty("AppointmentTimeField", QVariant(value)); }

inline Outlook::OlBorderStyle OlkTimeZoneControl::BorderStyle() const
{
    QVariant qax_result = property("BorderStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBorderStyle*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetBorderStyle(Outlook::OlBorderStyle value){ setProperty("BorderStyle", QVariant(value)); }

inline bool OlkTimeZoneControl::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline bool OlkTimeZoneControl::Locked() const
{
    QVariant qax_result = property("Locked");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetLocked(bool value){ setProperty("Locked", QVariant(value)); }

inline QPixmap OlkTimeZoneControl::MouseIcon() const
{
    QVariant qax_result = property("MouseIcon");
    Q_ASSERT(qax_result.isValid());
    return *(QPixmap*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetMouseIcon(const QPixmap& value){ setProperty("MouseIcon", QVariant(value)); }

inline Outlook::OlMousePointer OlkTimeZoneControl::MousePointer() const
{
    QVariant qax_result = property("MousePointer");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMousePointer*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetMousePointer(Outlook::OlMousePointer value){ setProperty("MousePointer", QVariant(value)); }

inline int OlkTimeZoneControl::SelectedTimeZoneIndex() const
{
    QVariant qax_result = property("SelectedTimeZoneIndex");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetSelectedTimeZoneIndex(int value){ setProperty("SelectedTimeZoneIndex", QVariant(value)); }

inline QVariant OlkTimeZoneControl::Value() const
{
    QVariant qax_result = property("Value");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void OlkTimeZoneControl::SetValue(const QVariant& value){ setProperty("Value", QVariant(value)); }

inline void OlkTimeZoneControl::DropDown()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}


inline Outlook::_Application* PropertyPages::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PropertyPages::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int PropertyPages::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* PropertyPages::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* PropertyPages::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void PropertyPages::Add(const QVariant& Page)
{
    void *_a[] = {0, (void*)&Page};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void PropertyPages::Add(const QVariant& Page, const QString& Title)
{
    void *_a[] = {0, (void*)&Page, (void*)&Title};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline IDispatch* PropertyPages::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void PropertyPages::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* RecurrencePattern::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass RecurrencePattern::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int RecurrencePattern::DayOfMonth() const
{
    QVariant qax_result = property("DayOfMonth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetDayOfMonth(int value){ setProperty("DayOfMonth", QVariant(value)); }

inline Outlook::OlDaysOfWeek RecurrencePattern::DayOfWeekMask() const
{
    QVariant qax_result = property("DayOfWeekMask");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDaysOfWeek*)qax_result.constData();
}
inline void RecurrencePattern::SetDayOfWeekMask(Outlook::OlDaysOfWeek value){ setProperty("DayOfWeekMask", QVariant(value)); }

inline int RecurrencePattern::Duration() const
{
    QVariant qax_result = property("Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetDuration(int value){ setProperty("Duration", QVariant(value)); }

inline QDateTime RecurrencePattern::EndTime() const
{
    QVariant qax_result = property("EndTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void RecurrencePattern::SetEndTime(const QDateTime& value){ setProperty("EndTime", QVariant(value)); }

inline Outlook::Exceptions* RecurrencePattern::Exceptions() const
{
    Outlook::Exceptions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Exceptions*>("Exceptions*", &qax_pointer);
    qRegisterMetaType<Outlook::Exceptions>("Exceptions", qax_pointer);
    QVariant qax_result = property("Exceptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Exceptions**)qax_result.constData();
}

inline int RecurrencePattern::Instance() const
{
    QVariant qax_result = property("Instance");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetInstance(int value){ setProperty("Instance", QVariant(value)); }

inline int RecurrencePattern::Interval() const
{
    QVariant qax_result = property("Interval");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetInterval(int value){ setProperty("Interval", QVariant(value)); }

inline int RecurrencePattern::MonthOfYear() const
{
    QVariant qax_result = property("MonthOfYear");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetMonthOfYear(int value){ setProperty("MonthOfYear", QVariant(value)); }

inline bool RecurrencePattern::NoEndDate() const
{
    QVariant qax_result = property("NoEndDate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RecurrencePattern::SetNoEndDate(bool value){ setProperty("NoEndDate", QVariant(value)); }

inline int RecurrencePattern::Occurrences() const
{
    QVariant qax_result = property("Occurrences");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void RecurrencePattern::SetOccurrences(int value){ setProperty("Occurrences", QVariant(value)); }

inline IDispatch* RecurrencePattern::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QDateTime RecurrencePattern::PatternEndDate() const
{
    QVariant qax_result = property("PatternEndDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void RecurrencePattern::SetPatternEndDate(const QDateTime& value){ setProperty("PatternEndDate", QVariant(value)); }

inline QDateTime RecurrencePattern::PatternStartDate() const
{
    QVariant qax_result = property("PatternStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void RecurrencePattern::SetPatternStartDate(const QDateTime& value){ setProperty("PatternStartDate", QVariant(value)); }

inline Outlook::OlRecurrenceType RecurrencePattern::RecurrenceType() const
{
    QVariant qax_result = property("RecurrenceType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRecurrenceType*)qax_result.constData();
}
inline void RecurrencePattern::SetRecurrenceType(Outlook::OlRecurrenceType value){ setProperty("RecurrenceType", QVariant(value)); }

inline bool RecurrencePattern::Regenerate() const
{
    QVariant qax_result = property("Regenerate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RecurrencePattern::SetRegenerate(bool value){ setProperty("Regenerate", QVariant(value)); }

inline Outlook::_NameSpace* RecurrencePattern::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QDateTime RecurrencePattern::StartTime() const
{
    QVariant qax_result = property("StartTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void RecurrencePattern::SetStartTime(const QDateTime& value){ setProperty("StartTime", QVariant(value)); }

inline Outlook::AppointmentItem* RecurrencePattern::GetOccurrence(const QDateTime& StartDate)
{
    Outlook::AppointmentItem* qax_result = 0;
    qRegisterMetaType<Outlook::AppointmentItem*>("AppointmentItem*", &qax_result);
    qRegisterMetaType<Outlook::AppointmentItem>("AppointmentItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&StartDate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* Exceptions::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Exceptions::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Exceptions::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Exceptions::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Exceptions::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Exception* Exceptions::Item(const QVariant& Index)
{
    Outlook::Exception* qax_result = 0;
    qRegisterMetaType<Outlook::Exception*>("Exception*", &qax_result);
    qRegisterMetaType<Outlook::Exception>("Exception", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}


inline Outlook::_Application* Exception::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AppointmentItem* Exception::AppointmentItem() const
{
    Outlook::AppointmentItem* qax_pointer = 0;
    qRegisterMetaType<Outlook::AppointmentItem*>("AppointmentItem*", &qax_pointer);
    qRegisterMetaType<Outlook::AppointmentItem>("AppointmentItem", qax_pointer);
    QVariant qax_result = property("AppointmentItem");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AppointmentItem**)qax_result.constData();
}

inline Outlook::OlObjectClass Exception::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool Exception::Deleted() const
{
    QVariant qax_result = property("Deleted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* Exception::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime Exception::OriginalDate() const
{
    QVariant qax_result = property("OriginalDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IDispatch* Exception::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Exception::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::Actions* AppointmentItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool AppointmentItem::AllDayEvent() const
{
    QVariant qax_result = property("AllDayEvent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetAllDayEvent(bool value){ setProperty("AllDayEvent", QVariant(value)); }

inline Outlook::_Application* AppointmentItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* AppointmentItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool AppointmentItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString AppointmentItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString AppointmentItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat AppointmentItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void AppointmentItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline Outlook::OlBusyStatus AppointmentItem::BusyStatus() const
{
    QVariant qax_result = property("BusyStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBusyStatus*)qax_result.constData();
}
inline void AppointmentItem::SetBusyStatus(Outlook::OlBusyStatus value){ setProperty("BusyStatus", QVariant(value)); }

inline QString AppointmentItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass AppointmentItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString AppointmentItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline bool AppointmentItem::ConferenceServerAllowExternal() const
{
    QVariant qax_result = property("ConferenceServerAllowExternal");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetConferenceServerAllowExternal(bool value){ setProperty("ConferenceServerAllowExternal", QVariant(value)); }

inline QString AppointmentItem::ConferenceServerPassword() const
{
    QVariant qax_result = property("ConferenceServerPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetConferenceServerPassword(const QString& value){ setProperty("ConferenceServerPassword", QVariant(value)); }

inline Outlook::Conflicts* AppointmentItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString AppointmentItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString AppointmentItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString AppointmentItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime AppointmentItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool AppointmentItem::DoNotForwardMeeting() const
{
    QVariant qax_result = property("DoNotForwardMeeting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetDoNotForwardMeeting(bool value){ setProperty("DoNotForwardMeeting", QVariant(value)); }

inline Outlook::OlDownloadState AppointmentItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline int AppointmentItem::Duration() const
{
    QVariant qax_result = property("Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void AppointmentItem::SetDuration(int value){ setProperty("Duration", QVariant(value)); }

inline QDateTime AppointmentItem::End() const
{
    QVariant qax_result = property("End");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetEnd(const QDateTime& value){ setProperty("End", QVariant(value)); }

inline QDateTime AppointmentItem::EndInEndTimeZone() const
{
    QVariant qax_result = property("EndInEndTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetEndInEndTimeZone(const QDateTime& value){ setProperty("EndInEndTimeZone", QVariant(value)); }

inline Outlook::_TimeZone* AppointmentItem::EndTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("EndTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}
inline void AppointmentItem::SetEndTimeZone(Outlook::_TimeZone* value){
    int typeId = qRegisterMetaType<Outlook::_TimeZone*>("Outlook::_TimeZone*", &value);
    setProperty("EndTimeZone", QVariant(typeId, &value));
}

inline QDateTime AppointmentItem::EndUTC() const
{
    QVariant qax_result = property("EndUTC");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetEndUTC(const QDateTime& value){ setProperty("EndUTC", QVariant(value)); }

inline QString AppointmentItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool AppointmentItem::FDelegateAppt() const
{
    QVariant qax_result = property("FDelegateAppt");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool AppointmentItem::FOthersAppt() const
{
    QVariant qax_result = property("FOthersAppt");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool AppointmentItem::ForceUpdateToAllAttendees() const
{
    QVariant qax_result = property("ForceUpdateToAllAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetForceUpdateToAllAttendees(bool value){ setProperty("ForceUpdateToAllAttendees", QVariant(value)); }

inline Outlook::FormDescription* AppointmentItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* AppointmentItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString AppointmentItem::GlobalAppointmentID() const
{
    QVariant qax_result = property("GlobalAppointmentID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlImportance AppointmentItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void AppointmentItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int AppointmentItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void AppointmentItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool AppointmentItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool AppointmentItem::IsOnlineMeeting() const
{
    QVariant qax_result = property("IsOnlineMeeting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetIsOnlineMeeting(bool value){ setProperty("IsOnlineMeeting", QVariant(value)); }

inline bool AppointmentItem::IsRecurring() const
{
    QVariant qax_result = property("IsRecurring");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* AppointmentItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime AppointmentItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* AppointmentItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline QString AppointmentItem::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetLocation(const QString& value){ setProperty("Location", QVariant(value)); }

inline IUnknown* AppointmentItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus AppointmentItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void AppointmentItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline Outlook::OlMeetingStatus AppointmentItem::MeetingStatus() const
{
    QVariant qax_result = property("MeetingStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMeetingStatus*)qax_result.constData();
}
inline void AppointmentItem::SetMeetingStatus(Outlook::OlMeetingStatus value){ setProperty("MeetingStatus", QVariant(value)); }

inline QString AppointmentItem::MeetingWorkspaceURL() const
{
    QVariant qax_result = property("MeetingWorkspaceURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString AppointmentItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString AppointmentItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool AppointmentItem::NetMeetingAutoStart() const
{
    QVariant qax_result = property("NetMeetingAutoStart");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetNetMeetingAutoStart(bool value){ setProperty("NetMeetingAutoStart", QVariant(value)); }

inline QString AppointmentItem::NetMeetingDocPathName() const
{
    QVariant qax_result = property("NetMeetingDocPathName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetNetMeetingDocPathName(const QString& value){ setProperty("NetMeetingDocPathName", QVariant(value)); }

inline QString AppointmentItem::NetMeetingOrganizerAlias() const
{
    QVariant qax_result = property("NetMeetingOrganizerAlias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetNetMeetingOrganizerAlias(const QString& value){ setProperty("NetMeetingOrganizerAlias", QVariant(value)); }

inline QString AppointmentItem::NetMeetingServer() const
{
    QVariant qax_result = property("NetMeetingServer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetNetMeetingServer(const QString& value){ setProperty("NetMeetingServer", QVariant(value)); }

inline Outlook::OlNetMeetingType AppointmentItem::NetMeetingType() const
{
    QVariant qax_result = property("NetMeetingType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNetMeetingType*)qax_result.constData();
}
inline void AppointmentItem::SetNetMeetingType(Outlook::OlNetMeetingType value){ setProperty("NetMeetingType", QVariant(value)); }

inline QString AppointmentItem::NetShowURL() const
{
    QVariant qax_result = property("NetShowURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetNetShowURL(const QString& value){ setProperty("NetShowURL", QVariant(value)); }

inline bool AppointmentItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QString AppointmentItem::OptionalAttendees() const
{
    QVariant qax_result = property("OptionalAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetOptionalAttendees(const QString& value){ setProperty("OptionalAttendees", QVariant(value)); }

inline QString AppointmentItem::Organizer() const
{
    QVariant qax_result = property("Organizer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int AppointmentItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString AppointmentItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* AppointmentItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* AppointmentItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant AppointmentItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void AppointmentItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline Outlook::Recipients* AppointmentItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::OlRecurrenceState AppointmentItem::RecurrenceState() const
{
    QVariant qax_result = property("RecurrenceState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRecurrenceState*)qax_result.constData();
}

inline int AppointmentItem::ReminderMinutesBeforeStart() const
{
    QVariant qax_result = property("ReminderMinutesBeforeStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void AppointmentItem::SetReminderMinutesBeforeStart(int value){ setProperty("ReminderMinutesBeforeStart", QVariant(value)); }

inline bool AppointmentItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool AppointmentItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool AppointmentItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString AppointmentItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime AppointmentItem::ReplyTime() const
{
    QVariant qax_result = property("ReplyTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetReplyTime(const QDateTime& value){ setProperty("ReplyTime", QVariant(value)); }

inline QString AppointmentItem::RequiredAttendees() const
{
    QVariant qax_result = property("RequiredAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetRequiredAttendees(const QString& value){ setProperty("RequiredAttendees", QVariant(value)); }

inline QString AppointmentItem::Resources() const
{
    QVariant qax_result = property("Resources");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetResources(const QString& value){ setProperty("Resources", QVariant(value)); }

inline bool AppointmentItem::ResponseRequested() const
{
    QVariant qax_result = property("ResponseRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetResponseRequested(bool value){ setProperty("ResponseRequested", QVariant(value)); }

inline Outlook::OlResponseStatus AppointmentItem::ResponseStatus() const
{
    QVariant qax_result = property("ResponseStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlResponseStatus*)qax_result.constData();
}

inline bool AppointmentItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* AppointmentItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void AppointmentItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::OlSensitivity AppointmentItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void AppointmentItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* AppointmentItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int AppointmentItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime AppointmentItem::Start() const
{
    QVariant qax_result = property("Start");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetStart(const QDateTime& value){ setProperty("Start", QVariant(value)); }

inline QDateTime AppointmentItem::StartInStartTimeZone() const
{
    QVariant qax_result = property("StartInStartTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetStartInStartTimeZone(const QDateTime& value){ setProperty("StartInStartTimeZone", QVariant(value)); }

inline Outlook::_TimeZone* AppointmentItem::StartTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("StartTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}
inline void AppointmentItem::SetStartTimeZone(Outlook::_TimeZone* value){
    int typeId = qRegisterMetaType<Outlook::_TimeZone*>("Outlook::_TimeZone*", &value);
    setProperty("StartTimeZone", QVariant(typeId, &value));
}

inline QDateTime AppointmentItem::StartUTC() const
{
    QVariant qax_result = property("StartUTC");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void AppointmentItem::SetStartUTC(const QDateTime& value){ setProperty("StartUTC", QVariant(value)); }

inline QString AppointmentItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AppointmentItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool AppointmentItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AppointmentItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* AppointmentItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void AppointmentItem::ClearRecurrencePattern()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void AppointmentItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline IDispatch* AppointmentItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline Outlook::_AppointmentItem* AppointmentItem::CopyTo(Outlook::MAPIFolder* DestinationFolder, Outlook::OlAppointmentCopyOptions CopyOptions)
{
    Outlook::_AppointmentItem* qax_result = 0;
    qRegisterMetaType<Outlook::_AppointmentItem*>("_AppointmentItem*", &qax_result);
    qRegisterMetaType<Outlook::_AppointmentItem>("_AppointmentItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DestinationFolder, (void*)&CopyOptions};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void AppointmentItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void AppointmentItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void AppointmentItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline Outlook::MailItem* AppointmentItem::ForwardAsVcal()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline Outlook::_Conversation* AppointmentItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::AddressEntry* AppointmentItem::GetOrganizer()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline Outlook::RecurrencePattern* AppointmentItem::GetRecurrencePattern()
{
    Outlook::RecurrencePattern* qax_result = 0;
    qRegisterMetaType<Outlook::RecurrencePattern*>("RecurrencePattern*", &qax_result);
    qRegisterMetaType<Outlook::RecurrencePattern>("RecurrencePattern", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline IDispatch* AppointmentItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void AppointmentItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline Outlook::MeetingItem* AppointmentItem::Respond(Outlook::OlMeetingResponse Response)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline Outlook::MeetingItem* AppointmentItem::Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline Outlook::MeetingItem* AppointmentItem::Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI, (void*)&fAdditionalTextDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline void AppointmentItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void AppointmentItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void AppointmentItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void AppointmentItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void AppointmentItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
}


inline Outlook::Actions* _AppointmentItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline bool _AppointmentItem::AllDayEvent() const
{
    QVariant qax_result = property("AllDayEvent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetAllDayEvent(bool value){ setProperty("AllDayEvent", QVariant(value)); }

inline Outlook::_Application* _AppointmentItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _AppointmentItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _AppointmentItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _AppointmentItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _AppointmentItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat _AppointmentItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void _AppointmentItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline Outlook::OlBusyStatus _AppointmentItem::BusyStatus() const
{
    QVariant qax_result = property("BusyStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBusyStatus*)qax_result.constData();
}
inline void _AppointmentItem::SetBusyStatus(Outlook::OlBusyStatus value){ setProperty("BusyStatus", QVariant(value)); }

inline QString _AppointmentItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _AppointmentItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _AppointmentItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline bool _AppointmentItem::ConferenceServerAllowExternal() const
{
    QVariant qax_result = property("ConferenceServerAllowExternal");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetConferenceServerAllowExternal(bool value){ setProperty("ConferenceServerAllowExternal", QVariant(value)); }

inline QString _AppointmentItem::ConferenceServerPassword() const
{
    QVariant qax_result = property("ConferenceServerPassword");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetConferenceServerPassword(const QString& value){ setProperty("ConferenceServerPassword", QVariant(value)); }

inline Outlook::Conflicts* _AppointmentItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _AppointmentItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _AppointmentItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _AppointmentItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _AppointmentItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool _AppointmentItem::DoNotForwardMeeting() const
{
    QVariant qax_result = property("DoNotForwardMeeting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetDoNotForwardMeeting(bool value){ setProperty("DoNotForwardMeeting", QVariant(value)); }

inline Outlook::OlDownloadState _AppointmentItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline int _AppointmentItem::Duration() const
{
    QVariant qax_result = property("Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _AppointmentItem::SetDuration(int value){ setProperty("Duration", QVariant(value)); }

inline QDateTime _AppointmentItem::End() const
{
    QVariant qax_result = property("End");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetEnd(const QDateTime& value){ setProperty("End", QVariant(value)); }

inline QDateTime _AppointmentItem::EndInEndTimeZone() const
{
    QVariant qax_result = property("EndInEndTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetEndInEndTimeZone(const QDateTime& value){ setProperty("EndInEndTimeZone", QVariant(value)); }

inline Outlook::_TimeZone* _AppointmentItem::EndTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("EndTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}
inline void _AppointmentItem::SetEndTimeZone(Outlook::_TimeZone* value){
    int typeId = qRegisterMetaType<Outlook::_TimeZone*>("Outlook::_TimeZone*", &value);
    setProperty("EndTimeZone", QVariant(typeId, &value));
}

inline QDateTime _AppointmentItem::EndUTC() const
{
    QVariant qax_result = property("EndUTC");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetEndUTC(const QDateTime& value){ setProperty("EndUTC", QVariant(value)); }

inline QString _AppointmentItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _AppointmentItem::FDelegateAppt() const
{
    QVariant qax_result = property("FDelegateAppt");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _AppointmentItem::FOthersAppt() const
{
    QVariant qax_result = property("FOthersAppt");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _AppointmentItem::ForceUpdateToAllAttendees() const
{
    QVariant qax_result = property("ForceUpdateToAllAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetForceUpdateToAllAttendees(bool value){ setProperty("ForceUpdateToAllAttendees", QVariant(value)); }

inline Outlook::FormDescription* _AppointmentItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _AppointmentItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _AppointmentItem::GlobalAppointmentID() const
{
    QVariant qax_result = property("GlobalAppointmentID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlImportance _AppointmentItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _AppointmentItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int _AppointmentItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _AppointmentItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool _AppointmentItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _AppointmentItem::IsOnlineMeeting() const
{
    QVariant qax_result = property("IsOnlineMeeting");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetIsOnlineMeeting(bool value){ setProperty("IsOnlineMeeting", QVariant(value)); }

inline bool _AppointmentItem::IsRecurring() const
{
    QVariant qax_result = property("IsRecurring");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _AppointmentItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _AppointmentItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _AppointmentItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline QString _AppointmentItem::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetLocation(const QString& value){ setProperty("Location", QVariant(value)); }

inline IUnknown* _AppointmentItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _AppointmentItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _AppointmentItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline Outlook::OlMeetingStatus _AppointmentItem::MeetingStatus() const
{
    QVariant qax_result = property("MeetingStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMeetingStatus*)qax_result.constData();
}
inline void _AppointmentItem::SetMeetingStatus(Outlook::OlMeetingStatus value){ setProperty("MeetingStatus", QVariant(value)); }

inline QString _AppointmentItem::MeetingWorkspaceURL() const
{
    QVariant qax_result = property("MeetingWorkspaceURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _AppointmentItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _AppointmentItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _AppointmentItem::NetMeetingAutoStart() const
{
    QVariant qax_result = property("NetMeetingAutoStart");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetNetMeetingAutoStart(bool value){ setProperty("NetMeetingAutoStart", QVariant(value)); }

inline QString _AppointmentItem::NetMeetingDocPathName() const
{
    QVariant qax_result = property("NetMeetingDocPathName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetNetMeetingDocPathName(const QString& value){ setProperty("NetMeetingDocPathName", QVariant(value)); }

inline QString _AppointmentItem::NetMeetingOrganizerAlias() const
{
    QVariant qax_result = property("NetMeetingOrganizerAlias");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetNetMeetingOrganizerAlias(const QString& value){ setProperty("NetMeetingOrganizerAlias", QVariant(value)); }

inline QString _AppointmentItem::NetMeetingServer() const
{
    QVariant qax_result = property("NetMeetingServer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetNetMeetingServer(const QString& value){ setProperty("NetMeetingServer", QVariant(value)); }

inline Outlook::OlNetMeetingType _AppointmentItem::NetMeetingType() const
{
    QVariant qax_result = property("NetMeetingType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNetMeetingType*)qax_result.constData();
}
inline void _AppointmentItem::SetNetMeetingType(Outlook::OlNetMeetingType value){ setProperty("NetMeetingType", QVariant(value)); }

inline QString _AppointmentItem::NetShowURL() const
{
    QVariant qax_result = property("NetShowURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetNetShowURL(const QString& value){ setProperty("NetShowURL", QVariant(value)); }

inline bool _AppointmentItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QString _AppointmentItem::OptionalAttendees() const
{
    QVariant qax_result = property("OptionalAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetOptionalAttendees(const QString& value){ setProperty("OptionalAttendees", QVariant(value)); }

inline QString _AppointmentItem::Organizer() const
{
    QVariant qax_result = property("Organizer");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _AppointmentItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _AppointmentItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _AppointmentItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _AppointmentItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _AppointmentItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _AppointmentItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline Outlook::Recipients* _AppointmentItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline Outlook::OlRecurrenceState _AppointmentItem::RecurrenceState() const
{
    QVariant qax_result = property("RecurrenceState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRecurrenceState*)qax_result.constData();
}

inline int _AppointmentItem::ReminderMinutesBeforeStart() const
{
    QVariant qax_result = property("ReminderMinutesBeforeStart");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _AppointmentItem::SetReminderMinutesBeforeStart(int value){ setProperty("ReminderMinutesBeforeStart", QVariant(value)); }

inline bool _AppointmentItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _AppointmentItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _AppointmentItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _AppointmentItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _AppointmentItem::ReplyTime() const
{
    QVariant qax_result = property("ReplyTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetReplyTime(const QDateTime& value){ setProperty("ReplyTime", QVariant(value)); }

inline QString _AppointmentItem::RequiredAttendees() const
{
    QVariant qax_result = property("RequiredAttendees");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetRequiredAttendees(const QString& value){ setProperty("RequiredAttendees", QVariant(value)); }

inline QString _AppointmentItem::Resources() const
{
    QVariant qax_result = property("Resources");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetResources(const QString& value){ setProperty("Resources", QVariant(value)); }

inline bool _AppointmentItem::ResponseRequested() const
{
    QVariant qax_result = property("ResponseRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetResponseRequested(bool value){ setProperty("ResponseRequested", QVariant(value)); }

inline Outlook::OlResponseStatus _AppointmentItem::ResponseStatus() const
{
    QVariant qax_result = property("ResponseStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlResponseStatus*)qax_result.constData();
}

inline bool _AppointmentItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* _AppointmentItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _AppointmentItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::OlSensitivity _AppointmentItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _AppointmentItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _AppointmentItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _AppointmentItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _AppointmentItem::Start() const
{
    QVariant qax_result = property("Start");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetStart(const QDateTime& value){ setProperty("Start", QVariant(value)); }

inline QDateTime _AppointmentItem::StartInStartTimeZone() const
{
    QVariant qax_result = property("StartInStartTimeZone");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetStartInStartTimeZone(const QDateTime& value){ setProperty("StartInStartTimeZone", QVariant(value)); }

inline Outlook::_TimeZone* _AppointmentItem::StartTimeZone() const
{
    Outlook::_TimeZone* qax_pointer = 0;
    qRegisterMetaType<Outlook::_TimeZone*>("_TimeZone*", &qax_pointer);
    qRegisterMetaType<Outlook::_TimeZone>("_TimeZone", qax_pointer);
    QVariant qax_result = property("StartTimeZone");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_TimeZone**)qax_result.constData();
}
inline void _AppointmentItem::SetStartTimeZone(Outlook::_TimeZone* value){
    int typeId = qRegisterMetaType<Outlook::_TimeZone*>("Outlook::_TimeZone*", &value);
    setProperty("StartTimeZone", QVariant(typeId, &value));
}

inline QDateTime _AppointmentItem::StartUTC() const
{
    QVariant qax_result = property("StartUTC");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _AppointmentItem::SetStartUTC(const QDateTime& value){ setProperty("StartUTC", QVariant(value)); }

inline QString _AppointmentItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AppointmentItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _AppointmentItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AppointmentItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _AppointmentItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _AppointmentItem::ClearRecurrencePattern()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _AppointmentItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline IDispatch* _AppointmentItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::_AppointmentItem* _AppointmentItem::CopyTo(Outlook::MAPIFolder* DestinationFolder, Outlook::OlAppointmentCopyOptions CopyOptions)
{
    Outlook::_AppointmentItem* qax_result = 0;
    qRegisterMetaType<Outlook::_AppointmentItem*>("_AppointmentItem*", &qax_result);
    qRegisterMetaType<Outlook::_AppointmentItem>("_AppointmentItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DestinationFolder, (void*)&CopyOptions};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void _AppointmentItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _AppointmentItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _AppointmentItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Outlook::MailItem* _AppointmentItem::ForwardAsVcal()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Outlook::_Conversation* _AppointmentItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::AddressEntry* _AppointmentItem::GetOrganizer()
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::RecurrencePattern* _AppointmentItem::GetRecurrencePattern()
{
    Outlook::RecurrencePattern* qax_result = 0;
    qRegisterMetaType<Outlook::RecurrencePattern*>("RecurrencePattern*", &qax_result);
    qRegisterMetaType<Outlook::RecurrencePattern>("RecurrencePattern", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline IDispatch* _AppointmentItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _AppointmentItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline Outlook::MeetingItem* _AppointmentItem::Respond(Outlook::OlMeetingResponse Response)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::MeetingItem* _AppointmentItem::Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Outlook::MeetingItem* _AppointmentItem::Respond(Outlook::OlMeetingResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog)
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI, (void*)&fAdditionalTextDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline void _AppointmentItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _AppointmentItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _AppointmentItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void _AppointmentItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}

inline void _AppointmentItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}


inline Outlook::Actions* MeetingItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* MeetingItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* MeetingItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool MeetingItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline bool MeetingItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString MeetingItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString MeetingItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat MeetingItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void MeetingItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString MeetingItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass MeetingItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString MeetingItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* MeetingItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString MeetingItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MeetingItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MeetingItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MeetingItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime MeetingItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MeetingItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool MeetingItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState MeetingItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString MeetingItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MeetingItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MeetingItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime MeetingItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MeetingItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon MeetingItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void MeetingItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString MeetingItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus MeetingItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void MeetingItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* MeetingItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* MeetingItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance MeetingItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void MeetingItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool MeetingItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool MeetingItem::IsLatestVersion() const
{
    QVariant qax_result = property("IsLatestVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* MeetingItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime MeetingItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* MeetingItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* MeetingItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus MeetingItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void MeetingItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString MeetingItem::MeetingWorkspaceURL() const
{
    QVariant qax_result = property("MeetingWorkspaceURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MeetingItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString MeetingItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool MeetingItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool MeetingItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int MeetingItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MeetingItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* MeetingItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* MeetingItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant MeetingItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void MeetingItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QDateTime MeetingItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MeetingItem::SetReceivedTime(const QDateTime& value){ setProperty("ReceivedTime", QVariant(value)); }

inline Outlook::Recipients* MeetingItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool MeetingItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QDateTime MeetingItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void MeetingItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::Recipients* MeetingItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QDateTime MeetingItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString MeetingItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* MeetingItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void MeetingItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool MeetingItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* MeetingItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void MeetingItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString MeetingItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MeetingItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MeetingItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity MeetingItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void MeetingItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool MeetingItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime MeetingItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* MeetingItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int MeetingItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MeetingItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MeetingItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool MeetingItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool MeetingItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MeetingItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* MeetingItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void MeetingItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* MeetingItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void MeetingItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void MeetingItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void MeetingItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::MeetingItem* MeetingItem::Forward()
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::AppointmentItem* MeetingItem::GetAssociatedAppointment(bool AddToCalendar)
{
    Outlook::AppointmentItem* qax_result = 0;
    qRegisterMetaType<Outlook::AppointmentItem*>("AppointmentItem*", &qax_result);
    qRegisterMetaType<Outlook::AppointmentItem>("AppointmentItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToCalendar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline Outlook::_Conversation* MeetingItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline IDispatch* MeetingItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline void MeetingItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline Outlook::MailItem* MeetingItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline Outlook::MailItem* MeetingItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void MeetingItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void MeetingItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void MeetingItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void MeetingItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void MeetingItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}


inline Outlook::Actions* _MeetingItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _MeetingItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _MeetingItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _MeetingItem::AutoForwarded() const
{
    QVariant qax_result = property("AutoForwarded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetAutoForwarded(bool value){ setProperty("AutoForwarded", QVariant(value)); }

inline bool _MeetingItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _MeetingItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _MeetingItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat _MeetingItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void _MeetingItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString _MeetingItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _MeetingItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _MeetingItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _MeetingItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _MeetingItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MeetingItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MeetingItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MeetingItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _MeetingItem::DeferredDeliveryTime() const
{
    QVariant qax_result = property("DeferredDeliveryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MeetingItem::SetDeferredDeliveryTime(const QDateTime& value){ setProperty("DeferredDeliveryTime", QVariant(value)); }

inline bool _MeetingItem::DeleteAfterSubmit() const
{
    QVariant qax_result = property("DeleteAfterSubmit");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetDeleteAfterSubmit(bool value){ setProperty("DeleteAfterSubmit", QVariant(value)); }

inline Outlook::OlDownloadState _MeetingItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _MeetingItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MeetingItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MeetingItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline QDateTime _MeetingItem::FlagDueBy() const
{
    QVariant qax_result = property("FlagDueBy");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MeetingItem::SetFlagDueBy(const QDateTime& value){ setProperty("FlagDueBy", QVariant(value)); }

inline Outlook::OlFlagIcon _MeetingItem::FlagIcon() const
{
    QVariant qax_result = property("FlagIcon");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagIcon*)qax_result.constData();
}
inline void _MeetingItem::SetFlagIcon(Outlook::OlFlagIcon value){ setProperty("FlagIcon", QVariant(value)); }

inline QString _MeetingItem::FlagRequest() const
{
    QVariant qax_result = property("FlagRequest");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetFlagRequest(const QString& value){ setProperty("FlagRequest", QVariant(value)); }

inline Outlook::OlFlagStatus _MeetingItem::FlagStatus() const
{
    QVariant qax_result = property("FlagStatus");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFlagStatus*)qax_result.constData();
}
inline void _MeetingItem::SetFlagStatus(Outlook::OlFlagStatus value){ setProperty("FlagStatus", QVariant(value)); }

inline Outlook::FormDescription* _MeetingItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _MeetingItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _MeetingItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _MeetingItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _MeetingItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _MeetingItem::IsLatestVersion() const
{
    QVariant qax_result = property("IsLatestVersion");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _MeetingItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _MeetingItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _MeetingItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _MeetingItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _MeetingItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _MeetingItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _MeetingItem::MeetingWorkspaceURL() const
{
    QVariant qax_result = property("MeetingWorkspaceURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MeetingItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _MeetingItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _MeetingItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline bool _MeetingItem::OriginatorDeliveryReportRequested() const
{
    QVariant qax_result = property("OriginatorDeliveryReportRequested");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetOriginatorDeliveryReportRequested(bool value){ setProperty("OriginatorDeliveryReportRequested", QVariant(value)); }

inline int _MeetingItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MeetingItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _MeetingItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _MeetingItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _MeetingItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _MeetingItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QDateTime _MeetingItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MeetingItem::SetReceivedTime(const QDateTime& value){ setProperty("ReceivedTime", QVariant(value)); }

inline Outlook::Recipients* _MeetingItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool _MeetingItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QDateTime _MeetingItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _MeetingItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::Recipients* _MeetingItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QDateTime _MeetingItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _MeetingItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* _MeetingItem::SaveSentMessageFolder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("SaveSentMessageFolder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}
inline void _MeetingItem::SetSaveSentMessageFolder(Outlook::MAPIFolder* value){
    int typeId = qRegisterMetaType<Outlook::MAPIFolder*>("Outlook::MAPIFolder*", &value);
    setProperty("SaveSentMessageFolder", QVariant(typeId, &value));
}

inline bool _MeetingItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* _MeetingItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _MeetingItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString _MeetingItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MeetingItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MeetingItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity _MeetingItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _MeetingItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool _MeetingItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _MeetingItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* _MeetingItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _MeetingItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MeetingItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MeetingItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _MeetingItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _MeetingItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MeetingItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _MeetingItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _MeetingItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _MeetingItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _MeetingItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _MeetingItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _MeetingItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::MeetingItem* _MeetingItem::Forward()
{
    Outlook::MeetingItem* qax_result = 0;
    qRegisterMetaType<Outlook::MeetingItem*>("MeetingItem*", &qax_result);
    qRegisterMetaType<Outlook::MeetingItem>("MeetingItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::AppointmentItem* _MeetingItem::GetAssociatedAppointment(bool AddToCalendar)
{
    Outlook::AppointmentItem* qax_result = 0;
    qRegisterMetaType<Outlook::AppointmentItem*>("AppointmentItem*", &qax_result);
    qRegisterMetaType<Outlook::AppointmentItem>("AppointmentItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToCalendar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::_Conversation* _MeetingItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline IDispatch* _MeetingItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void _MeetingItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline Outlook::MailItem* _MeetingItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::MailItem* _MeetingItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _MeetingItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _MeetingItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _MeetingItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _MeetingItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _MeetingItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}


inline Outlook::_Application* OutlookBarGroup::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarGroup::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString OutlookBarGroup::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OutlookBarGroup::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* OutlookBarGroup::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarGroup::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_OutlookBarShortcuts* OutlookBarGroup::Shortcuts() const
{
    Outlook::_OutlookBarShortcuts* qax_pointer = 0;
    qRegisterMetaType<Outlook::_OutlookBarShortcuts*>("_OutlookBarShortcuts*", &qax_pointer);
    qRegisterMetaType<Outlook::_OutlookBarShortcuts>("_OutlookBarShortcuts", qax_pointer);
    QVariant qax_result = property("Shortcuts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_OutlookBarShortcuts**)qax_result.constData();
}

inline Outlook::OlOutlookBarViewType OutlookBarGroup::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlOutlookBarViewType*)qax_result.constData();
}
inline void OutlookBarGroup::SetViewType(Outlook::OlOutlookBarViewType value){ setProperty("ViewType", QVariant(value)); }


inline Outlook::_Application* _OutlookBarShortcuts::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _OutlookBarShortcuts::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _OutlookBarShortcuts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _OutlookBarShortcuts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _OutlookBarShortcuts::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OutlookBarShortcut* _OutlookBarShortcuts::Add(const QVariant& Target, const QString& Name)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Target, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::OutlookBarShortcut* _OutlookBarShortcuts::Add(const QVariant& Target, const QString& Name, const QVariant& Index)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Target, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::OutlookBarShortcut* _OutlookBarShortcuts::Item(const QVariant& Index)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _OutlookBarShortcuts::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* OutlookBarShortcut::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarShortcut::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString OutlookBarShortcut::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void OutlookBarShortcut::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* OutlookBarShortcut::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarShortcut::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QVariant OutlookBarShortcut::Target() const
{
    QVariant qax_result = property("Target");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline void OutlookBarShortcut::SetIcon(const QVariant& Icon)
{
    void *_a[] = {0, (void*)&Icon};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* _OutlookBarGroups::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _OutlookBarGroups::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _OutlookBarGroups::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _OutlookBarGroups::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _OutlookBarGroups::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OutlookBarGroup* _OutlookBarGroups::Add(const QString& Name)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::OutlookBarGroup* _OutlookBarGroups::Add(const QString& Name, const QVariant& Index)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::OutlookBarGroup* _OutlookBarGroups::Item(const QVariant& Index)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _OutlookBarGroups::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* _OutlookBarPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _OutlookBarPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OutlookBarStorage* _OutlookBarPane::Contents() const
{
    Outlook::OutlookBarStorage* qax_pointer = 0;
    qRegisterMetaType<Outlook::OutlookBarStorage*>("OutlookBarStorage*", &qax_pointer);
    qRegisterMetaType<Outlook::OutlookBarStorage>("OutlookBarStorage", qax_pointer);
    QVariant qax_result = property("Contents");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OutlookBarStorage**)qax_result.constData();
}

inline Outlook::OutlookBarGroup* _OutlookBarPane::CurrentGroup() const
{
    Outlook::OutlookBarGroup* qax_pointer = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_pointer);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_pointer);
    QVariant qax_result = property("CurrentGroup");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OutlookBarGroup**)qax_result.constData();
}
inline void _OutlookBarPane::SetCurrentGroup(Outlook::OutlookBarGroup* value){
    int typeId = qRegisterMetaType<Outlook::OutlookBarGroup*>("Outlook::OutlookBarGroup*", &value);
    setProperty("CurrentGroup", QVariant(typeId, &value));
}

inline QString _OutlookBarPane::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _OutlookBarPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _OutlookBarPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _OutlookBarPane::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OutlookBarPane::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* OutlookBarStorage::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarStorage::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::_OutlookBarGroups* OutlookBarStorage::Groups() const
{
    Outlook::_OutlookBarGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_OutlookBarGroups*>("_OutlookBarGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_OutlookBarGroups>("_OutlookBarGroups", qax_pointer);
    QVariant qax_result = property("Groups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_OutlookBarGroups**)qax_result.constData();
}

inline IDispatch* OutlookBarStorage::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarStorage::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* PropertyPageSite::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PropertyPageSite::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* PropertyPageSite::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* PropertyPageSite::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void PropertyPageSite::OnStatusChange()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* Pages::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Pages::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Pages::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Pages::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Pages::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* Pages::Add()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline IDispatch* Pages::Add(const QVariant& Name)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline IDispatch* Pages::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void Pages::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* AttachmentSelection::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AttachmentSelection::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int AttachmentSelection::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlSelectionLocation AttachmentSelection::Location() const
{
    QVariant qax_result = property("Location");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSelectionLocation*)qax_result.constData();
}

inline IDispatch* AttachmentSelection::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AttachmentSelection::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Selection* AttachmentSelection::GetSelection(Outlook::OlSelectionContents SelectionContents)
{
    Outlook::Selection* qax_result = 0;
    qRegisterMetaType<Outlook::Selection*>("Selection*", &qax_result);
    qRegisterMetaType<Outlook::Selection>("Selection", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&SelectionContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::Attachment* AttachmentSelection::Item(const QVariant& Index)
{
    Outlook::Attachment* qax_result = 0;
    qRegisterMetaType<Outlook::Attachment*>("Attachment*", &qax_result);
    qRegisterMetaType<Outlook::Attachment>("Attachment", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline QString Folder::AddressBookName() const
{
    QVariant qax_result = property("AddressBookName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Folder::SetAddressBookName(const QString& value){ setProperty("AddressBookName", QVariant(value)); }

inline Outlook::_Application* Folder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Folder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::View* Folder::CurrentView() const
{
    Outlook::View* qax_pointer = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_pointer);
    qRegisterMetaType<Outlook::View>("View", qax_pointer);
    QVariant qax_result = property("CurrentView");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::View**)qax_result.constData();
}

inline bool Folder::CustomViewsOnly() const
{
    QVariant qax_result = property("CustomViewsOnly");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Folder::SetCustomViewsOnly(bool value){ setProperty("CustomViewsOnly", QVariant(value)); }

inline Outlook::OlItemType Folder::DefaultItemType() const
{
    QVariant qax_result = property("DefaultItemType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlItemType*)qax_result.constData();
}

inline QString Folder::DefaultMessageClass() const
{
    QVariant qax_result = property("DefaultMessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Folder::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Folder::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QString Folder::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString Folder::FolderPath() const
{
    QVariant qax_result = property("FolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Folders* Folder::Folders() const
{
    Outlook::_Folders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Folders**)qax_result.constData();
}

inline QString Folder::FullFolderPath() const
{
    QVariant qax_result = property("FullFolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool Folder::InAppFolderSyncObject() const
{
    QVariant qax_result = property("InAppFolderSyncObject");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Folder::SetInAppFolderSyncObject(bool value){ setProperty("InAppFolderSyncObject", QVariant(value)); }

inline bool Folder::IsSharePointFolder() const
{
    QVariant qax_result = property("IsSharePointFolder");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_Items* Folder::Items() const
{
    Outlook::_Items* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Items*>("_Items*", &qax_pointer);
    qRegisterMetaType<Outlook::_Items>("_Items", qax_pointer);
    QVariant qax_result = property("Items");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Items**)qax_result.constData();
}

inline IUnknown* Folder::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString Folder::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Folder::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* Folder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* Folder::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* Folder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool Folder::ShowAsOutlookAB() const
{
    QVariant qax_result = property("ShowAsOutlookAB");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Folder::SetShowAsOutlookAB(bool value){ setProperty("ShowAsOutlookAB", QVariant(value)); }

inline Outlook::OlShowItemCount Folder::ShowItemCount() const
{
    QVariant qax_result = property("ShowItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlShowItemCount*)qax_result.constData();
}
inline void Folder::SetShowItemCount(Outlook::OlShowItemCount value){ setProperty("ShowItemCount", QVariant(value)); }

inline Outlook::Store* Folder::Store() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("Store");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline QString Folder::StoreID() const
{
    QVariant qax_result = property("StoreID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int Folder::UnReadItemCount() const
{
    QVariant qax_result = property("UnReadItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::UserDefinedProperties* Folder::UserDefinedProperties() const
{
    Outlook::UserDefinedProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserDefinedProperties*>("UserDefinedProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserDefinedProperties>("UserDefinedProperties", qax_pointer);
    QVariant qax_result = property("UserDefinedProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserDefinedProperties**)qax_result.constData();
}

inline IDispatch* Folder::UserPermissions() const
{
    QVariant qax_result = property("UserPermissions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Views* Folder::Views() const
{
    Outlook::_Views* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Views*>("_Views*", &qax_pointer);
    qRegisterMetaType<Outlook::_Views>("_Views", qax_pointer);
    QVariant qax_result = property("Views");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Views**)qax_result.constData();
}

inline bool Folder::WebViewAllowNavigation() const
{
    QVariant qax_result = property("WebViewAllowNavigation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Folder::SetWebViewAllowNavigation(bool value){ setProperty("WebViewAllowNavigation", QVariant(value)); }

inline bool Folder::WebViewOn() const
{
    QVariant qax_result = property("WebViewOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Folder::SetWebViewOn(bool value){ setProperty("WebViewOn", QVariant(value)); }

inline QString Folder::WebViewURL() const
{
    QVariant qax_result = property("WebViewURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void Folder::SetWebViewURL(const QString& value){ setProperty("WebViewURL", QVariant(value)); }

inline void Folder::AddToFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void Folder::AddToFavorites(const QVariant& fNoUI)
{
    void *_a[] = {0, (void*)&fNoUI};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Folder::AddToFavorites(const QVariant& fNoUI, const QVariant& Name)
{
    void *_a[] = {0, (void*)&fNoUI, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void Folder::AddToPFFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline Outlook::MAPIFolder* Folder::CopyTo(Outlook::MAPIFolder* DestinationFolder)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void Folder::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void Folder::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline Outlook::CalendarSharing* Folder::GetCalendarExporter()
{
    Outlook::CalendarSharing* qax_result = 0;
    qRegisterMetaType<Outlook::CalendarSharing*>("CalendarSharing*", &qax_result);
    qRegisterMetaType<Outlook::CalendarSharing>("CalendarSharing", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QPixmap Folder::GetCustomIcon()
{
    QPixmap qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::_Explorer* Folder::GetExplorer()
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::_Explorer* Folder::GetExplorer(const QVariant& DisplayMode)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DisplayMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::_StorageItem* Folder::GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType)
{
    Outlook::_StorageItem* qax_result = 0;
    qRegisterMetaType<Outlook::_StorageItem*>("_StorageItem*", &qax_result);
    qRegisterMetaType<Outlook::_StorageItem>("_StorageItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&StorageIdentifier, (void*)&StorageIdentifierType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::Table* Folder::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Outlook::Table* Folder::GetTable(const QVariant& Filter)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline Outlook::Table* Folder::GetTable(const QVariant& Filter, const QVariant& TableContents)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter, (void*)&TableContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline void Folder::MoveTo(Outlook::MAPIFolder* DestinationFolder)
{
    void *_a[] = {0, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void Folder::SetCustomIcon(const QPixmap& Picture)
{
    void *_a[] = {0, (void*)&Picture};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
}


inline Outlook::Actions* _DocumentItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _DocumentItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _DocumentItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _DocumentItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _DocumentItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _DocumentItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _DocumentItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _DocumentItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _DocumentItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _DocumentItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _DocumentItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _DocumentItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _DocumentItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _DocumentItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _DocumentItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _DocumentItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _DocumentItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _DocumentItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _DocumentItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _DocumentItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _DocumentItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _DocumentItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _DocumentItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _DocumentItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _DocumentItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _DocumentItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _DocumentItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _DocumentItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _DocumentItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DocumentItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _DocumentItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _DocumentItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _DocumentItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _DocumentItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline bool _DocumentItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _DocumentItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _DocumentItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _DocumentItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _DocumentItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _DocumentItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DocumentItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _DocumentItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DocumentItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _DocumentItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _DocumentItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _DocumentItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _DocumentItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _DocumentItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _DocumentItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline IDispatch* _DocumentItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _DocumentItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _DocumentItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _DocumentItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _DocumentItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _DocumentItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}


inline Outlook::_Application* _NoteItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline bool _NoteItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _NoteItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _NoteItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _NoteItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _NoteItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _NoteItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlNoteColor _NoteItem::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNoteColor*)qax_result.constData();
}
inline void _NoteItem::SetColor(Outlook::OlNoteColor value){ setProperty("Color", QVariant(value)); }

inline Outlook::Conflicts* _NoteItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QDateTime _NoteItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _NoteItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _NoteItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Inspector* _NoteItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline int _NoteItem::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NoteItem::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline bool _NoteItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _NoteItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _NoteItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline int _NoteItem::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NoteItem::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline Outlook::Links* _NoteItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _NoteItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _NoteItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _NoteItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _NoteItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline IDispatch* _NoteItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _NoteItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline bool _NoteItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_NameSpace* _NoteItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _NoteItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _NoteItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _NoteItem::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NoteItem::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int _NoteItem::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NoteItem::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void _NoteItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _NoteItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _NoteItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _NoteItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _NoteItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline IDispatch* _NoteItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void _NoteItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _NoteItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _NoteItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _NoteItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}


inline Outlook::_Application* _ViewField::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ViewField::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ColumnFormat* _ViewField::ColumnFormat() const
{
    Outlook::ColumnFormat* qax_pointer = 0;
    qRegisterMetaType<Outlook::ColumnFormat*>("ColumnFormat*", &qax_pointer);
    qRegisterMetaType<Outlook::ColumnFormat>("ColumnFormat", qax_pointer);
    QVariant qax_result = property("ColumnFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ColumnFormat**)qax_result.constData();
}

inline IDispatch* _ViewField::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ViewField::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _ViewField::ViewXMLSchemaName() const
{
    QVariant qax_result = property("ViewXMLSchemaName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline Outlook::OlAlign ColumnFormat::Align() const
{
    QVariant qax_result = property("Align");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlign*)qax_result.constData();
}
inline void ColumnFormat::SetAlign(Outlook::OlAlign value){ setProperty("Align", QVariant(value)); }

inline Outlook::_Application* ColumnFormat::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ColumnFormat::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int ColumnFormat::FieldFormat() const
{
    QVariant qax_result = property("FieldFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ColumnFormat::SetFieldFormat(int value){ setProperty("FieldFormat", QVariant(value)); }

inline Outlook::OlUserPropertyType ColumnFormat::FieldType() const
{
    QVariant qax_result = property("FieldType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline QString ColumnFormat::Label() const
{
    QVariant qax_result = property("Label");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ColumnFormat::SetLabel(const QString& value){ setProperty("Label", QVariant(value)); }

inline IDispatch* ColumnFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ColumnFormat::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int ColumnFormat::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ColumnFormat::SetWidth(int value){ setProperty("Width", QVariant(value)); }


inline Outlook::OlAlign _ColumnFormat::Align() const
{
    QVariant qax_result = property("Align");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAlign*)qax_result.constData();
}
inline void _ColumnFormat::SetAlign(Outlook::OlAlign value){ setProperty("Align", QVariant(value)); }

inline Outlook::_Application* _ColumnFormat::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ColumnFormat::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _ColumnFormat::FieldFormat() const
{
    QVariant qax_result = property("FieldFormat");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _ColumnFormat::SetFieldFormat(int value){ setProperty("FieldFormat", QVariant(value)); }

inline Outlook::OlUserPropertyType _ColumnFormat::FieldType() const
{
    QVariant qax_result = property("FieldType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlUserPropertyType*)qax_result.constData();
}

inline QString _ColumnFormat::Label() const
{
    QVariant qax_result = property("Label");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ColumnFormat::SetLabel(const QString& value){ setProperty("Label", QVariant(value)); }

inline IDispatch* _ColumnFormat::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ColumnFormat::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _ColumnFormat::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _ColumnFormat::SetWidth(int value){ setProperty("Width", QVariant(value)); }


inline Outlook::_Application* _ViewFields::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ViewFields::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _ViewFields::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _ViewFields::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ViewFields::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::ViewField* _ViewFields::Add(const QString& PropertyName)
{
    Outlook::ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::ViewField*>("ViewField*", &qax_result);
    qRegisterMetaType<Outlook::ViewField>("ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::ViewField* _ViewFields::Insert(const QString& PropertyName, const QVariant& Index)
{
    Outlook::ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::ViewField*>("ViewField*", &qax_result);
    qRegisterMetaType<Outlook::ViewField>("ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::_ViewField* _ViewFields::Item(const QVariant& Index)
{
    Outlook::_ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::_ViewField*>("_ViewField*", &qax_result);
    qRegisterMetaType<Outlook::_ViewField>("_ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _ViewFields::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* ViewField::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ViewField::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ColumnFormat* ViewField::ColumnFormat() const
{
    Outlook::ColumnFormat* qax_pointer = 0;
    qRegisterMetaType<Outlook::ColumnFormat*>("ColumnFormat*", &qax_pointer);
    qRegisterMetaType<Outlook::ColumnFormat>("ColumnFormat", qax_pointer);
    QVariant qax_result = property("ColumnFormat");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ColumnFormat**)qax_result.constData();
}

inline IDispatch* ViewField::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ViewField::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString ViewField::ViewXMLSchemaName() const
{
    QVariant qax_result = property("ViewXMLSchemaName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline Outlook::_Application* _IconView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _IconView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _IconView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _IconView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OlIconViewPlacement _IconView::IconPlacement() const
{
    QVariant qax_result = property("IconPlacement");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlIconViewPlacement*)qax_result.constData();
}
inline void _IconView::SetIconPlacement(Outlook::OlIconViewPlacement value){ setProperty("IconPlacement", QVariant(value)); }

inline Outlook::OlIconViewType _IconView::IconViewType() const
{
    QVariant qax_result = property("IconViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlIconViewType*)qax_result.constData();
}
inline void _IconView::SetIconViewType(Outlook::OlIconViewType value){ setProperty("IconViewType", QVariant(value)); }

inline QString _IconView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _IconView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _IconView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _IconView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString _IconView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _IconView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _IconView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _IconView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _IconView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* _IconView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _IconView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType _IconView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _IconView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _IconView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _IconView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _IconView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _IconView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _IconView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _IconView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _IconView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _IconView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* OrderFields::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OrderFields::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int OrderFields::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* OrderFields::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OrderFields::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderField* OrderFields::Add(const QString& PropertyName)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::OrderField* OrderFields::Add(const QString& PropertyName, const QVariant& IsDescending)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&IsDescending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::OrderField* OrderFields::Insert(const QString& PropertyName, const QVariant& Index)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::OrderField* OrderFields::Insert(const QString& PropertyName, const QVariant& Index, const QVariant& IsDescending)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index, (void*)&IsDescending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::_OrderField* OrderFields::Item(const QVariant& Index)
{
    Outlook::_OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::_OrderField*>("_OrderField*", &qax_result);
    qRegisterMetaType<Outlook::_OrderField>("_OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void OrderFields::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void OrderFields::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _OrderFields::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _OrderFields::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _OrderFields::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _OrderFields::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _OrderFields::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderField* _OrderFields::Add(const QString& PropertyName)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::OrderField* _OrderFields::Add(const QString& PropertyName, const QVariant& IsDescending)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&IsDescending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::OrderField* _OrderFields::Insert(const QString& PropertyName, const QVariant& Index)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::OrderField* _OrderFields::Insert(const QString& PropertyName, const QVariant& Index, const QVariant& IsDescending)
{
    Outlook::OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::OrderField*>("OrderField*", &qax_result);
    qRegisterMetaType<Outlook::OrderField>("OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index, (void*)&IsDescending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::_OrderField* _OrderFields::Item(const QVariant& Index)
{
    Outlook::_OrderField* qax_result = 0;
    qRegisterMetaType<Outlook::_OrderField*>("_OrderField*", &qax_result);
    qRegisterMetaType<Outlook::_OrderField>("_OrderField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _OrderFields::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _OrderFields::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _OrderField::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _OrderField::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _OrderField::IsDescending() const
{
    QVariant qax_result = property("IsDescending");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _OrderField::SetIsDescending(bool value){ setProperty("IsDescending", QVariant(value)); }

inline IDispatch* _OrderField::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _OrderField::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString _OrderField::ViewXMLSchemaName() const
{
    QVariant qax_result = property("ViewXMLSchemaName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline Outlook::_Application* OrderField::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OrderField::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool OrderField::IsDescending() const
{
    QVariant qax_result = property("IsDescending");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OrderField::SetIsDescending(bool value){ setProperty("IsDescending", QVariant(value)); }

inline IDispatch* OrderField::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OrderField::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline QString OrderField::ViewXMLSchemaName() const
{
    QVariant qax_result = property("ViewXMLSchemaName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline bool _CardView::AllowInCellEditing() const
{
    QVariant qax_result = property("AllowInCellEditing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CardView::SetAllowInCellEditing(bool value){ setProperty("AllowInCellEditing", QVariant(value)); }

inline Outlook::_Application* _CardView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* _CardView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline Outlook::ViewFont* _CardView::BodyFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("BodyFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlObjectClass _CardView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _CardView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CardView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* _CardView::HeadingsFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("HeadingsFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString _CardView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CardView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _CardView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CardView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline int _CardView::MultiLineFieldHeight() const
{
    QVariant qax_result = property("MultiLineFieldHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CardView::SetMultiLineFieldHeight(int value){ setProperty("MultiLineFieldHeight", QVariant(value)); }

inline QString _CardView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CardView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _CardView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _CardView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _CardView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _CardView::ShowEmptyFields() const
{
    QVariant qax_result = property("ShowEmptyFields");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CardView::SetShowEmptyFields(bool value){ setProperty("ShowEmptyFields", QVariant(value)); }

inline Outlook::OrderFields* _CardView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _CardView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ViewFields* _CardView::ViewFields() const
{
    Outlook::ViewFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFields*>("ViewFields*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFields>("ViewFields", qax_pointer);
    QVariant qax_result = property("ViewFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFields**)qax_result.constData();
}

inline Outlook::OlViewType _CardView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline int _CardView::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CardView::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline QString _CardView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CardView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _CardView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _CardView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _CardView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _CardView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CardView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _CardView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _CardView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* ViewFields::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ViewFields::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int ViewFields::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* ViewFields::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ViewFields::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::ViewField* ViewFields::Add(const QString& PropertyName)
{
    Outlook::ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::ViewField*>("ViewField*", &qax_result);
    qRegisterMetaType<Outlook::ViewField>("ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::ViewField* ViewFields::Insert(const QString& PropertyName, const QVariant& Index)
{
    Outlook::ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::ViewField*>("ViewField*", &qax_result);
    qRegisterMetaType<Outlook::ViewField>("ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&PropertyName, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::_ViewField* ViewFields::Item(const QVariant& Index)
{
    Outlook::_ViewField* qax_result = 0;
    qRegisterMetaType<Outlook::_ViewField*>("_ViewField*", &qax_result);
    qRegisterMetaType<Outlook::_ViewField>("_ViewField", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void ViewFields::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}


inline Outlook::_Application* ViewFont::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline bool ViewFont::Bold() const
{
    QVariant qax_result = property("Bold");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ViewFont::SetBold(bool value){ setProperty("Bold", QVariant(value)); }

inline Outlook::OlObjectClass ViewFont::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlColor ViewFont::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlColor*)qax_result.constData();
}
inline void ViewFont::SetColor(Outlook::OlColor value){ setProperty("Color", QVariant(value)); }

inline Outlook::OlCategoryColor ViewFont::ExtendedColor() const
{
    QVariant qax_result = property("ExtendedColor");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryColor*)qax_result.constData();
}
inline void ViewFont::SetExtendedColor(Outlook::OlCategoryColor value){ setProperty("ExtendedColor", QVariant(value)); }

inline bool ViewFont::Italic() const
{
    QVariant qax_result = property("Italic");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ViewFont::SetItalic(bool value){ setProperty("Italic", QVariant(value)); }

inline QString ViewFont::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ViewFont::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* ViewFont::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ViewFont::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int ViewFont::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ViewFont::SetSize(int value){ setProperty("Size", QVariant(value)); }

inline bool ViewFont::Strikethrough() const
{
    QVariant qax_result = property("Strikethrough");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ViewFont::SetStrikethrough(bool value){ setProperty("Strikethrough", QVariant(value)); }

inline bool ViewFont::Underline() const
{
    QVariant qax_result = property("Underline");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ViewFont::SetUnderline(bool value){ setProperty("Underline", QVariant(value)); }


inline Outlook::_Application* _ViewFont::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline bool _ViewFont::Bold() const
{
    QVariant qax_result = property("Bold");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ViewFont::SetBold(bool value){ setProperty("Bold", QVariant(value)); }

inline Outlook::OlObjectClass _ViewFont::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlColor _ViewFont::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlColor*)qax_result.constData();
}
inline void _ViewFont::SetColor(Outlook::OlColor value){ setProperty("Color", QVariant(value)); }

inline Outlook::OlCategoryColor _ViewFont::ExtendedColor() const
{
    QVariant qax_result = property("ExtendedColor");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCategoryColor*)qax_result.constData();
}
inline void _ViewFont::SetExtendedColor(Outlook::OlCategoryColor value){ setProperty("ExtendedColor", QVariant(value)); }

inline bool _ViewFont::Italic() const
{
    QVariant qax_result = property("Italic");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ViewFont::SetItalic(bool value){ setProperty("Italic", QVariant(value)); }

inline QString _ViewFont::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ViewFont::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _ViewFont::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ViewFont::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _ViewFont::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _ViewFont::SetSize(int value){ setProperty("Size", QVariant(value)); }

inline bool _ViewFont::Strikethrough() const
{
    QVariant qax_result = property("Strikethrough");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ViewFont::SetStrikethrough(bool value){ setProperty("Strikethrough", QVariant(value)); }

inline bool _ViewFont::Underline() const
{
    QVariant qax_result = property("Underline");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ViewFont::SetUnderline(bool value){ setProperty("Underline", QVariant(value)); }


inline Outlook::_Application* AutoFormatRules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AutoFormatRules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int AutoFormatRules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* AutoFormatRules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AutoFormatRules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::AutoFormatRule* AutoFormatRules::Add(const QString& Name)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::AutoFormatRule* AutoFormatRules::Insert(const QString& Name, const QVariant& Index)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::AutoFormatRule* AutoFormatRules::Item(const QVariant& Index)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void AutoFormatRules::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void AutoFormatRules::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void AutoFormatRules::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline Outlook::_Application* _AutoFormatRules::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AutoFormatRules::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _AutoFormatRules::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _AutoFormatRules::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AutoFormatRules::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::AutoFormatRule* _AutoFormatRules::Add(const QString& Name)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::AutoFormatRule* _AutoFormatRules::Insert(const QString& Name, const QVariant& Index)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::AutoFormatRule* _AutoFormatRules::Item(const QVariant& Index)
{
    Outlook::AutoFormatRule* qax_result = 0;
    qRegisterMetaType<Outlook::AutoFormatRule*>("AutoFormatRule*", &qax_result);
    qRegisterMetaType<Outlook::AutoFormatRule>("AutoFormatRule", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _AutoFormatRules::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _AutoFormatRules::RemoveAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _AutoFormatRules::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline Outlook::_Application* AutoFormatRule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AutoFormatRule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool AutoFormatRule::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void AutoFormatRule::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString AutoFormatRule::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AutoFormatRule::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* AutoFormatRule::Font() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}
inline void AutoFormatRule::SetFont(Outlook::ViewFont* value){
    int typeId = qRegisterMetaType<Outlook::ViewFont*>("Outlook::ViewFont*", &value);
    setProperty("Font", QVariant(typeId, &value));
}

inline QString AutoFormatRule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AutoFormatRule::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* AutoFormatRule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* AutoFormatRule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool AutoFormatRule::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}


inline Outlook::_Application* _AutoFormatRule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _AutoFormatRule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool _AutoFormatRule::Enabled() const
{
    QVariant qax_result = property("Enabled");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _AutoFormatRule::SetEnabled(bool value){ setProperty("Enabled", QVariant(value)); }

inline QString _AutoFormatRule::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AutoFormatRule::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* _AutoFormatRule::Font() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("Font");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}
inline void _AutoFormatRule::SetFont(Outlook::ViewFont* value){
    int typeId = qRegisterMetaType<Outlook::ViewFont*>("Outlook::ViewFont*", &value);
    setProperty("Font", QVariant(typeId, &value));
}

inline QString _AutoFormatRule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _AutoFormatRule::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _AutoFormatRule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _AutoFormatRule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _AutoFormatRule::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}


inline Outlook::_Application* _TimelineView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _TimelineView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlDefaultExpandCollapseSetting _TimelineView::DefaultExpandCollapseSetting() const
{
    QVariant qax_result = property("DefaultExpandCollapseSetting");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultExpandCollapseSetting*)qax_result.constData();
}
inline void _TimelineView::SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value){ setProperty("DefaultExpandCollapseSetting", QVariant(value)); }

inline QString _TimelineView::EndField() const
{
    QVariant qax_result = property("EndField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetEndField(const QString& value){ setProperty("EndField", QVariant(value)); }

inline QString _TimelineView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OrderFields* _TimelineView::GroupByFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("GroupByFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline Outlook::ViewFont* _TimelineView::ItemFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("ItemFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString _TimelineView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _TimelineView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TimelineView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline Outlook::ViewFont* _TimelineView::LowerScaleFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("LowerScaleFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline int _TimelineView::MaxLabelWidth() const
{
    QVariant qax_result = property("MaxLabelWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TimelineView::SetMaxLabelWidth(int value){ setProperty("MaxLabelWidth", QVariant(value)); }

inline QString _TimelineView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _TimelineView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _TimelineView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _TimelineView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _TimelineView::ShowLabelWhenViewingByMonth() const
{
    QVariant qax_result = property("ShowLabelWhenViewingByMonth");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TimelineView::SetShowLabelWhenViewingByMonth(bool value){ setProperty("ShowLabelWhenViewingByMonth", QVariant(value)); }

inline bool _TimelineView::ShowWeekNumbers() const
{
    QVariant qax_result = property("ShowWeekNumbers");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TimelineView::SetShowWeekNumbers(bool value){ setProperty("ShowWeekNumbers", QVariant(value)); }

inline bool _TimelineView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TimelineView::StartField() const
{
    QVariant qax_result = property("StartField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetStartField(const QString& value){ setProperty("StartField", QVariant(value)); }

inline Outlook::OlTimelineViewMode _TimelineView::TimelineViewMode() const
{
    QVariant qax_result = property("TimelineViewMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTimelineViewMode*)qax_result.constData();
}
inline void _TimelineView::SetTimelineViewMode(Outlook::OlTimelineViewMode value){ setProperty("TimelineViewMode", QVariant(value)); }

inline Outlook::ViewFont* _TimelineView::UpperScaleFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("UpperScaleFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlViewType _TimelineView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _TimelineView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TimelineView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _TimelineView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _TimelineView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _TimelineView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _TimelineView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _TimelineView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _TimelineView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _TimelineView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _MailModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _MailModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _MailModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _MailModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _MailModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _MailModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _MailModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _MailModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _MailModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _MailModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MailModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _NavigationGroups::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationGroups::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _NavigationGroups::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _NavigationGroups::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NavigationGroups::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationGroup* _NavigationGroups::Create(const QString& GroupDisplayName)
{
    Outlook::NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationGroup*>("NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::NavigationGroup>("NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupDisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _NavigationGroups::Delete(Outlook::NavigationGroup* Group)
{
    void *_a[] = {0, (void*)&Group};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline Outlook::NavigationGroup* _NavigationGroups::GetDefaultNavigationGroup(Outlook::OlGroupType DefaultFolderGroup)
{
    Outlook::NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationGroup*>("NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::NavigationGroup>("NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DefaultFolderGroup};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::_NavigationGroup* _NavigationGroups::Item(const QVariant& Index)
{
    Outlook::_NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationGroup*>("_NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationGroup>("_NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline Outlook::_Application* _NavigationGroup::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationGroup::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlGroupType _NavigationGroup::GroupType() const
{
    QVariant qax_result = property("GroupType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGroupType*)qax_result.constData();
}

inline QString _NavigationGroup::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _NavigationGroup::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline Outlook::NavigationFolders* _NavigationGroup::NavigationFolders() const
{
    Outlook::NavigationFolders* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationFolders*>("NavigationFolders*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationFolders>("NavigationFolders", qax_pointer);
    QVariant qax_result = property("NavigationFolders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationFolders**)qax_result.constData();
}

inline IDispatch* _NavigationGroup::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _NavigationGroup::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NavigationGroup::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _NavigationGroup::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* NavigationFolders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationFolders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int NavigationFolders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* NavigationFolders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NavigationFolders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationFolder* NavigationFolders::Add(Outlook::MAPIFolder* Folder)
{
    Outlook::NavigationFolder* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationFolder*>("NavigationFolder*", &qax_result);
    qRegisterMetaType<Outlook::NavigationFolder>("NavigationFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_NavigationFolder* NavigationFolders::Item(const QVariant& Index)
{
    Outlook::_NavigationFolder* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationFolder*>("_NavigationFolder*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationFolder>("_NavigationFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void NavigationFolders::Remove(Outlook::NavigationFolder* RemovableFolder)
{
    void *_a[] = {0, (void*)&RemovableFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* _NavigationFolders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationFolders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int _NavigationFolders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _NavigationFolders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _NavigationFolders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationFolder* _NavigationFolders::Add(Outlook::MAPIFolder* Folder)
{
    Outlook::NavigationFolder* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationFolder*>("NavigationFolder*", &qax_result);
    qRegisterMetaType<Outlook::NavigationFolder>("NavigationFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::_NavigationFolder* _NavigationFolders::Item(const QVariant& Index)
{
    Outlook::_NavigationFolder* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationFolder*>("_NavigationFolder*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationFolder>("_NavigationFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _NavigationFolders::Remove(Outlook::NavigationFolder* RemovableFolder)
{
    void *_a[] = {0, (void*)&RemovableFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* _NavigationFolder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NavigationFolder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _NavigationFolder::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* _NavigationFolder::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}

inline bool _NavigationFolder::IsRemovable() const
{
    QVariant qax_result = property("IsRemovable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _NavigationFolder::IsSelected() const
{
    QVariant qax_result = property("IsSelected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NavigationFolder::SetIsSelected(bool value){ setProperty("IsSelected", QVariant(value)); }

inline bool _NavigationFolder::IsSideBySide() const
{
    QVariant qax_result = property("IsSideBySide");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NavigationFolder::SetIsSideBySide(bool value){ setProperty("IsSideBySide", QVariant(value)); }

inline IDispatch* _NavigationFolder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _NavigationFolder::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NavigationFolder::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _NavigationFolder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* NavigationFolder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationFolder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString NavigationFolder::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::MAPIFolder* NavigationFolder::Folder() const
{
    Outlook::MAPIFolder* qax_pointer = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_pointer);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_pointer);
    QVariant qax_result = property("Folder");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::MAPIFolder**)qax_result.constData();
}

inline bool NavigationFolder::IsRemovable() const
{
    QVariant qax_result = property("IsRemovable");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool NavigationFolder::IsSelected() const
{
    QVariant qax_result = property("IsSelected");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NavigationFolder::SetIsSelected(bool value){ setProperty("IsSelected", QVariant(value)); }

inline bool NavigationFolder::IsSideBySide() const
{
    QVariant qax_result = property("IsSideBySide");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NavigationFolder::SetIsSideBySide(bool value){ setProperty("IsSideBySide", QVariant(value)); }

inline IDispatch* NavigationFolder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int NavigationFolder::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NavigationFolder::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* NavigationFolder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* NavigationGroup::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationGroup::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlGroupType NavigationGroup::GroupType() const
{
    QVariant qax_result = property("GroupType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGroupType*)qax_result.constData();
}

inline QString NavigationGroup::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void NavigationGroup::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline Outlook::NavigationFolders* NavigationGroup::NavigationFolders() const
{
    Outlook::NavigationFolders* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationFolders*>("NavigationFolders*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationFolders>("NavigationFolders", qax_pointer);
    QVariant qax_result = property("NavigationFolders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationFolders**)qax_result.constData();
}

inline IDispatch* NavigationGroup::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int NavigationGroup::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NavigationGroup::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* NavigationGroup::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* _CalendarModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _CalendarModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _CalendarModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _CalendarModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _CalendarModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _CalendarModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _CalendarModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CalendarModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _CalendarModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _CalendarModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _ContactsModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ContactsModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ContactsModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _ContactsModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _ContactsModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _ContactsModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _ContactsModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _ContactsModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _ContactsModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _ContactsModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ContactsModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _TasksModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _TasksModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TasksModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _TasksModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _TasksModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _TasksModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _TasksModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TasksModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _TasksModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _TasksModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TasksModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _JournalModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _JournalModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _JournalModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _JournalModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _JournalModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _JournalModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _JournalModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _JournalModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _JournalModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _JournalModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _NotesModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _NotesModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _NotesModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* _NotesModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _NotesModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _NotesModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _NotesModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _NotesModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _NotesModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _NotesModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _NotesModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* _BusinessCardView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline int _BusinessCardView::CardSize() const
{
    QVariant qax_result = property("CardSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _BusinessCardView::SetCardSize(int value){ setProperty("CardSize", QVariant(value)); }

inline Outlook::OlObjectClass _BusinessCardView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _BusinessCardView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _BusinessCardView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* _BusinessCardView::HeadingsFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("HeadingsFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString _BusinessCardView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _BusinessCardView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _BusinessCardView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _BusinessCardView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString _BusinessCardView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _BusinessCardView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _BusinessCardView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _BusinessCardView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _BusinessCardView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* _BusinessCardView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _BusinessCardView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType _BusinessCardView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _BusinessCardView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _BusinessCardView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _BusinessCardView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _BusinessCardView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _BusinessCardView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _BusinessCardView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _BusinessCardView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _BusinessCardView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _BusinessCardView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline void _FormRegionStartup::BeforeFormRegionShow(Outlook::FormRegion* FormRegion)
{
    void *_a[] = {0, (void*)&FormRegion};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QVariant _FormRegionStartup::GetFormRegionIcon(const QString& FormRegionName, int LCID, Outlook::OlFormRegionIcon Icon)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&LCID, (void*)&Icon};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant _FormRegionStartup::GetFormRegionManifest(const QString& FormRegionName, int LCID)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&LCID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant _FormRegionStartup::GetFormRegionStorage(const QString& FormRegionName, IDispatch* Item, int LCID, Outlook::OlFormRegionMode FormRegionMode, Outlook::OlFormRegionSize FormRegionSize)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&Item, (void*)&LCID, (void*)&FormRegionMode, (void*)&FormRegionSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline Outlook::_Application* FormRegion::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass FormRegion::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString FormRegion::Detail() const
{
    QVariant qax_result = property("Detail");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void FormRegion::SetDetail(const QString& value){ setProperty("Detail", QVariant(value)); }

inline QString FormRegion::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool FormRegion::EnableAutoLayout() const
{
    QVariant qax_result = property("EnableAutoLayout");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormRegion::SetEnableAutoLayout(bool value){ setProperty("EnableAutoLayout", QVariant(value)); }

inline IDispatch* FormRegion::Form() const
{
    QVariant qax_result = property("Form");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlFormRegionMode FormRegion::FormRegionMode() const
{
    QVariant qax_result = property("FormRegionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFormRegionMode*)qax_result.constData();
}

inline Outlook::_Inspector* FormRegion::Inspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("Inspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString FormRegion::InternalName() const
{
    QVariant qax_result = property("InternalName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool FormRegion::IsExpanded() const
{
    QVariant qax_result = property("IsExpanded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* FormRegion::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int FormRegion::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* FormRegion::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* FormRegion::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool FormRegion::SuppressControlReplacement() const
{
    QVariant qax_result = property("SuppressControlReplacement");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormRegion::SetSuppressControlReplacement(bool value){ setProperty("SuppressControlReplacement", QVariant(value)); }

inline bool FormRegion::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void FormRegion::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline void FormRegion::Reflow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void FormRegion::Select()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void FormRegion::SetControlItemProperty(IDispatch* Control, const QString& PropertyName)
{
    void *_a[] = {0, (void*)&Control, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}


inline Outlook::_Application* _FormRegion::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _FormRegion::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _FormRegion::Detail() const
{
    QVariant qax_result = property("Detail");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _FormRegion::SetDetail(const QString& value){ setProperty("Detail", QVariant(value)); }

inline QString _FormRegion::DisplayName() const
{
    QVariant qax_result = property("DisplayName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _FormRegion::EnableAutoLayout() const
{
    QVariant qax_result = property("EnableAutoLayout");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _FormRegion::SetEnableAutoLayout(bool value){ setProperty("EnableAutoLayout", QVariant(value)); }

inline IDispatch* _FormRegion::Form() const
{
    QVariant qax_result = property("Form");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlFormRegionMode _FormRegion::FormRegionMode() const
{
    QVariant qax_result = property("FormRegionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlFormRegionMode*)qax_result.constData();
}

inline Outlook::_Inspector* _FormRegion::Inspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("Inspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _FormRegion::InternalName() const
{
    QVariant qax_result = property("InternalName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _FormRegion::IsExpanded() const
{
    QVariant qax_result = property("IsExpanded");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* _FormRegion::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _FormRegion::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* _FormRegion::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _FormRegion::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _FormRegion::SuppressControlReplacement() const
{
    QVariant qax_result = property("SuppressControlReplacement");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _FormRegion::SetSuppressControlReplacement(bool value){ setProperty("SuppressControlReplacement", QVariant(value)); }

inline bool _FormRegion::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _FormRegion::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline void _FormRegion::Reflow()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _FormRegion::Select()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _FormRegion::SetControlItemProperty(IDispatch* Control, const QString& PropertyName)
{
    void *_a[] = {0, (void*)&Control, (void*)&PropertyName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* _SolutionsModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _SolutionsModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _SolutionsModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlNavigationModuleType _SolutionsModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* _SolutionsModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _SolutionsModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _SolutionsModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* _SolutionsModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _SolutionsModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _SolutionsModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline void _SolutionsModule::AddSolution(Outlook::MAPIFolder* Solution, Outlook::OlSolutionScope Scope)
{
    void *_a[] = {0, (void*)&Solution, (void*)&Scope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* _CalendarView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* _CalendarView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline bool _CalendarView::BoldDatesWithItems() const
{
    QVariant qax_result = property("BoldDatesWithItems");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarView::SetBoldDatesWithItems(bool value){ setProperty("BoldDatesWithItems", QVariant(value)); }

inline bool _CalendarView::BoldSubjects() const
{
    QVariant qax_result = property("BoldSubjects");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarView::SetBoldSubjects(bool value){ setProperty("BoldSubjects", QVariant(value)); }

inline Outlook::OlCalendarViewMode _CalendarView::CalendarViewMode() const
{
    QVariant qax_result = property("CalendarViewMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCalendarViewMode*)qax_result.constData();
}
inline void _CalendarView::SetCalendarViewMode(Outlook::OlCalendarViewMode value){ setProperty("CalendarViewMode", QVariant(value)); }

inline Outlook::OlObjectClass _CalendarView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ViewFont* _CalendarView::DayWeekFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("DayWeekFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::ViewFont* _CalendarView::DayWeekTimeFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("DayWeekTimeFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlDayWeekTimeScale _CalendarView::DayWeekTimeScale() const
{
    QVariant qax_result = property("DayWeekTimeScale");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDayWeekTimeScale*)qax_result.constData();
}
inline void _CalendarView::SetDayWeekTimeScale(Outlook::OlDayWeekTimeScale value){ setProperty("DayWeekTimeScale", QVariant(value)); }

inline int _CalendarView::DaysInMultiDayMode() const
{
    QVariant qax_result = property("DaysInMultiDayMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _CalendarView::SetDaysInMultiDayMode(int value){ setProperty("DaysInMultiDayMode", QVariant(value)); }

inline QVariant _CalendarView::DisplayedDates() const
{
    QVariant qax_result = property("DisplayedDates");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString _CalendarView::EndField() const
{
    QVariant qax_result = property("EndField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetEndField(const QString& value){ setProperty("EndField", QVariant(value)); }

inline QString _CalendarView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString _CalendarView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _CalendarView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline Outlook::ViewFont* _CalendarView::MonthFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("MonthFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline bool _CalendarView::MonthShowEndTime() const
{
    QVariant qax_result = property("MonthShowEndTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _CalendarView::SetMonthShowEndTime(bool value){ setProperty("MonthShowEndTime", QVariant(value)); }

inline QString _CalendarView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _CalendarView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _CalendarView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline QDateTime _CalendarView::SelectedEndTime() const
{
    QVariant qax_result = property("SelectedEndTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _CalendarView::SelectedStartTime() const
{
    QVariant qax_result = property("SelectedStartTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* _CalendarView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _CalendarView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _CalendarView::StartField() const
{
    QVariant qax_result = property("StartField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetStartField(const QString& value){ setProperty("StartField", QVariant(value)); }

inline Outlook::OlViewType _CalendarView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _CalendarView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _CalendarView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _CalendarView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _CalendarView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _CalendarView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _CalendarView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _CalendarView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _CalendarView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _CalendarView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline bool _TableView::AllowInCellEditing() const
{
    QVariant qax_result = property("AllowInCellEditing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetAllowInCellEditing(bool value){ setProperty("AllowInCellEditing", QVariant(value)); }

inline bool _TableView::AlwaysExpandConversation() const
{
    QVariant qax_result = property("AlwaysExpandConversation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetAlwaysExpandConversation(bool value){ setProperty("AlwaysExpandConversation", QVariant(value)); }

inline Outlook::_Application* _TableView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* _TableView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline Outlook::OlAutoPreview _TableView::AutoPreview() const
{
    QVariant qax_result = property("AutoPreview");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoPreview*)qax_result.constData();
}
inline void _TableView::SetAutoPreview(Outlook::OlAutoPreview value){ setProperty("AutoPreview", QVariant(value)); }

inline Outlook::ViewFont* _TableView::AutoPreviewFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("AutoPreviewFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline bool _TableView::AutomaticColumnSizing() const
{
    QVariant qax_result = property("AutomaticColumnSizing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetAutomaticColumnSizing(bool value){ setProperty("AutomaticColumnSizing", QVariant(value)); }

inline bool _TableView::AutomaticGrouping() const
{
    QVariant qax_result = property("AutomaticGrouping");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetAutomaticGrouping(bool value){ setProperty("AutomaticGrouping", QVariant(value)); }

inline Outlook::OlObjectClass _TableView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ViewFont* _TableView::ColumnFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("ColumnFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlDefaultExpandCollapseSetting _TableView::DefaultExpandCollapseSetting() const
{
    QVariant qax_result = property("DefaultExpandCollapseSetting");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultExpandCollapseSetting*)qax_result.constData();
}
inline void _TableView::SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value){ setProperty("DefaultExpandCollapseSetting", QVariant(value)); }

inline QString _TableView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TableView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OlGridLineStyle _TableView::GridLineStyle() const
{
    QVariant qax_result = property("GridLineStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGridLineStyle*)qax_result.constData();
}
inline void _TableView::SetGridLineStyle(Outlook::OlGridLineStyle value){ setProperty("GridLineStyle", QVariant(value)); }

inline Outlook::OrderFields* _TableView::GroupByFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("GroupByFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _TableView::HideReadingPaneHeaderInfo() const
{
    QVariant qax_result = property("HideReadingPaneHeaderInfo");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetHideReadingPaneHeaderInfo(bool value){ setProperty("HideReadingPaneHeaderInfo", QVariant(value)); }

inline QString _TableView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TableView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _TableView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline int _TableView::MaxLinesInMultiLineView() const
{
    QVariant qax_result = property("MaxLinesInMultiLineView");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TableView::SetMaxLinesInMultiLineView(int value){ setProperty("MaxLinesInMultiLineView", QVariant(value)); }

inline Outlook::OlMultiLine _TableView::MultiLine() const
{
    QVariant qax_result = property("MultiLine");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMultiLine*)qax_result.constData();
}
inline void _TableView::SetMultiLine(Outlook::OlMultiLine value){ setProperty("MultiLine", QVariant(value)); }

inline int _TableView::MultiLineWidth() const
{
    QVariant qax_result = property("MultiLineWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TableView::SetMultiLineWidth(int value){ setProperty("MultiLineWidth", QVariant(value)); }

inline QString _TableView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TableView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _TableView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::ViewFont* _TableView::RowFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("RowFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _TableView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _TableView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _TableView::ShowConversationByDate() const
{
    QVariant qax_result = property("ShowConversationByDate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowConversationByDate(bool value){ setProperty("ShowConversationByDate", QVariant(value)); }

inline bool _TableView::ShowConversationSendersAboveSubject() const
{
    QVariant qax_result = property("ShowConversationSendersAboveSubject");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowConversationSendersAboveSubject(bool value){ setProperty("ShowConversationSendersAboveSubject", QVariant(value)); }

inline bool _TableView::ShowFullConversations() const
{
    QVariant qax_result = property("ShowFullConversations");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowFullConversations(bool value){ setProperty("ShowFullConversations", QVariant(value)); }

inline bool _TableView::ShowItemsInGroups() const
{
    QVariant qax_result = property("ShowItemsInGroups");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowItemsInGroups(bool value){ setProperty("ShowItemsInGroups", QVariant(value)); }

inline bool _TableView::ShowNewItemRow() const
{
    QVariant qax_result = property("ShowNewItemRow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowNewItemRow(bool value){ setProperty("ShowNewItemRow", QVariant(value)); }

inline bool _TableView::ShowReadingPane() const
{
    QVariant qax_result = property("ShowReadingPane");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowReadingPane(bool value){ setProperty("ShowReadingPane", QVariant(value)); }

inline bool _TableView::ShowUnreadAndFlaggedMessages() const
{
    QVariant qax_result = property("ShowUnreadAndFlaggedMessages");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TableView::SetShowUnreadAndFlaggedMessages(bool value){ setProperty("ShowUnreadAndFlaggedMessages", QVariant(value)); }

inline Outlook::OrderFields* _TableView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _TableView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ViewFields* _TableView::ViewFields() const
{
    Outlook::ViewFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFields*>("ViewFields*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFields>("ViewFields", qax_pointer);
    QVariant qax_result = property("ViewFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFields**)qax_result.constData();
}

inline Outlook::OlViewType _TableView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _TableView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TableView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _TableView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _TableView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _TableView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _TableView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Outlook::Table* _TableView::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _TableView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _TableView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _TableView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}


inline Outlook::Actions* _MobileItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _MobileItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _MobileItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline QString _MobileItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _MobileItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _MobileItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _MobileItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _MobileItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline QString _MobileItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MobileItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int _MobileItem::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _MobileItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _MobileItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _MobileItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _MobileItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _MobileItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance _MobileItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _MobileItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline Outlook::ItemProperties* _MobileItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _MobileItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IUnknown* _MobileItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString _MobileItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _MobileItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline Outlook::OlMobileFormat _MobileItem::MobileFormat() const
{
    QVariant qax_result = property("MobileFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMobileFormat*)qax_result.constData();
}

inline bool _MobileItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MobileItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _MobileItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MobileItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _MobileItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _MobileItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QString _MobileItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MobileItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _MobileItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Recipients* _MobileItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QString _MobileItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* _MobileItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QString _MobileItem::SMILBody() const
{
    QVariant qax_result = property("SMILBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetSMILBody(const QString& value){ setProperty("SMILBody", QVariant(value)); }

inline bool _MobileItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* _MobileItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _MobileItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString _MobileItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MobileItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _MobileItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity _MobileItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _MobileItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool _MobileItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime _MobileItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* _MobileItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _MobileItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _MobileItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _MobileItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _MobileItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MobileItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline bool _MobileItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MobileItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _MobileItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _MobileItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _MobileItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _MobileItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _MobileItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _MobileItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::MobileItem* _MobileItem::Forward()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* _MobileItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _MobileItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline Outlook::MobileItem* _MobileItem::Reply()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::MobileItem* _MobileItem::ReplyAll()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _MobileItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _MobileItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _MobileItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _MobileItem::Send(bool ForceSend)
{
    void *_a[] = {0, (void*)&ForceSend};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}


inline Outlook::Actions* MobileItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* MobileItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* MobileItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline QString MobileItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString MobileItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString MobileItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass MobileItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString MobileItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline QString MobileItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MobileItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int MobileItem::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime MobileItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString MobileItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* MobileItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* MobileItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString MobileItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance MobileItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void MobileItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline Outlook::ItemProperties* MobileItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime MobileItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IUnknown* MobileItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString MobileItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString MobileItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline Outlook::OlMobileFormat MobileItem::MobileFormat() const
{
    QVariant qax_result = property("MobileFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMobileFormat*)qax_result.constData();
}

inline bool MobileItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MobileItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int MobileItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MobileItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* MobileItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* MobileItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QString MobileItem::ReceivedByEntryID() const
{
    QVariant qax_result = property("ReceivedByEntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MobileItem::ReceivedByName() const
{
    QVariant qax_result = property("ReceivedByName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime MobileItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Recipients* MobileItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QString MobileItem::ReplyRecipientNames() const
{
    QVariant qax_result = property("ReplyRecipientNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipients* MobileItem::ReplyRecipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("ReplyRecipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline QString MobileItem::SMILBody() const
{
    QVariant qax_result = property("SMILBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetSMILBody(const QString& value){ setProperty("SMILBody", QVariant(value)); }

inline bool MobileItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::Account* MobileItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void MobileItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline QString MobileItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MobileItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString MobileItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity MobileItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void MobileItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline bool MobileItem::Sent() const
{
    QVariant qax_result = property("Sent");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QDateTime MobileItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* MobileItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int MobileItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString MobileItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool MobileItem::Submitted() const
{
    QVariant qax_result = property("Submitted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString MobileItem::To() const
{
    QVariant qax_result = property("To");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MobileItem::SetTo(const QString& value){ setProperty("To", QVariant(value)); }

inline bool MobileItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MobileItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* MobileItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void MobileItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* MobileItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void MobileItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void MobileItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void MobileItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::MobileItem* MobileItem::Forward()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline IDispatch* MobileItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline void MobileItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline Outlook::MobileItem* MobileItem::Reply()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::MobileItem* MobileItem::ReplyAll()
{
    Outlook::MobileItem* qax_result = 0;
    qRegisterMetaType<Outlook::MobileItem*>("MobileItem*", &qax_result);
    qRegisterMetaType<Outlook::MobileItem>("MobileItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline void MobileItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void MobileItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void MobileItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void MobileItem::Send(bool ForceSend)
{
    void *_a[] = {0, (void*)&ForceSend};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}


inline Outlook::Actions* _JournalItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _JournalItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _JournalItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _JournalItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _JournalItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _JournalItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _JournalItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _JournalItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _JournalItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _JournalItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _JournalItem::ContactNames() const
{
    QVariant qax_result = property("ContactNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetContactNames(const QString& value){ setProperty("ContactNames", QVariant(value)); }

inline QString _JournalItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _JournalItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _JournalItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _JournalItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool _JournalItem::DocPosted() const
{
    QVariant qax_result = property("DocPosted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetDocPosted(bool value){ setProperty("DocPosted", QVariant(value)); }

inline bool _JournalItem::DocPrinted() const
{
    QVariant qax_result = property("DocPrinted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetDocPrinted(bool value){ setProperty("DocPrinted", QVariant(value)); }

inline bool _JournalItem::DocRouted() const
{
    QVariant qax_result = property("DocRouted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetDocRouted(bool value){ setProperty("DocRouted", QVariant(value)); }

inline bool _JournalItem::DocSaved() const
{
    QVariant qax_result = property("DocSaved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetDocSaved(bool value){ setProperty("DocSaved", QVariant(value)); }

inline Outlook::OlDownloadState _JournalItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline int _JournalItem::Duration() const
{
    QVariant qax_result = property("Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _JournalItem::SetDuration(int value){ setProperty("Duration", QVariant(value)); }

inline QDateTime _JournalItem::End() const
{
    QVariant qax_result = property("End");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _JournalItem::SetEnd(const QDateTime& value){ setProperty("End", QVariant(value)); }

inline QString _JournalItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _JournalItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _JournalItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _JournalItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _JournalItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _JournalItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _JournalItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _JournalItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _JournalItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _JournalItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _JournalItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _JournalItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _JournalItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _JournalItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _JournalItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _JournalItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _JournalItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _JournalItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _JournalItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::Recipients* _JournalItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool _JournalItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _JournalItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _JournalItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _JournalItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _JournalItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _JournalItem::Start() const
{
    QVariant qax_result = property("Start");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _JournalItem::SetStart(const QDateTime& value){ setProperty("Start", QVariant(value)); }

inline QString _JournalItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QString _JournalItem::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _JournalItem::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline bool _JournalItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _JournalItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _JournalItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _JournalItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _JournalItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _JournalItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _JournalItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _JournalItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::MailItem* _JournalItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_Conversation* _JournalItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _JournalItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _JournalItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline Outlook::MailItem* _JournalItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::MailItem* _JournalItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _JournalItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _JournalItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _JournalItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _JournalItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void _JournalItem::StartTimer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void _JournalItem::StopTimer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}


inline Outlook::Actions* _PostItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _PostItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _PostItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _PostItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _PostItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _PostItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat _PostItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void _PostItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString _PostItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _PostItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _PostItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _PostItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _PostItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _PostItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _PostItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _PostItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _PostItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _PostItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _PostItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline Outlook::FormDescription* _PostItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _PostItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString _PostItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance _PostItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _PostItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int _PostItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _PostItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool _PostItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _PostItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _PostItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _PostItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _PostItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _PostItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _PostItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _PostItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _PostItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _PostItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _PostItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PostItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _PostItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _PostItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _PostItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _PostItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _PostItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _PostItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QDateTime _PostItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool _PostItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PostItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _PostItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PostItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _PostItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PostItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _PostItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _PostItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool _PostItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _PostItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _PostItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _PostItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity _PostItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _PostItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline QDateTime _PostItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* _PostItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _PostItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _PostItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QDateTime _PostItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime _PostItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime _PostItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString _PostItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PostItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QDateTime _PostItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _PostItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool _PostItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PostItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _PostItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _PostItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _PostItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _PostItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline IDispatch* _PostItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void _PostItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _PostItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _PostItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Outlook::MailItem* _PostItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Outlook::_Conversation* _PostItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void _PostItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline IDispatch* _PostItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _PostItem::Post()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _PostItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline Outlook::MailItem* _PostItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void _PostItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _PostItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _PostItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline bool _PostItem::SetACLs()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline void _PostItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}


inline Outlook::Actions* _TaskItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline int _TaskItem::ActualWork() const
{
    QVariant qax_result = property("ActualWork");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TaskItem::SetActualWork(int value){ setProperty("ActualWork", QVariant(value)); }

inline Outlook::_Application* _TaskItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _TaskItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _TaskItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _TaskItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _TaskItem::CardData() const
{
    QVariant qax_result = property("CardData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetCardData(const QString& value){ setProperty("CardData", QVariant(value)); }

inline QString _TaskItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _TaskItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TaskItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline bool _TaskItem::Complete() const
{
    QVariant qax_result = property("Complete");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetComplete(bool value){ setProperty("Complete", QVariant(value)); }

inline Outlook::Conflicts* _TaskItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _TaskItem::ContactNames() const
{
    QVariant qax_result = property("ContactNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetContactNames(const QString& value){ setProperty("ContactNames", QVariant(value)); }

inline QString _TaskItem::Contacts() const
{
    QVariant qax_result = property("Contacts");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetContacts(const QString& value){ setProperty("Contacts", QVariant(value)); }

inline QString _TaskItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _TaskItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime _TaskItem::DateCompleted() const
{
    QVariant qax_result = property("DateCompleted");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _TaskItem::SetDateCompleted(const QDateTime& value){ setProperty("DateCompleted", QVariant(value)); }

inline Outlook::OlTaskDelegationState _TaskItem::DelegationState() const
{
    QVariant qax_result = property("DelegationState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskDelegationState*)qax_result.constData();
}

inline QString _TaskItem::Delegator() const
{
    QVariant qax_result = property("Delegator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlDownloadState _TaskItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QDateTime _TaskItem::DueDate() const
{
    QVariant qax_result = property("DueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _TaskItem::SetDueDate(const QDateTime& value){ setProperty("DueDate", QVariant(value)); }

inline QString _TaskItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _TaskItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _TaskItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _TaskItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _TaskItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int _TaskItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TaskItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool _TaskItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _TaskItem::IsRecurring() const
{
    QVariant qax_result = property("IsRecurring");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _TaskItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _TaskItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _TaskItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _TaskItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _TaskItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _TaskItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _TaskItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _TaskItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _TaskItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _TaskItem::Ordinal() const
{
    QVariant qax_result = property("Ordinal");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TaskItem::SetOrdinal(int value){ setProperty("Ordinal", QVariant(value)); }

inline int _TaskItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskItem::Owner() const
{
    QVariant qax_result = property("Owner");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetOwner(const QString& value){ setProperty("Owner", QVariant(value)); }

inline Outlook::OlTaskOwnership _TaskItem::Ownership() const
{
    QVariant qax_result = property("Ownership");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskOwnership*)qax_result.constData();
}

inline IDispatch* _TaskItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int _TaskItem::PercentComplete() const
{
    QVariant qax_result = property("PercentComplete");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TaskItem::SetPercentComplete(int value){ setProperty("PercentComplete", QVariant(value)); }

inline Outlook::PropertyAccessor* _TaskItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _TaskItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TaskItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline Outlook::Recipients* _TaskItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool _TaskItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _TaskItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _TaskItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _TaskItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _TaskItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _TaskItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::OlTaskResponse _TaskItem::ResponseState() const
{
    QVariant qax_result = property("ResponseState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskResponse*)qax_result.constData();
}

inline QString _TaskItem::Role() const
{
    QVariant qax_result = property("Role");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetRole(const QString& value){ setProperty("Role", QVariant(value)); }

inline bool _TaskItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskItem::SchedulePlusPriority() const
{
    QVariant qax_result = property("SchedulePlusPriority");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetSchedulePlusPriority(const QString& value){ setProperty("SchedulePlusPriority", QVariant(value)); }

inline Outlook::Account* _TaskItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void _TaskItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::OlSensitivity _TaskItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _TaskItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _TaskItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TaskItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime _TaskItem::StartDate() const
{
    QVariant qax_result = property("StartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _TaskItem::SetStartDate(const QDateTime& value){ setProperty("StartDate", QVariant(value)); }

inline Outlook::OlTaskStatus _TaskItem::Status() const
{
    QVariant qax_result = property("Status");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskStatus*)qax_result.constData();
}
inline void _TaskItem::SetStatus(Outlook::OlTaskStatus value){ setProperty("Status", QVariant(value)); }

inline QString _TaskItem::StatusOnCompletionRecipients() const
{
    QVariant qax_result = property("StatusOnCompletionRecipients");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetStatusOnCompletionRecipients(const QString& value){ setProperty("StatusOnCompletionRecipients", QVariant(value)); }

inline QString _TaskItem::StatusUpdateRecipients() const
{
    QVariant qax_result = property("StatusUpdateRecipients");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetStatusUpdateRecipients(const QString& value){ setProperty("StatusUpdateRecipients", QVariant(value)); }

inline QString _TaskItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _TaskItem::TeamTask() const
{
    QVariant qax_result = property("TeamTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetTeamTask(bool value){ setProperty("TeamTask", QVariant(value)); }

inline QDateTime _TaskItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _TaskItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline int _TaskItem::TotalWork() const
{
    QVariant qax_result = property("TotalWork");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _TaskItem::SetTotalWork(int value){ setProperty("TotalWork", QVariant(value)); }

inline bool _TaskItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _TaskItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline Outlook::TaskItem* _TaskItem::Assign()
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void _TaskItem::CancelResponseState()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _TaskItem::ClearRecurrencePattern()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _TaskItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IDispatch* _TaskItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _TaskItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _TaskItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _TaskItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline Outlook::_Conversation* _TaskItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::RecurrencePattern* _TaskItem::GetRecurrencePattern()
{
    Outlook::RecurrencePattern* qax_result = 0;
    qRegisterMetaType<Outlook::RecurrencePattern*>("RecurrencePattern*", &qax_result);
    qRegisterMetaType<Outlook::RecurrencePattern>("RecurrencePattern", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _TaskItem::MarkComplete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline IDispatch* _TaskItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _TaskItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline Outlook::TaskItem* _TaskItem::Respond(Outlook::OlTaskResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI, (void*)&fAdditionalTextDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline void _TaskItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _TaskItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _TaskItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _TaskItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _TaskItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
}

inline bool _TaskItem::SkipRecurrence()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline IDispatch* _TaskItem::StatusReport()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}


inline Outlook::Actions* TaskItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline int TaskItem::ActualWork() const
{
    QVariant qax_result = property("ActualWork");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TaskItem::SetActualWork(int value){ setProperty("ActualWork", QVariant(value)); }

inline Outlook::_Application* TaskItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* TaskItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool TaskItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString TaskItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString TaskItem::CardData() const
{
    QVariant qax_result = property("CardData");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetCardData(const QString& value){ setProperty("CardData", QVariant(value)); }

inline QString TaskItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass TaskItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TaskItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline bool TaskItem::Complete() const
{
    QVariant qax_result = property("Complete");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetComplete(bool value){ setProperty("Complete", QVariant(value)); }

inline Outlook::Conflicts* TaskItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString TaskItem::ContactNames() const
{
    QVariant qax_result = property("ContactNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetContactNames(const QString& value){ setProperty("ContactNames", QVariant(value)); }

inline QString TaskItem::Contacts() const
{
    QVariant qax_result = property("Contacts");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetContacts(const QString& value){ setProperty("Contacts", QVariant(value)); }

inline QString TaskItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime TaskItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime TaskItem::DateCompleted() const
{
    QVariant qax_result = property("DateCompleted");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void TaskItem::SetDateCompleted(const QDateTime& value){ setProperty("DateCompleted", QVariant(value)); }

inline Outlook::OlTaskDelegationState TaskItem::DelegationState() const
{
    QVariant qax_result = property("DelegationState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskDelegationState*)qax_result.constData();
}

inline QString TaskItem::Delegator() const
{
    QVariant qax_result = property("Delegator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlDownloadState TaskItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QDateTime TaskItem::DueDate() const
{
    QVariant qax_result = property("DueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void TaskItem::SetDueDate(const QDateTime& value){ setProperty("DueDate", QVariant(value)); }

inline QString TaskItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* TaskItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* TaskItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance TaskItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void TaskItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int TaskItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TaskItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool TaskItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool TaskItem::IsRecurring() const
{
    QVariant qax_result = property("IsRecurring");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* TaskItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime TaskItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* TaskItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* TaskItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus TaskItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void TaskItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString TaskItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString TaskItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool TaskItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int TaskItem::Ordinal() const
{
    QVariant qax_result = property("Ordinal");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TaskItem::SetOrdinal(int value){ setProperty("Ordinal", QVariant(value)); }

inline int TaskItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskItem::Owner() const
{
    QVariant qax_result = property("Owner");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetOwner(const QString& value){ setProperty("Owner", QVariant(value)); }

inline Outlook::OlTaskOwnership TaskItem::Ownership() const
{
    QVariant qax_result = property("Ownership");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskOwnership*)qax_result.constData();
}

inline IDispatch* TaskItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int TaskItem::PercentComplete() const
{
    QVariant qax_result = property("PercentComplete");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TaskItem::SetPercentComplete(int value){ setProperty("PercentComplete", QVariant(value)); }

inline Outlook::PropertyAccessor* TaskItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant TaskItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TaskItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline Outlook::Recipients* TaskItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool TaskItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool TaskItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool TaskItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString TaskItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime TaskItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void TaskItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline Outlook::OlTaskResponse TaskItem::ResponseState() const
{
    QVariant qax_result = property("ResponseState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskResponse*)qax_result.constData();
}

inline QString TaskItem::Role() const
{
    QVariant qax_result = property("Role");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetRole(const QString& value){ setProperty("Role", QVariant(value)); }

inline bool TaskItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskItem::SchedulePlusPriority() const
{
    QVariant qax_result = property("SchedulePlusPriority");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetSchedulePlusPriority(const QString& value){ setProperty("SchedulePlusPriority", QVariant(value)); }

inline Outlook::Account* TaskItem::SendUsingAccount() const
{
    Outlook::Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::Account*>("Account*", &qax_pointer);
    qRegisterMetaType<Outlook::Account>("Account", qax_pointer);
    QVariant qax_result = property("SendUsingAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Account**)qax_result.constData();
}
inline void TaskItem::SetSendUsingAccount(Outlook::Account* value){
    int typeId = qRegisterMetaType<Outlook::Account*>("Outlook::Account*", &value);
    setProperty("SendUsingAccount", QVariant(typeId, &value));
}

inline Outlook::OlSensitivity TaskItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void TaskItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* TaskItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TaskItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime TaskItem::StartDate() const
{
    QVariant qax_result = property("StartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void TaskItem::SetStartDate(const QDateTime& value){ setProperty("StartDate", QVariant(value)); }

inline Outlook::OlTaskStatus TaskItem::Status() const
{
    QVariant qax_result = property("Status");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTaskStatus*)qax_result.constData();
}
inline void TaskItem::SetStatus(Outlook::OlTaskStatus value){ setProperty("Status", QVariant(value)); }

inline QString TaskItem::StatusOnCompletionRecipients() const
{
    QVariant qax_result = property("StatusOnCompletionRecipients");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetStatusOnCompletionRecipients(const QString& value){ setProperty("StatusOnCompletionRecipients", QVariant(value)); }

inline QString TaskItem::StatusUpdateRecipients() const
{
    QVariant qax_result = property("StatusUpdateRecipients");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetStatusUpdateRecipients(const QString& value){ setProperty("StatusUpdateRecipients", QVariant(value)); }

inline QString TaskItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool TaskItem::TeamTask() const
{
    QVariant qax_result = property("TeamTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetTeamTask(bool value){ setProperty("TeamTask", QVariant(value)); }

inline QDateTime TaskItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void TaskItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline int TaskItem::TotalWork() const
{
    QVariant qax_result = property("TotalWork");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TaskItem::SetTotalWork(int value){ setProperty("TotalWork", QVariant(value)); }

inline bool TaskItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* TaskItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline Outlook::TaskItem* TaskItem::Assign()
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline void TaskItem::CancelResponseState()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void TaskItem::ClearRecurrencePattern()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void TaskItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline IDispatch* TaskItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void TaskItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void TaskItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void TaskItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline Outlook::_Conversation* TaskItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::RecurrencePattern* TaskItem::GetRecurrencePattern()
{
    Outlook::RecurrencePattern* qax_result = 0;
    qRegisterMetaType<Outlook::RecurrencePattern*>("RecurrencePattern*", &qax_result);
    qRegisterMetaType<Outlook::RecurrencePattern>("RecurrencePattern", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline void TaskItem::MarkComplete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline IDispatch* TaskItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void TaskItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline Outlook::TaskItem* TaskItem::Respond(Outlook::OlTaskResponse Response, const QVariant& fNoUI, const QVariant& fAdditionalTextDialog)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Response, (void*)&fNoUI, (void*)&fAdditionalTextDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline void TaskItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void TaskItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void TaskItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void TaskItem::Send()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void TaskItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
}

inline bool TaskItem::SkipRecurrence()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline IDispatch* TaskItem::StatusReport()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}


inline Outlook::Actions* _DistListItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _DistListItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _DistListItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _DistListItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _DistListItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _DistListItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _DistListItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline int _DistListItem::CheckSum() const
{
    QVariant qax_result = property("CheckSum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlObjectClass _DistListItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _DistListItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _DistListItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _DistListItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _DistListItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _DistListItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _DistListItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _DistListItem::DLName() const
{
    QVariant qax_result = property("DLName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetDLName(const QString& value){ setProperty("DLName", QVariant(value)); }

inline Outlook::OlDownloadState _DistListItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _DistListItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _DistListItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _DistListItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _DistListItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _DistListItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _DistListItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool _DistListItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _DistListItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _DistListItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _DistListItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _DistListItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _DistListItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _DistListItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline int _DistListItem::MemberCount() const
{
    QVariant qax_result = property("MemberCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QVariant _DistListItem::Members() const
{
    QVariant qax_result = property("Members");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _DistListItem::SetMembers(const QVariant& value){ setProperty("Members", QVariant(value)); }

inline QString _DistListItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _DistListItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _DistListItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DistListItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QVariant _DistListItem::OneOffMembers() const
{
    QVariant qax_result = property("OneOffMembers");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _DistListItem::SetOneOffMembers(const QVariant& value){ setProperty("OneOffMembers", QVariant(value)); }

inline int _DistListItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _DistListItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _DistListItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _DistListItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _DistListItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _DistListItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _DistListItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DistListItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool _DistListItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DistListItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool _DistListItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DistListItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString _DistListItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime _DistListItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _DistListItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool _DistListItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _DistListItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _DistListItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _DistListItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _DistListItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _DistListItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QDateTime _DistListItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _DistListItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime _DistListItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _DistListItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime _DistListItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _DistListItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString _DistListItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DistListItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QDateTime _DistListItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void _DistListItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool _DistListItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DistListItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _DistListItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _DistListItem::AddMember(Outlook::Recipient* Recipient)
{
    void *_a[] = {0, (void*)&Recipient};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _DistListItem::AddMembers(Outlook::Recipients* Recipients)
{
    void *_a[] = {0, (void*)&Recipients};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _DistListItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _DistListItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline IDispatch* _DistListItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void _DistListItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _DistListItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void _DistListItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline Outlook::_Conversation* _DistListItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::Recipient* _DistListItem::GetMember(int Index)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void _DistListItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline IDispatch* _DistListItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void _DistListItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void _DistListItem::RemoveMember(Outlook::Recipient* Recipient)
{
    void *_a[] = {0, (void*)&Recipient};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void _DistListItem::RemoveMembers(Outlook::Recipients* Recipients)
{
    void *_a[] = {0, (void*)&Recipients};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void _DistListItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void _DistListItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void _DistListItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void _DistListItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}


inline Outlook::Actions* _ReportItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _ReportItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _ReportItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _ReportItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _ReportItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _ReportItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _ReportItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _ReportItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ReportItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _ReportItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _ReportItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ReportItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ReportItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _ReportItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _ReportItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _ReportItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _ReportItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _ReportItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _ReportItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _ReportItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _ReportItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _ReportItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _ReportItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _ReportItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _ReportItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _ReportItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _ReportItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _ReportItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _ReportItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _ReportItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ReportItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _ReportItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _ReportItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _ReportItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _ReportItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QDateTime _ReportItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString _ReportItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _ReportItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _ReportItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _ReportItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _ReportItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _ReportItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _ReportItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ReportItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _ReportItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ReportItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _ReportItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _ReportItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _ReportItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _ReportItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _ReportItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _ReportItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::_Conversation* _ReportItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* _ReportItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _ReportItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _ReportItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _ReportItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _ReportItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _ReportItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}


inline Outlook::Actions* _RemoteItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _RemoteItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _RemoteItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _RemoteItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _RemoteItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _RemoteItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _RemoteItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _RemoteItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _RemoteItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _RemoteItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _RemoteItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _RemoteItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _RemoteItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _RemoteItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _RemoteItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _RemoteItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _RemoteItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _RemoteItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline bool _RemoteItem::HasAttachment() const
{
    QVariant qax_result = property("HasAttachment");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlImportance _RemoteItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _RemoteItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _RemoteItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _RemoteItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _RemoteItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _RemoteItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _RemoteItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _RemoteItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _RemoteItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _RemoteItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _RemoteItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _RemoteItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _RemoteItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _RemoteItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _RemoteItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _RemoteItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _RemoteItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QString _RemoteItem::RemoteMessageClass() const
{
    QVariant qax_result = property("RemoteMessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool _RemoteItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _RemoteItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _RemoteItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _RemoteItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _RemoteItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _RemoteItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _RemoteItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline int _RemoteItem::TransferSize() const
{
    QVariant qax_result = property("TransferSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int _RemoteItem::TransferTime() const
{
    QVariant qax_result = property("TransferTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool _RemoteItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _RemoteItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _RemoteItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _RemoteItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _RemoteItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _RemoteItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _RemoteItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _RemoteItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::_Conversation* _RemoteItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* _RemoteItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void _RemoteItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void _RemoteItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _RemoteItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _RemoteItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _RemoteItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}


inline Outlook::Actions* _TaskRequestItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _TaskRequestItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _TaskRequestItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _TaskRequestItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskRequestItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _TaskRequestItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _TaskRequestItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _TaskRequestItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TaskRequestItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _TaskRequestItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _TaskRequestItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _TaskRequestItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _TaskRequestItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _TaskRequestItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _TaskRequestItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _TaskRequestItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _TaskRequestItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _TaskRequestItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _TaskRequestItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _TaskRequestItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _TaskRequestItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _TaskRequestItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _TaskRequestItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _TaskRequestItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _TaskRequestItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _TaskRequestItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _TaskRequestItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _TaskRequestItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _TaskRequestItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _TaskRequestItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _TaskRequestItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _TaskRequestItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TaskRequestItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _TaskRequestItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _TaskRequestItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _TaskRequestItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _TaskRequestItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TaskRequestItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _TaskRequestItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _TaskRequestItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _TaskRequestItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _TaskRequestItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _TaskRequestItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _TaskRequestItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _TaskRequestItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::TaskItem* _TaskRequestItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_Conversation* _TaskRequestItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _TaskRequestItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _TaskRequestItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _TaskRequestItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _TaskRequestItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _TaskRequestItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _TaskRequestItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}


inline Outlook::Actions* _TaskRequestAcceptItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _TaskRequestAcceptItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _TaskRequestAcceptItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _TaskRequestAcceptItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _TaskRequestAcceptItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _TaskRequestAcceptItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _TaskRequestAcceptItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _TaskRequestAcceptItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _TaskRequestAcceptItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _TaskRequestAcceptItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _TaskRequestAcceptItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _TaskRequestAcceptItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _TaskRequestAcceptItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _TaskRequestAcceptItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _TaskRequestAcceptItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _TaskRequestAcceptItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _TaskRequestAcceptItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _TaskRequestAcceptItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _TaskRequestAcceptItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _TaskRequestAcceptItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _TaskRequestAcceptItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _TaskRequestAcceptItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _TaskRequestAcceptItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _TaskRequestAcceptItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _TaskRequestAcceptItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _TaskRequestAcceptItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _TaskRequestAcceptItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _TaskRequestAcceptItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _TaskRequestAcceptItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TaskRequestAcceptItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestAcceptItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _TaskRequestAcceptItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestAcceptItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _TaskRequestAcceptItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _TaskRequestAcceptItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _TaskRequestAcceptItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _TaskRequestAcceptItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _TaskRequestAcceptItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _TaskRequestAcceptItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::TaskItem* _TaskRequestAcceptItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_Conversation* _TaskRequestAcceptItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _TaskRequestAcceptItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _TaskRequestAcceptItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _TaskRequestAcceptItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _TaskRequestAcceptItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _TaskRequestAcceptItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _TaskRequestAcceptItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}


inline Outlook::Actions* _TaskRequestDeclineItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _TaskRequestDeclineItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _TaskRequestDeclineItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _TaskRequestDeclineItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _TaskRequestDeclineItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _TaskRequestDeclineItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _TaskRequestDeclineItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _TaskRequestDeclineItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _TaskRequestDeclineItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _TaskRequestDeclineItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _TaskRequestDeclineItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _TaskRequestDeclineItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _TaskRequestDeclineItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _TaskRequestDeclineItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _TaskRequestDeclineItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _TaskRequestDeclineItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _TaskRequestDeclineItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _TaskRequestDeclineItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _TaskRequestDeclineItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _TaskRequestDeclineItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _TaskRequestDeclineItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _TaskRequestDeclineItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _TaskRequestDeclineItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _TaskRequestDeclineItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _TaskRequestDeclineItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _TaskRequestDeclineItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _TaskRequestDeclineItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _TaskRequestDeclineItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _TaskRequestDeclineItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TaskRequestDeclineItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestDeclineItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _TaskRequestDeclineItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestDeclineItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _TaskRequestDeclineItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _TaskRequestDeclineItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _TaskRequestDeclineItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _TaskRequestDeclineItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _TaskRequestDeclineItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _TaskRequestDeclineItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::TaskItem* _TaskRequestDeclineItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_Conversation* _TaskRequestDeclineItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _TaskRequestDeclineItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _TaskRequestDeclineItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _TaskRequestDeclineItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _TaskRequestDeclineItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _TaskRequestDeclineItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _TaskRequestDeclineItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}


inline Outlook::Actions* _TaskRequestUpdateItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* _TaskRequestUpdateItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* _TaskRequestUpdateItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool _TaskRequestUpdateItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString _TaskRequestUpdateItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString _TaskRequestUpdateItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass _TaskRequestUpdateItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* _TaskRequestUpdateItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime _TaskRequestUpdateItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState _TaskRequestUpdateItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* _TaskRequestUpdateItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* _TaskRequestUpdateItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance _TaskRequestUpdateItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool _TaskRequestUpdateItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* _TaskRequestUpdateItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime _TaskRequestUpdateItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* _TaskRequestUpdateItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* _TaskRequestUpdateItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus _TaskRequestUpdateItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString _TaskRequestUpdateItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString _TaskRequestUpdateItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool _TaskRequestUpdateItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int _TaskRequestUpdateItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _TaskRequestUpdateItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* _TaskRequestUpdateItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant _TaskRequestUpdateItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool _TaskRequestUpdateItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity _TaskRequestUpdateItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* _TaskRequestUpdateItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int _TaskRequestUpdateItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString _TaskRequestUpdateItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool _TaskRequestUpdateItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _TaskRequestUpdateItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* _TaskRequestUpdateItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void _TaskRequestUpdateItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* _TaskRequestUpdateItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _TaskRequestUpdateItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void _TaskRequestUpdateItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _TaskRequestUpdateItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::TaskItem* _TaskRequestUpdateItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_Conversation* _TaskRequestUpdateItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* _TaskRequestUpdateItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void _TaskRequestUpdateItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void _TaskRequestUpdateItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void _TaskRequestUpdateItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void _TaskRequestUpdateItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void _TaskRequestUpdateItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}


inline Outlook::_Application* _ConversationHeader::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ConversationHeader::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ConversationHeader::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString _ConversationHeader::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* _ConversationHeader::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* _ConversationHeader::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Conversation* _ConversationHeader::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::SimpleItems* _ConversationHeader::GetItems()
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* _PeopleView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _PeopleView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _PeopleView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PeopleView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString _PeopleView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PeopleView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _PeopleView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _PeopleView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString _PeopleView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PeopleView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _PeopleView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _PeopleView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _PeopleView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* _PeopleView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool _PeopleView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType _PeopleView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _PeopleView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _PeopleView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _PeopleView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _PeopleView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _PeopleView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _PeopleView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _PeopleView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _PeopleView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _PeopleView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _ThreadView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _ThreadView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _ThreadView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ThreadView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString _ThreadView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ThreadView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _ThreadView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _ThreadView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString _ThreadView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ThreadView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _ThreadView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _ThreadView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _ThreadView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _ThreadView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType _ThreadView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _ThreadView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _ThreadView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _ThreadView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _ThreadView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _ThreadView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _ThreadView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _ThreadView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _ThreadView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _ThreadView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* _MessageListView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass _MessageListView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString _MessageListView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MessageListView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString _MessageListView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MessageListView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool _MessageListView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MessageListView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString _MessageListView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MessageListView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* _MessageListView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption _MessageListView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* _MessageListView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool _MessageListView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType _MessageListView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString _MessageListView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MessageListView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void _MessageListView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* _MessageListView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* _MessageListView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _MessageListView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _MessageListView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _MessageListView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void _MessageListView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Office::AnswerWizard* Application::AnswerWizard() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::AnswerWizard* qax_pointer = 0;
    qRegisterMetaType<Office::AnswerWizard*>("Office::AnswerWizard*", &qax_pointer);
    qRegisterMetaType<Office::AnswerWizard>("Office::AnswerWizard", qax_pointer);
    QVariant qax_result = property("AnswerWizard");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::AnswerWizard**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::IAssistance* Application::Assistance() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::IAssistance* qax_pointer = 0;
    qRegisterMetaType<Office::IAssistance*>("Office::IAssistance*", &qax_pointer);
    qRegisterMetaType<Office::IAssistance>("Office::IAssistance", qax_pointer);
    QVariant qax_result = property("Assistance");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::IAssistance**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::Assistant* Application::Assistant() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::Assistant* qax_pointer = 0;
    qRegisterMetaType<Office::Assistant*>("Office::Assistant*", &qax_pointer);
    qRegisterMetaType<Office::Assistant>("Office::Assistant", qax_pointer);
    QVariant qax_result = property("Assistant");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::Assistant**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::COMAddIns* Application::COMAddIns() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::COMAddIns* qax_pointer = 0;
    qRegisterMetaType<Office::COMAddIns*>("Office::COMAddIns*", &qax_pointer);
    qRegisterMetaType<Office::COMAddIns>("Office::COMAddIns", qax_pointer);
    QVariant qax_result = property("COMAddIns");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::COMAddIns**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Outlook::OlObjectClass Application::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Office::DataPrivacyOptions* Application::DataPrivacyOptions() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::DataPrivacyOptions* qax_pointer = 0;
    qRegisterMetaType<Office::DataPrivacyOptions*>("Office::DataPrivacyOptions*", &qax_pointer);
    qRegisterMetaType<Office::DataPrivacyOptions>("Office::DataPrivacyOptions", qax_pointer);
    QVariant qax_result = property("DataPrivacyOptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::DataPrivacyOptions**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString Application::DefaultProfileName() const
{
    QVariant qax_result = property("DefaultProfileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Explorers* Application::Explorers() const
{
    Outlook::_Explorers* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Explorers*>("_Explorers*", &qax_pointer);
    qRegisterMetaType<Outlook::_Explorers>("_Explorers", qax_pointer);
    QVariant qax_result = property("Explorers");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Explorers**)qax_result.constData();
}

inline Office::MsoFeatureInstall Application::FeatureInstall() const
{
    QVariant qax_result = property("FeatureInstall");
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoFeatureInstall*)qax_result.constData();
}
inline void Application::SetFeatureInstall(Office::MsoFeatureInstall value){ setProperty("FeatureInstall", QVariant(value)); }

inline Outlook::_Inspectors* Application::Inspectors() const
{
    Outlook::_Inspectors* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspectors*>("_Inspectors*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspectors>("_Inspectors", qax_pointer);
    QVariant qax_result = property("Inspectors");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspectors**)qax_result.constData();
}

inline bool Application::IsTrusted() const
{
    QVariant qax_result = property("IsTrusted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Office::LanguageSettings* Application::LanguageSettings() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::LanguageSettings* qax_pointer = 0;
    qRegisterMetaType<Office::LanguageSettings*>("Office::LanguageSettings*", &qax_pointer);
    qRegisterMetaType<Office::LanguageSettings>("Office::LanguageSettings", qax_pointer);
    QVariant qax_result = property("LanguageSettings");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::LanguageSettings**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline Office::MsoDebugOptions* Application::MsoDebugOptions() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::MsoDebugOptions* qax_pointer = 0;
    qRegisterMetaType<Office::MsoDebugOptions*>("Office::MsoDebugOptions*", &qax_pointer);
    qRegisterMetaType<Office::MsoDebugOptions>("Office::MsoDebugOptions", qax_pointer);
    QVariant qax_result = property("MsoDebugOptions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::MsoDebugOptions**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString Application::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Application::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Office::PickerDialog* Application::PickerDialog() const
{
#ifdef QAX_DUMPCPP_OFFICE_H
    Office::PickerDialog* qax_pointer = 0;
    qRegisterMetaType<Office::PickerDialog*>("Office::PickerDialog*", &qax_pointer);
    qRegisterMetaType<Office::PickerDialog>("Office::PickerDialog", qax_pointer);
    QVariant qax_result = property("PickerDialog");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Office::PickerDialog**)qax_result.constData();
#else
    return 0; // foreign namespace not included
#endif
}

inline QString Application::ProductCode() const
{
    QVariant qax_result = property("ProductCode");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Reminders* Application::Reminders() const
{
    Outlook::_Reminders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Reminders*>("_Reminders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Reminders>("_Reminders", qax_pointer);
    QVariant qax_result = property("Reminders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Reminders**)qax_result.constData();
}

inline Outlook::_NameSpace* Application::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::TimeZones* Application::TimeZones() const
{
    Outlook::TimeZones* qax_pointer = 0;
    qRegisterMetaType<Outlook::TimeZones*>("TimeZones*", &qax_pointer);
    qRegisterMetaType<Outlook::TimeZones>("TimeZones", qax_pointer);
    QVariant qax_result = property("TimeZones");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::TimeZones**)qax_result.constData();
}

inline QString Application::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Explorer* Application::ActiveExplorer()
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline Outlook::_Inspector* Application::ActiveInspector()
{
    Outlook::_Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_result);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline IDispatch* Application::ActiveWindow()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline Outlook::Search* Application::AdvancedSearch(const QString& Scope)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline Outlook::Search* Application::AdvancedSearch(const QString& Scope, const QVariant& Filter)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline Outlook::Search* Application::AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter, (void*)&SearchSubFolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline Outlook::Search* Application::AdvancedSearch(const QString& Scope, const QVariant& Filter, const QVariant& SearchSubFolders, const QVariant& Tag)
{
    Outlook::Search* qax_result = 0;
    qRegisterMetaType<Outlook::Search*>("Search*", &qax_result);
    qRegisterMetaType<Outlook::Search>("Search", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Scope, (void*)&Filter, (void*)&SearchSubFolders, (void*)&Tag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline IDispatch* Application::CopyFile(const QString& FilePath, const QString& DestFolderPath)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&FilePath, (void*)&DestFolderPath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline IDispatch* Application::CreateItem(Outlook::OlItemType ItemType)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&ItemType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline IDispatch* Application::CreateItemFromTemplate(const QString& TemplatePath)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&TemplatePath};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline IDispatch* Application::CreateItemFromTemplate(const QString& TemplatePath, const QVariant& InFolder)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&TemplatePath, (void*)&InFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline IDispatch* Application::CreateObject(const QString& ObjectName)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&ObjectName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline Outlook::_NameSpace* Application::GetNamespace(const QString& Type)
{
    Outlook::_NameSpace* qax_result = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_result);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void Application::GetNewNickNames(QVariant& pvar)
{
    void *_a[] = {0, (void*)&pvar};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline IDispatch* Application::GetObjectReference(IDispatch* Item, Outlook::OlReferenceType ReferenceType)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Item, (void*)&ReferenceType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline bool Application::IsSearchSynchronous(const QString& LookInFolders)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&LookInFolders};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline void Application::Quit()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void Application::RefreshFormRegionDefinition(const QString& RegionName)
{
    void *_a[] = {0, (void*)&RegionName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}


inline Outlook::Actions* DistListItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* DistListItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* DistListItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool DistListItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString DistListItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString DistListItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString DistListItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline int DistListItem::CheckSum() const
{
    QVariant qax_result = property("CheckSum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlObjectClass DistListItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString DistListItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* DistListItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString DistListItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString DistListItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString DistListItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime DistListItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString DistListItem::DLName() const
{
    QVariant qax_result = property("DLName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetDLName(const QString& value){ setProperty("DLName", QVariant(value)); }

inline Outlook::OlDownloadState DistListItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString DistListItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* DistListItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* DistListItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance DistListItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void DistListItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool DistListItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool DistListItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* DistListItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime DistListItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* DistListItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* DistListItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus DistListItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void DistListItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline int DistListItem::MemberCount() const
{
    QVariant qax_result = property("MemberCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QVariant DistListItem::Members() const
{
    QVariant qax_result = property("Members");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void DistListItem::SetMembers(const QVariant& value){ setProperty("Members", QVariant(value)); }

inline QString DistListItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString DistListItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool DistListItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DistListItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline QVariant DistListItem::OneOffMembers() const
{
    QVariant qax_result = property("OneOffMembers");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void DistListItem::SetOneOffMembers(const QVariant& value){ setProperty("OneOffMembers", QVariant(value)); }

inline int DistListItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString DistListItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* DistListItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* DistListItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant DistListItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void DistListItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool DistListItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DistListItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool DistListItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DistListItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool DistListItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DistListItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString DistListItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime DistListItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void DistListItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool DistListItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity DistListItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void DistListItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* DistListItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int DistListItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString DistListItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QDateTime DistListItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void DistListItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime DistListItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void DistListItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime DistListItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void DistListItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString DistListItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DistListItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QDateTime DistListItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void DistListItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool DistListItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DistListItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* DistListItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void DistListItem::AddMember(Outlook::Recipient* Recipient)
{
    void *_a[] = {0, (void*)&Recipient};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void DistListItem::AddMembers(Outlook::Recipients* Recipients)
{
    void *_a[] = {0, (void*)&Recipients};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void DistListItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void DistListItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline IDispatch* DistListItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline void DistListItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void DistListItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void DistListItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline Outlook::_Conversation* DistListItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline Outlook::Recipient* DistListItem::GetMember(int Index)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline void DistListItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline IDispatch* DistListItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline void DistListItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void DistListItem::RemoveMember(Outlook::Recipient* Recipient)
{
    void *_a[] = {0, (void*)&Recipient};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void DistListItem::RemoveMembers(Outlook::Recipients* Recipients)
{
    void *_a[] = {0, (void*)&Recipients};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void DistListItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void DistListItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void DistListItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void DistListItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
}


inline Outlook::Actions* DocumentItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* DocumentItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* DocumentItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool DocumentItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString DocumentItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString DocumentItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString DocumentItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass DocumentItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString DocumentItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* DocumentItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString DocumentItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString DocumentItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime DocumentItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState DocumentItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString DocumentItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* DocumentItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* DocumentItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance DocumentItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void DocumentItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool DocumentItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* DocumentItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime DocumentItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* DocumentItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* DocumentItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus DocumentItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void DocumentItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString DocumentItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString DocumentItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool DocumentItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DocumentItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int DocumentItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString DocumentItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* DocumentItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* DocumentItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline bool DocumentItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity DocumentItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void DocumentItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* DocumentItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int DocumentItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString DocumentItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DocumentItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool DocumentItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DocumentItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* DocumentItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void DocumentItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* DocumentItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void DocumentItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void DocumentItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void DocumentItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline IDispatch* DocumentItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline void DocumentItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void DocumentItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void DocumentItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void DocumentItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void DocumentItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}


inline Outlook::_Application* Explorers::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Explorers::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Explorers::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Explorers::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Explorers::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Explorer* Explorers::Add(const QVariant& Folder)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::_Explorer* Explorers::Add(const QVariant& Folder, Outlook::OlFolderDisplayMode DisplayMode)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Folder, (void*)&DisplayMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::Explorer* Explorers::Item(const QVariant& Index)
{
    Outlook::Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::Explorer*>("Explorer*", &qax_result);
    qRegisterMetaType<Outlook::Explorer>("Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline Outlook::_Application* Inspectors::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Inspectors::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Inspectors::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Inspectors::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Inspectors::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Inspector* Inspectors::Add(IDispatch* Item)
{
    Outlook::_Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_result);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::Inspector* Inspectors::Item(const QVariant& Index)
{
    Outlook::Inspector* qax_result = 0;
    qRegisterMetaType<Outlook::Inspector*>("Inspector*", &qax_result);
    qRegisterMetaType<Outlook::Inspector>("Inspector", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline Outlook::_Application* Folders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Folders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Folders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Folders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* Folders::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* Folders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::MAPIFolder* Folders::Add(const QString& Name)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::Add(const QString& Name, const QVariant& Type)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::GetFirst()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::GetLast()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::GetNext()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::GetPrevious()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Folders::Item(const QVariant& Index)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline void Folders::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}


inline Outlook::_Application* Items::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Items::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Items::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool Items::IncludeRecurrences() const
{
    QVariant qax_result = property("IncludeRecurrences");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void Items::SetIncludeRecurrences(bool value){ setProperty("IncludeRecurrences", QVariant(value)); }

inline IDispatch* Items::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* Items::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* Items::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* Items::Add()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline IDispatch* Items::Add(const QVariant& Type)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline IDispatch* Items::Find(const QString& Filter)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* Items::FindNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* Items::GetFirst()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline IDispatch* Items::GetLast()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline IDispatch* Items::GetNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline IDispatch* Items::GetPrevious()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline IDispatch* Items::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void Items::Remove(int Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void Items::ResetColumns()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline Outlook::_Items* Items::Restrict(const QString& Filter)
{
    Outlook::_Items* qax_result = 0;
    qRegisterMetaType<Outlook::_Items*>("_Items*", &qax_result);
    qRegisterMetaType<Outlook::_Items>("_Items", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void Items::SetColumns(const QString& Columns)
{
    void *_a[] = {0, (void*)&Columns};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void Items::Sort(const QString& Property)
{
    void *_a[] = {0, (void*)&Property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void Items::Sort(const QString& Property, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&Property, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}


inline Outlook::Actions* JournalItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* JournalItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* JournalItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool JournalItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString JournalItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString JournalItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString JournalItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass JournalItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString JournalItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* JournalItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString JournalItem::ContactNames() const
{
    QVariant qax_result = property("ContactNames");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetContactNames(const QString& value){ setProperty("ContactNames", QVariant(value)); }

inline QString JournalItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString JournalItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString JournalItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime JournalItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool JournalItem::DocPosted() const
{
    QVariant qax_result = property("DocPosted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetDocPosted(bool value){ setProperty("DocPosted", QVariant(value)); }

inline bool JournalItem::DocPrinted() const
{
    QVariant qax_result = property("DocPrinted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetDocPrinted(bool value){ setProperty("DocPrinted", QVariant(value)); }

inline bool JournalItem::DocRouted() const
{
    QVariant qax_result = property("DocRouted");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetDocRouted(bool value){ setProperty("DocRouted", QVariant(value)); }

inline bool JournalItem::DocSaved() const
{
    QVariant qax_result = property("DocSaved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetDocSaved(bool value){ setProperty("DocSaved", QVariant(value)); }

inline Outlook::OlDownloadState JournalItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline int JournalItem::Duration() const
{
    QVariant qax_result = property("Duration");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void JournalItem::SetDuration(int value){ setProperty("Duration", QVariant(value)); }

inline QDateTime JournalItem::End() const
{
    QVariant qax_result = property("End");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void JournalItem::SetEnd(const QDateTime& value){ setProperty("End", QVariant(value)); }

inline QString JournalItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* JournalItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* JournalItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance JournalItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void JournalItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool JournalItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* JournalItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime JournalItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* JournalItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* JournalItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus JournalItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void JournalItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString JournalItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString JournalItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool JournalItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int JournalItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString JournalItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* JournalItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* JournalItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::Recipients* JournalItem::Recipients() const
{
    Outlook::Recipients* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipients*>("Recipients*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipients>("Recipients", qax_pointer);
    QVariant qax_result = property("Recipients");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipients**)qax_result.constData();
}

inline bool JournalItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity JournalItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void JournalItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* JournalItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int JournalItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime JournalItem::Start() const
{
    QVariant qax_result = property("Start");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void JournalItem::SetStart(const QDateTime& value){ setProperty("Start", QVariant(value)); }

inline QString JournalItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QString JournalItem::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void JournalItem::SetType(const QString& value){ setProperty("Type", QVariant(value)); }

inline bool JournalItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* JournalItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void JournalItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* JournalItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void JournalItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void JournalItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void JournalItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::MailItem* JournalItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::_Conversation* JournalItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline IDispatch* JournalItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void JournalItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline Outlook::MailItem* JournalItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline Outlook::MailItem* JournalItem::ReplyAll()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void JournalItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void JournalItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void JournalItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void JournalItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
}

inline void JournalItem::StartTimer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
}

inline void JournalItem::StopTimer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
}


inline Outlook::Accounts* NameSpace::Accounts() const
{
    Outlook::Accounts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Accounts*>("Accounts*", &qax_pointer);
    qRegisterMetaType<Outlook::Accounts>("Accounts", qax_pointer);
    QVariant qax_result = property("Accounts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Accounts**)qax_result.constData();
}

inline Outlook::AddressLists* NameSpace::AddressLists() const
{
    Outlook::AddressLists* qax_pointer = 0;
    qRegisterMetaType<Outlook::AddressLists*>("AddressLists*", &qax_pointer);
    qRegisterMetaType<Outlook::AddressLists>("AddressLists", qax_pointer);
    QVariant qax_result = property("AddressLists");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AddressLists**)qax_result.constData();
}

inline Outlook::_Application* NameSpace::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlAutoDiscoverConnectionMode NameSpace::AutoDiscoverConnectionMode() const
{
    QVariant qax_result = property("AutoDiscoverConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoDiscoverConnectionMode*)qax_result.constData();
}

inline QString NameSpace::AutoDiscoverXml() const
{
    QVariant qax_result = property("AutoDiscoverXml");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Categories* NameSpace::Categories() const
{
    Outlook::Categories* qax_pointer = 0;
    qRegisterMetaType<Outlook::Categories*>("Categories*", &qax_pointer);
    qRegisterMetaType<Outlook::Categories>("Categories", qax_pointer);
    QVariant qax_result = property("Categories");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Categories**)qax_result.constData();
}

inline Outlook::OlObjectClass NameSpace::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString NameSpace::CurrentProfileName() const
{
    QVariant qax_result = property("CurrentProfileName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::Recipient* NameSpace::CurrentUser() const
{
    Outlook::Recipient* qax_pointer = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_pointer);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_pointer);
    QVariant qax_result = property("CurrentUser");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Recipient**)qax_result.constData();
}

inline Outlook::Store* NameSpace::DefaultStore() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("DefaultStore");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline Outlook::OlExchangeConnectionMode NameSpace::ExchangeConnectionMode() const
{
    QVariant qax_result = property("ExchangeConnectionMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlExchangeConnectionMode*)qax_result.constData();
}

inline QString NameSpace::ExchangeMailboxServerName() const
{
    QVariant qax_result = property("ExchangeMailboxServerName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString NameSpace::ExchangeMailboxServerVersion() const
{
    QVariant qax_result = property("ExchangeMailboxServerVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Folders* NameSpace::Folders() const
{
    Outlook::_Folders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Folders**)qax_result.constData();
}

inline IUnknown* NameSpace::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline bool NameSpace::Offline() const
{
    QVariant qax_result = property("Offline");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* NameSpace::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NameSpace::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::Stores* NameSpace::Stores() const
{
    Outlook::Stores* qax_pointer = 0;
    qRegisterMetaType<Outlook::Stores*>("Stores*", &qax_pointer);
    qRegisterMetaType<Outlook::Stores>("Stores", qax_pointer);
    QVariant qax_result = property("Stores");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Stores**)qax_result.constData();
}

inline Outlook::SyncObjects* NameSpace::SyncObjects() const
{
    Outlook::SyncObjects* qax_pointer = 0;
    qRegisterMetaType<Outlook::SyncObjects*>("SyncObjects*", &qax_pointer);
    qRegisterMetaType<Outlook::SyncObjects>("SyncObjects", qax_pointer);
    QVariant qax_result = property("SyncObjects");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::SyncObjects**)qax_result.constData();
}

inline QString NameSpace::Type() const
{
    QVariant qax_result = property("Type");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline void NameSpace::AddStore(const QVariant& Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void NameSpace::AddStoreEx(const QVariant& Store, Outlook::OlStoreType Type)
{
    void *_a[] = {0, (void*)&Store, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline bool NameSpace::CompareEntryIDs(const QString& FirstEntryID, const QString& SecondEntryID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FirstEntryID, (void*)&SecondEntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Office::ContactCard* NameSpace::CreateContactCard(Outlook::AddressEntry* AddressEntry)
{
    Office::ContactCard* qax_result = 0;
#ifdef QAX_DUMPCPP_OFFICE_H
    qRegisterMetaType<Office::ContactCard*>("Office::ContactCard*", &qax_result);
    qRegisterMetaType<Office::ContactCard>("Office::ContactCard", qax_result);
#endif
    void *_a[] = {(void*)&qax_result, (void*)&AddressEntry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::Recipient* NameSpace::CreateRecipient(const QString& RecipientName)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&RecipientName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::SharingItem* NameSpace::CreateSharingItem(const QVariant& Context)
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Context};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline Outlook::SharingItem* NameSpace::CreateSharingItem(const QVariant& Context, const QVariant& Provider)
{
    Outlook::SharingItem* qax_result = 0;
    qRegisterMetaType<Outlook::SharingItem*>("SharingItem*", &qax_result);
    qRegisterMetaType<Outlook::SharingItem>("SharingItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Context, (void*)&Provider};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline void NameSpace::Dial()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void NameSpace::Dial(const QVariant& ContactItem)
{
    void *_a[] = {0, (void*)&ContactItem};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline Outlook::AddressEntry* NameSpace::GetAddressEntryFromID(const QString& ID)
{
    Outlook::AddressEntry* qax_result = 0;
    qRegisterMetaType<Outlook::AddressEntry*>("AddressEntry*", &qax_result);
    qRegisterMetaType<Outlook::AddressEntry>("AddressEntry", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::GetDefaultFolder(Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::GetFolderFromID(const QString& EntryIDFolder)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::GetFolderFromID(const QString& EntryIDFolder, const QVariant& EntryIDStore)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDFolder, (void*)&EntryIDStore};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline Outlook::AddressList* NameSpace::GetGlobalAddressList()
{
    Outlook::AddressList* qax_result = 0;
    qRegisterMetaType<Outlook::AddressList*>("AddressList*", &qax_result);
    qRegisterMetaType<Outlook::AddressList>("AddressList", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline IDispatch* NameSpace::GetItemFromID(const QString& EntryIDItem)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDItem};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline IDispatch* NameSpace::GetItemFromID(const QString& EntryIDItem, const QVariant& EntryIDStore)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&EntryIDItem, (void*)&EntryIDStore};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline Outlook::Recipient* NameSpace::GetRecipientFromID(const QString& EntryID)
{
    Outlook::Recipient* qax_result = 0;
    qRegisterMetaType<Outlook::Recipient*>("Recipient*", &qax_result);
    qRegisterMetaType<Outlook::Recipient>("Recipient", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&EntryID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline Outlook::SelectNamesDialog* NameSpace::GetSelectNamesDialog()
{
    Outlook::SelectNamesDialog* qax_result = 0;
    qRegisterMetaType<Outlook::SelectNamesDialog*>("SelectNamesDialog*", &qax_result);
    qRegisterMetaType<Outlook::SelectNamesDialog>("SelectNamesDialog", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::GetSharedDefaultFolder(Outlook::Recipient* Recipient, Outlook::OlDefaultFolders FolderType)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Recipient, (void*)&FolderType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline Outlook::Store* NameSpace::GetStoreFromID(const QString& ID)
{
    Outlook::Store* qax_result = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_result);
    qRegisterMetaType<Outlook::Store>("Store", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&ID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void NameSpace::Logoff()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void NameSpace::Logon()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void NameSpace::Logon(const QVariant& Profile)
{
    void *_a[] = {0, (void*)&Profile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void NameSpace::Logon(const QVariant& Profile, const QVariant& Password)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void NameSpace::Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password, (void*)&ShowDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void NameSpace::Logon(const QVariant& Profile, const QVariant& Password, const QVariant& ShowDialog, const QVariant& NewSession)
{
    void *_a[] = {0, (void*)&Profile, (void*)&Password, (void*)&ShowDialog, (void*)&NewSession};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline Outlook::MAPIFolder* NameSpace::OpenSharedFolder(const QString& Path)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name, (void*)&DownloadAttachments};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::OpenSharedFolder(const QString& Path, const QVariant& Name, const QVariant& DownloadAttachments, const QVariant& UseTTL)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Path, (void*)&Name, (void*)&DownloadAttachments, (void*)&UseTTL};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline IDispatch* NameSpace::OpenSharedItem(const QString& Path)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* NameSpace::PickFolder()
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void NameSpace::RefreshRemoteHeaders()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void NameSpace::RemoveStore(Outlook::MAPIFolder* Folder)
{
    void *_a[] = {0, (void*)&Folder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void NameSpace::SendAndReceive(bool showProgressDialog)
{
    void *_a[] = {0, (void*)&showProgressDialog};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}


inline Outlook::_Application* NoteItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline bool NoteItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString NoteItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void NoteItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString NoteItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void NoteItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass NoteItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlNoteColor NoteItem::Color() const
{
    QVariant qax_result = property("Color");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNoteColor*)qax_result.constData();
}
inline void NoteItem::SetColor(Outlook::OlNoteColor value){ setProperty("Color", QVariant(value)); }

inline Outlook::Conflicts* NoteItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QDateTime NoteItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState NoteItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString NoteItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Inspector* NoteItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline int NoteItem::Height() const
{
    QVariant qax_result = property("Height");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NoteItem::SetHeight(int value){ setProperty("Height", QVariant(value)); }

inline bool NoteItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* NoteItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime NoteItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline int NoteItem::Left() const
{
    QVariant qax_result = property("Left");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NoteItem::SetLeft(int value){ setProperty("Left", QVariant(value)); }

inline Outlook::Links* NoteItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline Outlook::OlRemoteStatus NoteItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void NoteItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString NoteItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void NoteItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline IDispatch* NoteItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* NoteItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline bool NoteItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_NameSpace* NoteItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int NoteItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString NoteItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int NoteItem::Top() const
{
    QVariant qax_result = property("Top");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NoteItem::SetTop(int value){ setProperty("Top", QVariant(value)); }

inline int NoteItem::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NoteItem::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline void NoteItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline IDispatch* NoteItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void NoteItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void NoteItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void NoteItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline IDispatch* NoteItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void NoteItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void NoteItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void NoteItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void NoteItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}


inline Outlook::_Application* OutlookBarGroups::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarGroups::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int OutlookBarGroups::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* OutlookBarGroups::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarGroups::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OutlookBarGroup* OutlookBarGroups::Add(const QString& Name)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::OutlookBarGroup* OutlookBarGroups::Add(const QString& Name, const QVariant& Index)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::OutlookBarGroup* OutlookBarGroups::Item(const QVariant& Index)
{
    Outlook::OutlookBarGroup* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void OutlookBarGroups::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* OutlookBarPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OutlookBarStorage* OutlookBarPane::Contents() const
{
    Outlook::OutlookBarStorage* qax_pointer = 0;
    qRegisterMetaType<Outlook::OutlookBarStorage*>("OutlookBarStorage*", &qax_pointer);
    qRegisterMetaType<Outlook::OutlookBarStorage>("OutlookBarStorage", qax_pointer);
    QVariant qax_result = property("Contents");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OutlookBarStorage**)qax_result.constData();
}

inline Outlook::OutlookBarGroup* OutlookBarPane::CurrentGroup() const
{
    Outlook::OutlookBarGroup* qax_pointer = 0;
    qRegisterMetaType<Outlook::OutlookBarGroup*>("OutlookBarGroup*", &qax_pointer);
    qRegisterMetaType<Outlook::OutlookBarGroup>("OutlookBarGroup", qax_pointer);
    QVariant qax_result = property("CurrentGroup");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OutlookBarGroup**)qax_result.constData();
}
inline void OutlookBarPane::SetCurrentGroup(Outlook::OutlookBarGroup* value){
    int typeId = qRegisterMetaType<Outlook::OutlookBarGroup*>("Outlook::OutlookBarGroup*", &value);
    setProperty("CurrentGroup", QVariant(typeId, &value));
}

inline QString OutlookBarPane::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* OutlookBarPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool OutlookBarPane::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void OutlookBarPane::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* OutlookBarShortcuts::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass OutlookBarShortcuts::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int OutlookBarShortcuts::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* OutlookBarShortcuts::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* OutlookBarShortcuts::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OutlookBarShortcut* OutlookBarShortcuts::Add(const QVariant& Target, const QString& Name)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Target, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::OutlookBarShortcut* OutlookBarShortcuts::Add(const QVariant& Target, const QString& Name, const QVariant& Index)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Target, (void*)&Name, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline Outlook::OutlookBarShortcut* OutlookBarShortcuts::Item(const QVariant& Index)
{
    Outlook::OutlookBarShortcut* qax_result = 0;
    qRegisterMetaType<Outlook::OutlookBarShortcut*>("OutlookBarShortcut*", &qax_result);
    qRegisterMetaType<Outlook::OutlookBarShortcut>("OutlookBarShortcut", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline void OutlookBarShortcuts::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::Actions* PostItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* PostItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* PostItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool PostItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString PostItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString PostItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlBodyFormat PostItem::BodyFormat() const
{
    QVariant qax_result = property("BodyFormat");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlBodyFormat*)qax_result.constData();
}
inline void PostItem::SetBodyFormat(Outlook::OlBodyFormat value){ setProperty("BodyFormat", QVariant(value)); }

inline QString PostItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass PostItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString PostItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* PostItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString PostItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString PostItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString PostItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime PostItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState PostItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString PostItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime PostItem::ExpiryTime() const
{
    QVariant qax_result = property("ExpiryTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetExpiryTime(const QDateTime& value){ setProperty("ExpiryTime", QVariant(value)); }

inline Outlook::FormDescription* PostItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* PostItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline QString PostItem::HTMLBody() const
{
    QVariant qax_result = property("HTMLBody");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetHTMLBody(const QString& value){ setProperty("HTMLBody", QVariant(value)); }

inline Outlook::OlImportance PostItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void PostItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline int PostItem::InternetCodepage() const
{
    QVariant qax_result = property("InternetCodepage");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void PostItem::SetInternetCodepage(int value){ setProperty("InternetCodepage", QVariant(value)); }

inline bool PostItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline bool PostItem::IsMarkedAsTask() const
{
    QVariant qax_result = property("IsMarkedAsTask");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* PostItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime PostItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* PostItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* PostItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus PostItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void PostItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString PostItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString PostItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool PostItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PostItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int PostItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString PostItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* PostItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* PostItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant PostItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void PostItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline QDateTime PostItem::ReceivedTime() const
{
    QVariant qax_result = property("ReceivedTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline bool PostItem::ReminderOverrideDefault() const
{
    QVariant qax_result = property("ReminderOverrideDefault");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PostItem::SetReminderOverrideDefault(bool value){ setProperty("ReminderOverrideDefault", QVariant(value)); }

inline bool PostItem::ReminderPlaySound() const
{
    QVariant qax_result = property("ReminderPlaySound");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PostItem::SetReminderPlaySound(bool value){ setProperty("ReminderPlaySound", QVariant(value)); }

inline bool PostItem::ReminderSet() const
{
    QVariant qax_result = property("ReminderSet");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PostItem::SetReminderSet(bool value){ setProperty("ReminderSet", QVariant(value)); }

inline QString PostItem::ReminderSoundFile() const
{
    QVariant qax_result = property("ReminderSoundFile");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetReminderSoundFile(const QString& value){ setProperty("ReminderSoundFile", QVariant(value)); }

inline QDateTime PostItem::ReminderTime() const
{
    QVariant qax_result = property("ReminderTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetReminderTime(const QDateTime& value){ setProperty("ReminderTime", QVariant(value)); }

inline bool PostItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString PostItem::SenderEmailAddress() const
{
    QVariant qax_result = property("SenderEmailAddress");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString PostItem::SenderEmailType() const
{
    QVariant qax_result = property("SenderEmailType");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString PostItem::SenderName() const
{
    QVariant qax_result = property("SenderName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlSensitivity PostItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void PostItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline QDateTime PostItem::SentOn() const
{
    QVariant qax_result = property("SentOn");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* PostItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int PostItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString PostItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline QDateTime PostItem::TaskCompletedDate() const
{
    QVariant qax_result = property("TaskCompletedDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetTaskCompletedDate(const QDateTime& value){ setProperty("TaskCompletedDate", QVariant(value)); }

inline QDateTime PostItem::TaskDueDate() const
{
    QVariant qax_result = property("TaskDueDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetTaskDueDate(const QDateTime& value){ setProperty("TaskDueDate", QVariant(value)); }

inline QDateTime PostItem::TaskStartDate() const
{
    QVariant qax_result = property("TaskStartDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetTaskStartDate(const QDateTime& value){ setProperty("TaskStartDate", QVariant(value)); }

inline QString PostItem::TaskSubject() const
{
    QVariant qax_result = property("TaskSubject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PostItem::SetTaskSubject(const QString& value){ setProperty("TaskSubject", QVariant(value)); }

inline QDateTime PostItem::ToDoTaskOrdinal() const
{
    QVariant qax_result = property("ToDoTaskOrdinal");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}
inline void PostItem::SetToDoTaskOrdinal(const QDateTime& value){ setProperty("ToDoTaskOrdinal", QVariant(value)); }

inline bool PostItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PostItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* PostItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void PostItem::ClearConversationIndex()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void PostItem::ClearTaskFlag()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void PostItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline IDispatch* PostItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline void PostItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void PostItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void PostItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline Outlook::MailItem* PostItem::Forward()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline Outlook::_Conversation* PostItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline void PostItem::MarkAsTask(Outlook::OlMarkInterval MarkInterval)
{
    void *_a[] = {0, (void*)&MarkInterval};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline IDispatch* PostItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline void PostItem::Post()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void PostItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline Outlook::MailItem* PostItem::Reply()
{
    Outlook::MailItem* qax_result = 0;
    qRegisterMetaType<Outlook::MailItem*>("MailItem*", &qax_result);
    qRegisterMetaType<Outlook::MailItem>("MailItem", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline void PostItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void PostItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void PostItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline bool PostItem::SetACLs()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline void PostItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
}


inline Outlook::Actions* RemoteItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* RemoteItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* RemoteItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool RemoteItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString RemoteItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString RemoteItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString RemoteItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass RemoteItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString RemoteItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* RemoteItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString RemoteItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString RemoteItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString RemoteItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime RemoteItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState RemoteItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString RemoteItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* RemoteItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* RemoteItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline bool RemoteItem::HasAttachment() const
{
    QVariant qax_result = property("HasAttachment");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlImportance RemoteItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void RemoteItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool RemoteItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* RemoteItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime RemoteItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* RemoteItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* RemoteItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus RemoteItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void RemoteItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString RemoteItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString RemoteItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool RemoteItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RemoteItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int RemoteItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString RemoteItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* RemoteItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* RemoteItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QString RemoteItem::RemoteMessageClass() const
{
    QVariant qax_result = property("RemoteMessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool RemoteItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity RemoteItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void RemoteItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* RemoteItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int RemoteItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString RemoteItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void RemoteItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline int RemoteItem::TransferSize() const
{
    QVariant qax_result = property("TransferSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline int RemoteItem::TransferTime() const
{
    QVariant qax_result = property("TransferTime");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline bool RemoteItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void RemoteItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* RemoteItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void RemoteItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* RemoteItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void RemoteItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void RemoteItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void RemoteItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::_Conversation* RemoteItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline IDispatch* RemoteItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline void RemoteItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void RemoteItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void RemoteItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void RemoteItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void RemoteItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline Outlook::Actions* ReportItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* ReportItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* ReportItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool ReportItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString ReportItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString ReportItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString ReportItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass ReportItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ReportItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* ReportItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString ReportItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ReportItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ReportItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime ReportItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState ReportItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString ReportItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* ReportItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* ReportItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance ReportItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void ReportItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool ReportItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* ReportItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime ReportItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* ReportItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* ReportItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus ReportItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void ReportItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString ReportItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString ReportItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool ReportItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ReportItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int ReportItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ReportItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* ReportItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* ReportItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QDateTime ReportItem::RetentionExpirationDate() const
{
    QVariant qax_result = property("RetentionExpirationDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString ReportItem::RetentionPolicyName() const
{
    QVariant qax_result = property("RetentionPolicyName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool ReportItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity ReportItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void ReportItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* ReportItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int ReportItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString ReportItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ReportItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool ReportItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ReportItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* ReportItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void ReportItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* ReportItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void ReportItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void ReportItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void ReportItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::_Conversation* ReportItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline IDispatch* ReportItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline void ReportItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void ReportItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void ReportItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void ReportItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void ReportItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline Outlook::Actions* TaskRequestAcceptItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* TaskRequestAcceptItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* TaskRequestAcceptItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool TaskRequestAcceptItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString TaskRequestAcceptItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString TaskRequestAcceptItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass TaskRequestAcceptItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* TaskRequestAcceptItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString TaskRequestAcceptItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime TaskRequestAcceptItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState TaskRequestAcceptItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* TaskRequestAcceptItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* TaskRequestAcceptItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance TaskRequestAcceptItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool TaskRequestAcceptItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* TaskRequestAcceptItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime TaskRequestAcceptItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* TaskRequestAcceptItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* TaskRequestAcceptItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus TaskRequestAcceptItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString TaskRequestAcceptItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString TaskRequestAcceptItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool TaskRequestAcceptItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int TaskRequestAcceptItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* TaskRequestAcceptItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* TaskRequestAcceptItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant TaskRequestAcceptItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool TaskRequestAcceptItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity TaskRequestAcceptItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* TaskRequestAcceptItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TaskRequestAcceptItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestAcceptItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool TaskRequestAcceptItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestAcceptItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* TaskRequestAcceptItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void TaskRequestAcceptItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* TaskRequestAcceptItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void TaskRequestAcceptItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void TaskRequestAcceptItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void TaskRequestAcceptItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::TaskItem* TaskRequestAcceptItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::_Conversation* TaskRequestAcceptItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline IDispatch* TaskRequestAcceptItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void TaskRequestAcceptItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void TaskRequestAcceptItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void TaskRequestAcceptItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void TaskRequestAcceptItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void TaskRequestAcceptItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}


inline Outlook::Actions* TaskRequestDeclineItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* TaskRequestDeclineItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* TaskRequestDeclineItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool TaskRequestDeclineItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString TaskRequestDeclineItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString TaskRequestDeclineItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass TaskRequestDeclineItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* TaskRequestDeclineItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString TaskRequestDeclineItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime TaskRequestDeclineItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState TaskRequestDeclineItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* TaskRequestDeclineItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* TaskRequestDeclineItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance TaskRequestDeclineItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool TaskRequestDeclineItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* TaskRequestDeclineItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime TaskRequestDeclineItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* TaskRequestDeclineItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* TaskRequestDeclineItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus TaskRequestDeclineItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString TaskRequestDeclineItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString TaskRequestDeclineItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool TaskRequestDeclineItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int TaskRequestDeclineItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* TaskRequestDeclineItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* TaskRequestDeclineItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant TaskRequestDeclineItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool TaskRequestDeclineItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity TaskRequestDeclineItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* TaskRequestDeclineItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TaskRequestDeclineItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestDeclineItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool TaskRequestDeclineItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestDeclineItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* TaskRequestDeclineItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void TaskRequestDeclineItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* TaskRequestDeclineItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void TaskRequestDeclineItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void TaskRequestDeclineItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void TaskRequestDeclineItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::TaskItem* TaskRequestDeclineItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::_Conversation* TaskRequestDeclineItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline IDispatch* TaskRequestDeclineItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void TaskRequestDeclineItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void TaskRequestDeclineItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void TaskRequestDeclineItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void TaskRequestDeclineItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void TaskRequestDeclineItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}


inline Outlook::Actions* TaskRequestItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* TaskRequestItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* TaskRequestItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool TaskRequestItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskRequestItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString TaskRequestItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString TaskRequestItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass TaskRequestItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TaskRequestItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* TaskRequestItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString TaskRequestItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime TaskRequestItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState TaskRequestItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString TaskRequestItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* TaskRequestItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* TaskRequestItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance TaskRequestItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void TaskRequestItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool TaskRequestItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* TaskRequestItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime TaskRequestItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* TaskRequestItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* TaskRequestItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus TaskRequestItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void TaskRequestItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString TaskRequestItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString TaskRequestItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool TaskRequestItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int TaskRequestItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* TaskRequestItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* TaskRequestItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant TaskRequestItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TaskRequestItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool TaskRequestItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity TaskRequestItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void TaskRequestItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* TaskRequestItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TaskRequestItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool TaskRequestItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* TaskRequestItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void TaskRequestItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* TaskRequestItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void TaskRequestItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void TaskRequestItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void TaskRequestItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::TaskItem* TaskRequestItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::_Conversation* TaskRequestItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline IDispatch* TaskRequestItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void TaskRequestItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void TaskRequestItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void TaskRequestItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void TaskRequestItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void TaskRequestItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}


inline Outlook::Actions* TaskRequestUpdateItem::Actions() const
{
    Outlook::Actions* qax_pointer = 0;
    qRegisterMetaType<Outlook::Actions*>("Actions*", &qax_pointer);
    qRegisterMetaType<Outlook::Actions>("Actions", qax_pointer);
    QVariant qax_result = property("Actions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Actions**)qax_result.constData();
}

inline Outlook::_Application* TaskRequestUpdateItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* TaskRequestUpdateItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline bool TaskRequestUpdateItem::AutoResolvedWinner() const
{
    QVariant qax_result = property("AutoResolvedWinner");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::BillingInformation() const
{
    QVariant qax_result = property("BillingInformation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetBillingInformation(const QString& value){ setProperty("BillingInformation", QVariant(value)); }

inline QString TaskRequestUpdateItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline QString TaskRequestUpdateItem::Categories() const
{
    QVariant qax_result = property("Categories");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetCategories(const QString& value){ setProperty("Categories", QVariant(value)); }

inline Outlook::OlObjectClass TaskRequestUpdateItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::Companies() const
{
    QVariant qax_result = property("Companies");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetCompanies(const QString& value){ setProperty("Companies", QVariant(value)); }

inline Outlook::Conflicts* TaskRequestUpdateItem::Conflicts() const
{
    Outlook::Conflicts* qax_pointer = 0;
    qRegisterMetaType<Outlook::Conflicts*>("Conflicts*", &qax_pointer);
    qRegisterMetaType<Outlook::Conflicts>("Conflicts", qax_pointer);
    QVariant qax_result = property("Conflicts");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Conflicts**)qax_result.constData();
}

inline QString TaskRequestUpdateItem::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::ConversationIndex() const
{
    QVariant qax_result = property("ConversationIndex");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime TaskRequestUpdateItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::OlDownloadState TaskRequestUpdateItem::DownloadState() const
{
    QVariant qax_result = property("DownloadState");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDownloadState*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::FormDescription* TaskRequestUpdateItem::FormDescription() const
{
    Outlook::FormDescription* qax_pointer = 0;
    qRegisterMetaType<Outlook::FormDescription*>("FormDescription*", &qax_pointer);
    qRegisterMetaType<Outlook::FormDescription>("FormDescription", qax_pointer);
    QVariant qax_result = property("FormDescription");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::FormDescription**)qax_result.constData();
}

inline Outlook::_Inspector* TaskRequestUpdateItem::GetInspector() const
{
    Outlook::_Inspector* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Inspector*>("_Inspector*", &qax_pointer);
    qRegisterMetaType<Outlook::_Inspector>("_Inspector", qax_pointer);
    QVariant qax_result = property("GetInspector");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Inspector**)qax_result.constData();
}

inline Outlook::OlImportance TaskRequestUpdateItem::Importance() const
{
    QVariant qax_result = property("Importance");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlImportance*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetImportance(Outlook::OlImportance value){ setProperty("Importance", QVariant(value)); }

inline bool TaskRequestUpdateItem::IsConflict() const
{
    QVariant qax_result = property("IsConflict");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ItemProperties* TaskRequestUpdateItem::ItemProperties() const
{
    Outlook::ItemProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::ItemProperties*>("ItemProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::ItemProperties>("ItemProperties", qax_pointer);
    QVariant qax_result = property("ItemProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ItemProperties**)qax_result.constData();
}

inline QDateTime TaskRequestUpdateItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::Links* TaskRequestUpdateItem::Links() const
{
    Outlook::Links* qax_pointer = 0;
    qRegisterMetaType<Outlook::Links*>("Links*", &qax_pointer);
    qRegisterMetaType<Outlook::Links>("Links", qax_pointer);
    QVariant qax_result = property("Links");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Links**)qax_result.constData();
}

inline IUnknown* TaskRequestUpdateItem::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::OlRemoteStatus TaskRequestUpdateItem::MarkForDownload() const
{
    QVariant qax_result = property("MarkForDownload");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlRemoteStatus*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetMarkForDownload(Outlook::OlRemoteStatus value){ setProperty("MarkForDownload", QVariant(value)); }

inline QString TaskRequestUpdateItem::MessageClass() const
{
    QVariant qax_result = property("MessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetMessageClass(const QString& value){ setProperty("MessageClass", QVariant(value)); }

inline QString TaskRequestUpdateItem::Mileage() const
{
    QVariant qax_result = property("Mileage");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetMileage(const QString& value){ setProperty("Mileage", QVariant(value)); }

inline bool TaskRequestUpdateItem::NoAging() const
{
    QVariant qax_result = property("NoAging");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetNoAging(bool value){ setProperty("NoAging", QVariant(value)); }

inline int TaskRequestUpdateItem::OutlookInternalVersion() const
{
    QVariant qax_result = property("OutlookInternalVersion");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::OutlookVersion() const
{
    QVariant qax_result = property("OutlookVersion");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* TaskRequestUpdateItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* TaskRequestUpdateItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline QVariant TaskRequestUpdateItem::RTFBody() const
{
    QVariant qax_result = property("RTFBody");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetRTFBody(const QVariant& value){ setProperty("RTFBody", QVariant(value)); }

inline bool TaskRequestUpdateItem::Saved() const
{
    QVariant qax_result = property("Saved");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlSensitivity TaskRequestUpdateItem::Sensitivity() const
{
    QVariant qax_result = property("Sensitivity");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlSensitivity*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetSensitivity(Outlook::OlSensitivity value){ setProperty("Sensitivity", QVariant(value)); }

inline Outlook::_NameSpace* TaskRequestUpdateItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TaskRequestUpdateItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString TaskRequestUpdateItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline bool TaskRequestUpdateItem::UnRead() const
{
    QVariant qax_result = property("UnRead");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TaskRequestUpdateItem::SetUnRead(bool value){ setProperty("UnRead", QVariant(value)); }

inline Outlook::UserProperties* TaskRequestUpdateItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void TaskRequestUpdateItem::Close(Outlook::OlInspectorClose SaveMode)
{
    void *_a[] = {0, (void*)&SaveMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline IDispatch* TaskRequestUpdateItem::Copy()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline void TaskRequestUpdateItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void TaskRequestUpdateItem::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void TaskRequestUpdateItem::Display(const QVariant& Modal)
{
    void *_a[] = {0, (void*)&Modal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline Outlook::TaskItem* TaskRequestUpdateItem::GetAssociatedTask(bool AddToTaskList)
{
    Outlook::TaskItem* qax_result = 0;
    qRegisterMetaType<Outlook::TaskItem*>("TaskItem*", &qax_result);
    qRegisterMetaType<Outlook::TaskItem>("TaskItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&AddToTaskList};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline Outlook::_Conversation* TaskRequestUpdateItem::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline IDispatch* TaskRequestUpdateItem::Move(Outlook::MAPIFolder* DestFldr)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&DestFldr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline void TaskRequestUpdateItem::PrintOut()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void TaskRequestUpdateItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void TaskRequestUpdateItem::SaveAs(const QString& Path)
{
    void *_a[] = {0, (void*)&Path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void TaskRequestUpdateItem::SaveAs(const QString& Path, const QVariant& Type)
{
    void *_a[] = {0, (void*)&Path, (void*)&Type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void TaskRequestUpdateItem::ShowCategoriesDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}


inline Outlook::_Application* Results::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Results::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Results::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlItemType Results::DefaultItemType() const
{
    QVariant qax_result = property("DefaultItemType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlItemType*)qax_result.constData();
}
inline void Results::SetDefaultItemType(Outlook::OlItemType value){ setProperty("DefaultItemType", QVariant(value)); }

inline IDispatch* Results::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline IUnknown* Results::RawTable() const
{
    QVariant qax_result = property("RawTable");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline Outlook::_NameSpace* Results::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* Results::GetFirst()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline IDispatch* Results::GetLast()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline IDispatch* Results::GetNext()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline IDispatch* Results::GetPrevious()
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline IDispatch* Results::Item(const QVariant& Index)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void Results::ResetColumns()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void Results::SetColumns(const QString& Columns)
{
    void *_a[] = {0, (void*)&Columns};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void Results::Sort(const QString& Property)
{
    void *_a[] = {0, (void*)&Property};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void Results::Sort(const QString& Property, const QVariant& Descending)
{
    void *_a[] = {0, (void*)&Property, (void*)&Descending};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}


inline Outlook::_Application* Views::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Views::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Views::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Views::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Views::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::View* Views::Add(const QString& Name, Outlook::OlViewType ViewType)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&ViewType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::View* Views::Add(const QString& Name, Outlook::OlViewType ViewType, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&ViewType, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::View* Views::Item(const QVariant& Index)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void Views::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline IUnknown* Views::_NewEnum()
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline Outlook::_Application* Reminder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline QString Reminder::Caption() const
{
    QVariant qax_result = property("Caption");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlObjectClass Reminder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline bool Reminder::IsVisible() const
{
    QVariant qax_result = property("IsVisible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline IDispatch* Reminder::Item() const
{
    QVariant qax_result = property("Item");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline QDateTime Reminder::NextReminderDate() const
{
    QVariant qax_result = property("NextReminderDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime Reminder::OriginalReminderDate() const
{
    QVariant qax_result = property("OriginalReminderDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IDispatch* Reminder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Reminder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void Reminder::Dismiss()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void Reminder::Snooze()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void Reminder::Snooze(const QVariant& SnoozeTime)
{
    void *_a[] = {0, (void*)&SnoozeTime};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline Outlook::_Application* Reminders::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Reminders::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int Reminders::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* Reminders::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Reminders::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Reminder* Reminders::Item(const QVariant& Index)
{
    Outlook::_Reminder* qax_result = 0;
    qRegisterMetaType<Outlook::_Reminder*>("_Reminder*", &qax_result);
    qRegisterMetaType<Outlook::_Reminder>("_Reminder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline void Reminders::Remove(const QVariant& Index)
{
    void *_a[] = {0, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline IUnknown* Reminders::_NewEnum()
{
    IUnknown* qax_result = 0;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}


inline Outlook::_Application* StorageItem::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::Attachments* StorageItem::Attachments() const
{
    Outlook::Attachments* qax_pointer = 0;
    qRegisterMetaType<Outlook::Attachments*>("Attachments*", &qax_pointer);
    qRegisterMetaType<Outlook::Attachments>("Attachments", qax_pointer);
    QVariant qax_result = property("Attachments");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Attachments**)qax_result.constData();
}

inline QString StorageItem::Body() const
{
    QVariant qax_result = property("Body");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void StorageItem::SetBody(const QString& value){ setProperty("Body", QVariant(value)); }

inline Outlook::OlObjectClass StorageItem::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QDateTime StorageItem::CreationTime() const
{
    QVariant qax_result = property("CreationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString StorageItem::Creator() const
{
    QVariant qax_result = property("Creator");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void StorageItem::SetCreator(const QString& value){ setProperty("Creator", QVariant(value)); }

inline QString StorageItem::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QDateTime StorageItem::LastModificationTime() const
{
    QVariant qax_result = property("LastModificationTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline IDispatch* StorageItem::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* StorageItem::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* StorageItem::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int StorageItem::Size() const
{
    QVariant qax_result = property("Size");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QString StorageItem::Subject() const
{
    QVariant qax_result = property("Subject");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void StorageItem::SetSubject(const QString& value){ setProperty("Subject", QVariant(value)); }

inline Outlook::UserProperties* StorageItem::UserProperties() const
{
    Outlook::UserProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserProperties*>("UserProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserProperties>("UserProperties", qax_pointer);
    QVariant qax_result = property("UserProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserProperties**)qax_result.constData();
}

inline void StorageItem::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void StorageItem::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}


inline Outlook::_Application* NavigationPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::NavigationModule* NavigationPane::CurrentModule() const
{
    Outlook::NavigationModule* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationModule*>("NavigationModule*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationModule>("NavigationModule", qax_pointer);
    QVariant qax_result = property("CurrentModule");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationModule**)qax_result.constData();
}
inline void NavigationPane::SetCurrentModule(Outlook::NavigationModule* value){
    int typeId = qRegisterMetaType<Outlook::NavigationModule*>("Outlook::NavigationModule*", &value);
    setProperty("CurrentModule", QVariant(typeId, &value));
}

inline int NavigationPane::DisplayedModuleCount() const
{
    QVariant qax_result = property("DisplayedModuleCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NavigationPane::SetDisplayedModuleCount(int value){ setProperty("DisplayedModuleCount", QVariant(value)); }

inline bool NavigationPane::IsCollapsed() const
{
    QVariant qax_result = property("IsCollapsed");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NavigationPane::SetIsCollapsed(bool value){ setProperty("IsCollapsed", QVariant(value)); }

inline Outlook::NavigationModules* NavigationPane::Modules() const
{
    Outlook::NavigationModules* qax_pointer = 0;
    qRegisterMetaType<Outlook::NavigationModules*>("NavigationModules*", &qax_pointer);
    qRegisterMetaType<Outlook::NavigationModules>("NavigationModules", qax_pointer);
    QVariant qax_result = property("Modules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::NavigationModules**)qax_result.constData();
}

inline IDispatch* NavigationPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NavigationPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* NavigationGroups::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NavigationGroups::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int NavigationGroups::Count() const
{
    QVariant qax_result = property("Count");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline IDispatch* NavigationGroups::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* NavigationGroups::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::NavigationGroup* NavigationGroups::Create(const QString& GroupDisplayName)
{
    Outlook::NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationGroup*>("NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::NavigationGroup>("NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&GroupDisplayName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline void NavigationGroups::Delete(Outlook::NavigationGroup* Group)
{
    void *_a[] = {0, (void*)&Group};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline Outlook::NavigationGroup* NavigationGroups::GetDefaultNavigationGroup(Outlook::OlGroupType DefaultFolderGroup)
{
    Outlook::NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::NavigationGroup*>("NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::NavigationGroup>("NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DefaultFolderGroup};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::_NavigationGroup* NavigationGroups::Item(const QVariant& Index)
{
    Outlook::_NavigationGroup* qax_result = 0;
    qRegisterMetaType<Outlook::_NavigationGroup*>("_NavigationGroup*", &qax_result);
    qRegisterMetaType<Outlook::_NavigationGroup>("_NavigationGroup", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline QString DoNotUseMeFolder::AddressBookName() const
{
    QVariant qax_result = property("AddressBookName");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetAddressBookName(const QString& value){ setProperty("AddressBookName", QVariant(value)); }

inline Outlook::_Application* DoNotUseMeFolder::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass DoNotUseMeFolder::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::View* DoNotUseMeFolder::CurrentView() const
{
    Outlook::View* qax_pointer = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_pointer);
    qRegisterMetaType<Outlook::View>("View", qax_pointer);
    QVariant qax_result = property("CurrentView");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::View**)qax_result.constData();
}

inline bool DoNotUseMeFolder::CustomViewsOnly() const
{
    QVariant qax_result = property("CustomViewsOnly");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetCustomViewsOnly(bool value){ setProperty("CustomViewsOnly", QVariant(value)); }

inline Outlook::OlItemType DoNotUseMeFolder::DefaultItemType() const
{
    QVariant qax_result = property("DefaultItemType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlItemType*)qax_result.constData();
}

inline QString DoNotUseMeFolder::DefaultMessageClass() const
{
    QVariant qax_result = property("DefaultMessageClass");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString DoNotUseMeFolder::Description() const
{
    QVariant qax_result = property("Description");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetDescription(const QString& value){ setProperty("Description", QVariant(value)); }

inline QString DoNotUseMeFolder::EntryID() const
{
    QVariant qax_result = property("EntryID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString DoNotUseMeFolder::FolderPath() const
{
    QVariant qax_result = property("FolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_Folders* DoNotUseMeFolder::Folders() const
{
    Outlook::_Folders* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Folders*>("_Folders*", &qax_pointer);
    qRegisterMetaType<Outlook::_Folders>("_Folders", qax_pointer);
    QVariant qax_result = property("Folders");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Folders**)qax_result.constData();
}

inline QString DoNotUseMeFolder::FullFolderPath() const
{
    QVariant qax_result = property("FullFolderPath");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline bool DoNotUseMeFolder::InAppFolderSyncObject() const
{
    QVariant qax_result = property("InAppFolderSyncObject");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetInAppFolderSyncObject(bool value){ setProperty("InAppFolderSyncObject", QVariant(value)); }

inline bool DoNotUseMeFolder::IsSharePointFolder() const
{
    QVariant qax_result = property("IsSharePointFolder");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::_Items* DoNotUseMeFolder::Items() const
{
    Outlook::_Items* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Items*>("_Items*", &qax_pointer);
    qRegisterMetaType<Outlook::_Items>("_Items", qax_pointer);
    QVariant qax_result = property("Items");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Items**)qax_result.constData();
}

inline IUnknown* DoNotUseMeFolder::MAPIOBJECT() const
{
    QVariant qax_result = property("MAPIOBJECT");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IUnknown**)qax_result.constData();
}

inline QString DoNotUseMeFolder::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* DoNotUseMeFolder::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::PropertyAccessor* DoNotUseMeFolder::PropertyAccessor() const
{
    Outlook::PropertyAccessor* qax_pointer = 0;
    qRegisterMetaType<Outlook::PropertyAccessor*>("PropertyAccessor*", &qax_pointer);
    qRegisterMetaType<Outlook::PropertyAccessor>("PropertyAccessor", qax_pointer);
    QVariant qax_result = property("PropertyAccessor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::PropertyAccessor**)qax_result.constData();
}

inline Outlook::_NameSpace* DoNotUseMeFolder::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool DoNotUseMeFolder::ShowAsOutlookAB() const
{
    QVariant qax_result = property("ShowAsOutlookAB");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetShowAsOutlookAB(bool value){ setProperty("ShowAsOutlookAB", QVariant(value)); }

inline Outlook::OlShowItemCount DoNotUseMeFolder::ShowItemCount() const
{
    QVariant qax_result = property("ShowItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlShowItemCount*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetShowItemCount(Outlook::OlShowItemCount value){ setProperty("ShowItemCount", QVariant(value)); }

inline Outlook::Store* DoNotUseMeFolder::Store() const
{
    Outlook::Store* qax_pointer = 0;
    qRegisterMetaType<Outlook::Store*>("Store*", &qax_pointer);
    qRegisterMetaType<Outlook::Store>("Store", qax_pointer);
    QVariant qax_result = property("Store");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::Store**)qax_result.constData();
}

inline QString DoNotUseMeFolder::StoreID() const
{
    QVariant qax_result = property("StoreID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline int DoNotUseMeFolder::UnReadItemCount() const
{
    QVariant qax_result = property("UnReadItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::UserDefinedProperties* DoNotUseMeFolder::UserDefinedProperties() const
{
    Outlook::UserDefinedProperties* qax_pointer = 0;
    qRegisterMetaType<Outlook::UserDefinedProperties*>("UserDefinedProperties*", &qax_pointer);
    qRegisterMetaType<Outlook::UserDefinedProperties>("UserDefinedProperties", qax_pointer);
    QVariant qax_result = property("UserDefinedProperties");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::UserDefinedProperties**)qax_result.constData();
}

inline IDispatch* DoNotUseMeFolder::UserPermissions() const
{
    QVariant qax_result = property("UserPermissions");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Views* DoNotUseMeFolder::Views() const
{
    Outlook::_Views* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Views*>("_Views*", &qax_pointer);
    qRegisterMetaType<Outlook::_Views>("_Views", qax_pointer);
    QVariant qax_result = property("Views");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Views**)qax_result.constData();
}

inline bool DoNotUseMeFolder::WebViewAllowNavigation() const
{
    QVariant qax_result = property("WebViewAllowNavigation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetWebViewAllowNavigation(bool value){ setProperty("WebViewAllowNavigation", QVariant(value)); }

inline bool DoNotUseMeFolder::WebViewOn() const
{
    QVariant qax_result = property("WebViewOn");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetWebViewOn(bool value){ setProperty("WebViewOn", QVariant(value)); }

inline QString DoNotUseMeFolder::WebViewURL() const
{
    QVariant qax_result = property("WebViewURL");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void DoNotUseMeFolder::SetWebViewURL(const QString& value){ setProperty("WebViewURL", QVariant(value)); }

inline void DoNotUseMeFolder::AddToFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void DoNotUseMeFolder::AddToFavorites(const QVariant& fNoUI)
{
    void *_a[] = {0, (void*)&fNoUI};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void DoNotUseMeFolder::AddToFavorites(const QVariant& fNoUI, const QVariant& Name)
{
    void *_a[] = {0, (void*)&fNoUI, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void DoNotUseMeFolder::AddToPFFavorites()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Outlook::MAPIFolder* DoNotUseMeFolder::CopyTo(Outlook::MAPIFolder* DestinationFolder)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void DoNotUseMeFolder::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void DoNotUseMeFolder::Display()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline Outlook::CalendarSharing* DoNotUseMeFolder::GetCalendarExporter()
{
    Outlook::CalendarSharing* qax_result = 0;
    qRegisterMetaType<Outlook::CalendarSharing*>("CalendarSharing*", &qax_result);
    qRegisterMetaType<Outlook::CalendarSharing>("CalendarSharing", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QPixmap DoNotUseMeFolder::GetCustomIcon()
{
    QPixmap qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline Outlook::_Explorer* DoNotUseMeFolder::GetExplorer()
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline Outlook::_Explorer* DoNotUseMeFolder::GetExplorer(const QVariant& DisplayMode)
{
    Outlook::_Explorer* qax_result = 0;
    qRegisterMetaType<Outlook::_Explorer*>("_Explorer*", &qax_result);
    qRegisterMetaType<Outlook::_Explorer>("_Explorer", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&DisplayMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline Outlook::_StorageItem* DoNotUseMeFolder::GetStorage(const QString& StorageIdentifier, Outlook::OlStorageIdentifierType StorageIdentifierType)
{
    Outlook::_StorageItem* qax_result = 0;
    qRegisterMetaType<Outlook::_StorageItem*>("_StorageItem*", &qax_result);
    qRegisterMetaType<Outlook::_StorageItem>("_StorageItem", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&StorageIdentifier, (void*)&StorageIdentifierType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline Outlook::Table* DoNotUseMeFolder::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline Outlook::Table* DoNotUseMeFolder::GetTable(const QVariant& Filter)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline Outlook::Table* DoNotUseMeFolder::GetTable(const QVariant& Filter, const QVariant& TableContents)
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Filter, (void*)&TableContents};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline void DoNotUseMeFolder::MoveTo(Outlook::MAPIFolder* DestinationFolder)
{
    void *_a[] = {0, (void*)&DestinationFolder};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void DoNotUseMeFolder::SetCustomIcon(const QPixmap& Picture)
{
    void *_a[] = {0, (void*)&Picture};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}


inline Outlook::_Application* TimelineView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass TimelineView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::OlDefaultExpandCollapseSetting TimelineView::DefaultExpandCollapseSetting() const
{
    QVariant qax_result = property("DefaultExpandCollapseSetting");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultExpandCollapseSetting*)qax_result.constData();
}
inline void TimelineView::SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value){ setProperty("DefaultExpandCollapseSetting", QVariant(value)); }

inline QString TimelineView::EndField() const
{
    QVariant qax_result = property("EndField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetEndField(const QString& value){ setProperty("EndField", QVariant(value)); }

inline QString TimelineView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OrderFields* TimelineView::GroupByFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("GroupByFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline Outlook::ViewFont* TimelineView::ItemFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("ItemFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString TimelineView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool TimelineView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TimelineView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline Outlook::ViewFont* TimelineView::LowerScaleFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("LowerScaleFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline int TimelineView::MaxLabelWidth() const
{
    QVariant qax_result = property("MaxLabelWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TimelineView::SetMaxLabelWidth(int value){ setProperty("MaxLabelWidth", QVariant(value)); }

inline QString TimelineView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* TimelineView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption TimelineView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* TimelineView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool TimelineView::ShowLabelWhenViewingByMonth() const
{
    QVariant qax_result = property("ShowLabelWhenViewingByMonth");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TimelineView::SetShowLabelWhenViewingByMonth(bool value){ setProperty("ShowLabelWhenViewingByMonth", QVariant(value)); }

inline bool TimelineView::ShowWeekNumbers() const
{
    QVariant qax_result = property("ShowWeekNumbers");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TimelineView::SetShowWeekNumbers(bool value){ setProperty("ShowWeekNumbers", QVariant(value)); }

inline bool TimelineView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString TimelineView::StartField() const
{
    QVariant qax_result = property("StartField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetStartField(const QString& value){ setProperty("StartField", QVariant(value)); }

inline Outlook::OlTimelineViewMode TimelineView::TimelineViewMode() const
{
    QVariant qax_result = property("TimelineViewMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlTimelineViewMode*)qax_result.constData();
}
inline void TimelineView::SetTimelineViewMode(Outlook::OlTimelineViewMode value){ setProperty("TimelineViewMode", QVariant(value)); }

inline Outlook::ViewFont* TimelineView::UpperScaleFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("UpperScaleFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlViewType TimelineView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString TimelineView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TimelineView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void TimelineView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* TimelineView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* TimelineView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void TimelineView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void TimelineView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void TimelineView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void TimelineView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* MailModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass MailModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString MailModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* MailModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType MailModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* MailModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int MailModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void MailModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* MailModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool MailModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MailModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* CalendarModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass CalendarModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString CalendarModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* CalendarModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType CalendarModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* CalendarModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int CalendarModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CalendarModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* CalendarModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool CalendarModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* ContactsModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ContactsModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ContactsModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* ContactsModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType ContactsModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* ContactsModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int ContactsModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void ContactsModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* ContactsModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool ContactsModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ContactsModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* TasksModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass TasksModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString TasksModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* TasksModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType TasksModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* TasksModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int TasksModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TasksModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* TasksModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool TasksModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TasksModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* JournalModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass JournalModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString JournalModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* JournalModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType JournalModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* JournalModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int JournalModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void JournalModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* JournalModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool JournalModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void JournalModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline Outlook::_Application* NotesModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass NotesModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString NotesModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::_NavigationGroups* NotesModule::NavigationGroups() const
{
    Outlook::_NavigationGroups* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NavigationGroups*>("_NavigationGroups*", &qax_pointer);
    qRegisterMetaType<Outlook::_NavigationGroups>("_NavigationGroups", qax_pointer);
    QVariant qax_result = property("NavigationGroups");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NavigationGroups**)qax_result.constData();
}

inline Outlook::OlNavigationModuleType NotesModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* NotesModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int NotesModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void NotesModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* NotesModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool NotesModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void NotesModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }


inline bool TableView::AllowInCellEditing() const
{
    QVariant qax_result = property("AllowInCellEditing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetAllowInCellEditing(bool value){ setProperty("AllowInCellEditing", QVariant(value)); }

inline bool TableView::AlwaysExpandConversation() const
{
    QVariant qax_result = property("AlwaysExpandConversation");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetAlwaysExpandConversation(bool value){ setProperty("AlwaysExpandConversation", QVariant(value)); }

inline Outlook::_Application* TableView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* TableView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline Outlook::OlAutoPreview TableView::AutoPreview() const
{
    QVariant qax_result = property("AutoPreview");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlAutoPreview*)qax_result.constData();
}
inline void TableView::SetAutoPreview(Outlook::OlAutoPreview value){ setProperty("AutoPreview", QVariant(value)); }

inline Outlook::ViewFont* TableView::AutoPreviewFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("AutoPreviewFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline bool TableView::AutomaticColumnSizing() const
{
    QVariant qax_result = property("AutomaticColumnSizing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetAutomaticColumnSizing(bool value){ setProperty("AutomaticColumnSizing", QVariant(value)); }

inline bool TableView::AutomaticGrouping() const
{
    QVariant qax_result = property("AutomaticGrouping");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetAutomaticGrouping(bool value){ setProperty("AutomaticGrouping", QVariant(value)); }

inline Outlook::OlObjectClass TableView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ViewFont* TableView::ColumnFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("ColumnFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlDefaultExpandCollapseSetting TableView::DefaultExpandCollapseSetting() const
{
    QVariant qax_result = property("DefaultExpandCollapseSetting");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDefaultExpandCollapseSetting*)qax_result.constData();
}
inline void TableView::SetDefaultExpandCollapseSetting(Outlook::OlDefaultExpandCollapseSetting value){ setProperty("DefaultExpandCollapseSetting", QVariant(value)); }

inline QString TableView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TableView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OlGridLineStyle TableView::GridLineStyle() const
{
    QVariant qax_result = property("GridLineStyle");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlGridLineStyle*)qax_result.constData();
}
inline void TableView::SetGridLineStyle(Outlook::OlGridLineStyle value){ setProperty("GridLineStyle", QVariant(value)); }

inline Outlook::OrderFields* TableView::GroupByFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("GroupByFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool TableView::HideReadingPaneHeaderInfo() const
{
    QVariant qax_result = property("HideReadingPaneHeaderInfo");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetHideReadingPaneHeaderInfo(bool value){ setProperty("HideReadingPaneHeaderInfo", QVariant(value)); }

inline QString TableView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TableView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool TableView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline int TableView::MaxLinesInMultiLineView() const
{
    QVariant qax_result = property("MaxLinesInMultiLineView");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TableView::SetMaxLinesInMultiLineView(int value){ setProperty("MaxLinesInMultiLineView", QVariant(value)); }

inline Outlook::OlMultiLine TableView::MultiLine() const
{
    QVariant qax_result = property("MultiLine");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlMultiLine*)qax_result.constData();
}
inline void TableView::SetMultiLine(Outlook::OlMultiLine value){ setProperty("MultiLine", QVariant(value)); }

inline int TableView::MultiLineWidth() const
{
    QVariant qax_result = property("MultiLineWidth");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void TableView::SetMultiLineWidth(int value){ setProperty("MultiLineWidth", QVariant(value)); }

inline QString TableView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TableView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* TableView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::ViewFont* TableView::RowFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("RowFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlViewSaveOption TableView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* TableView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool TableView::ShowConversationByDate() const
{
    QVariant qax_result = property("ShowConversationByDate");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowConversationByDate(bool value){ setProperty("ShowConversationByDate", QVariant(value)); }

inline bool TableView::ShowConversationSendersAboveSubject() const
{
    QVariant qax_result = property("ShowConversationSendersAboveSubject");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowConversationSendersAboveSubject(bool value){ setProperty("ShowConversationSendersAboveSubject", QVariant(value)); }

inline bool TableView::ShowFullConversations() const
{
    QVariant qax_result = property("ShowFullConversations");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowFullConversations(bool value){ setProperty("ShowFullConversations", QVariant(value)); }

inline bool TableView::ShowItemsInGroups() const
{
    QVariant qax_result = property("ShowItemsInGroups");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowItemsInGroups(bool value){ setProperty("ShowItemsInGroups", QVariant(value)); }

inline bool TableView::ShowNewItemRow() const
{
    QVariant qax_result = property("ShowNewItemRow");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowNewItemRow(bool value){ setProperty("ShowNewItemRow", QVariant(value)); }

inline bool TableView::ShowReadingPane() const
{
    QVariant qax_result = property("ShowReadingPane");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowReadingPane(bool value){ setProperty("ShowReadingPane", QVariant(value)); }

inline bool TableView::ShowUnreadAndFlaggedMessages() const
{
    QVariant qax_result = property("ShowUnreadAndFlaggedMessages");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void TableView::SetShowUnreadAndFlaggedMessages(bool value){ setProperty("ShowUnreadAndFlaggedMessages", QVariant(value)); }

inline Outlook::OrderFields* TableView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool TableView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ViewFields* TableView::ViewFields() const
{
    Outlook::ViewFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFields*>("ViewFields*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFields>("ViewFields", qax_pointer);
    QVariant qax_result = property("ViewFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFields**)qax_result.constData();
}

inline Outlook::OlViewType TableView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString TableView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void TableView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void TableView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* TableView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* TableView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void TableView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline Outlook::Table* TableView::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline void TableView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void TableView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void TableView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}


inline Outlook::_Application* IconView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass IconView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString IconView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IconView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::OlIconViewPlacement IconView::IconPlacement() const
{
    QVariant qax_result = property("IconPlacement");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlIconViewPlacement*)qax_result.constData();
}
inline void IconView::SetIconPlacement(Outlook::OlIconViewPlacement value){ setProperty("IconPlacement", QVariant(value)); }

inline Outlook::OlIconViewType IconView::IconViewType() const
{
    QVariant qax_result = property("IconViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlIconViewType*)qax_result.constData();
}
inline void IconView::SetIconViewType(Outlook::OlIconViewType value){ setProperty("IconViewType", QVariant(value)); }

inline QString IconView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IconView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool IconView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void IconView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString IconView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IconView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* IconView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption IconView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* IconView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* IconView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool IconView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType IconView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString IconView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IconView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void IconView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* IconView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* IconView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void IconView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void IconView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void IconView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void IconView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline bool CardView::AllowInCellEditing() const
{
    QVariant qax_result = property("AllowInCellEditing");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CardView::SetAllowInCellEditing(bool value){ setProperty("AllowInCellEditing", QVariant(value)); }

inline Outlook::_Application* CardView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* CardView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline Outlook::ViewFont* CardView::BodyFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("BodyFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlObjectClass CardView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString CardView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CardView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* CardView::HeadingsFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("HeadingsFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString CardView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CardView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool CardView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CardView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline int CardView::MultiLineFieldHeight() const
{
    QVariant qax_result = property("MultiLineFieldHeight");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CardView::SetMultiLineFieldHeight(int value){ setProperty("MultiLineFieldHeight", QVariant(value)); }

inline QString CardView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CardView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* CardView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption CardView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* CardView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool CardView::ShowEmptyFields() const
{
    QVariant qax_result = property("ShowEmptyFields");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CardView::SetShowEmptyFields(bool value){ setProperty("ShowEmptyFields", QVariant(value)); }

inline Outlook::OrderFields* CardView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool CardView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::ViewFields* CardView::ViewFields() const
{
    Outlook::ViewFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFields*>("ViewFields*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFields>("ViewFields", qax_pointer);
    QVariant qax_result = property("ViewFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFields**)qax_result.constData();
}

inline Outlook::OlViewType CardView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline int CardView::Width() const
{
    QVariant qax_result = property("Width");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CardView::SetWidth(int value){ setProperty("Width", QVariant(value)); }

inline QString CardView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CardView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void CardView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* CardView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* CardView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void CardView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CardView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void CardView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void CardView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* CalendarView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::AutoFormatRules* CalendarView::AutoFormatRules() const
{
    Outlook::AutoFormatRules* qax_pointer = 0;
    qRegisterMetaType<Outlook::AutoFormatRules*>("AutoFormatRules*", &qax_pointer);
    qRegisterMetaType<Outlook::AutoFormatRules>("AutoFormatRules", qax_pointer);
    QVariant qax_result = property("AutoFormatRules");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::AutoFormatRules**)qax_result.constData();
}

inline bool CalendarView::BoldDatesWithItems() const
{
    QVariant qax_result = property("BoldDatesWithItems");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarView::SetBoldDatesWithItems(bool value){ setProperty("BoldDatesWithItems", QVariant(value)); }

inline bool CalendarView::BoldSubjects() const
{
    QVariant qax_result = property("BoldSubjects");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarView::SetBoldSubjects(bool value){ setProperty("BoldSubjects", QVariant(value)); }

inline Outlook::OlCalendarViewMode CalendarView::CalendarViewMode() const
{
    QVariant qax_result = property("CalendarViewMode");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlCalendarViewMode*)qax_result.constData();
}
inline void CalendarView::SetCalendarViewMode(Outlook::OlCalendarViewMode value){ setProperty("CalendarViewMode", QVariant(value)); }

inline Outlook::OlObjectClass CalendarView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline Outlook::ViewFont* CalendarView::DayWeekFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("DayWeekFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::ViewFont* CalendarView::DayWeekTimeFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("DayWeekTimeFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline Outlook::OlDayWeekTimeScale CalendarView::DayWeekTimeScale() const
{
    QVariant qax_result = property("DayWeekTimeScale");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlDayWeekTimeScale*)qax_result.constData();
}
inline void CalendarView::SetDayWeekTimeScale(Outlook::OlDayWeekTimeScale value){ setProperty("DayWeekTimeScale", QVariant(value)); }

inline int CalendarView::DaysInMultiDayMode() const
{
    QVariant qax_result = property("DaysInMultiDayMode");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void CalendarView::SetDaysInMultiDayMode(int value){ setProperty("DaysInMultiDayMode", QVariant(value)); }

inline QVariant CalendarView::DisplayedDates() const
{
    QVariant qax_result = property("DisplayedDates");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}

inline QString CalendarView::EndField() const
{
    QVariant qax_result = property("EndField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetEndField(const QString& value){ setProperty("EndField", QVariant(value)); }

inline QString CalendarView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString CalendarView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool CalendarView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline Outlook::ViewFont* CalendarView::MonthFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("MonthFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline bool CalendarView::MonthShowEndTime() const
{
    QVariant qax_result = property("MonthShowEndTime");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void CalendarView::SetMonthShowEndTime(bool value){ setProperty("MonthShowEndTime", QVariant(value)); }

inline QString CalendarView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* CalendarView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption CalendarView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline QDateTime CalendarView::SelectedEndTime() const
{
    QVariant qax_result = property("SelectedEndTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QDateTime CalendarView::SelectedStartTime() const
{
    QVariant qax_result = property("SelectedStartTime");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline Outlook::_NameSpace* CalendarView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool CalendarView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline QString CalendarView::StartField() const
{
    QVariant qax_result = property("StartField");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetStartField(const QString& value){ setProperty("StartField", QVariant(value)); }

inline Outlook::OlViewType CalendarView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString CalendarView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void CalendarView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void CalendarView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* CalendarView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* CalendarView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void CalendarView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void CalendarView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void CalendarView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void CalendarView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* BusinessCardView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline int BusinessCardView::CardSize() const
{
    QVariant qax_result = property("CardSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void BusinessCardView::SetCardSize(int value){ setProperty("CardSize", QVariant(value)); }

inline Outlook::OlObjectClass BusinessCardView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString BusinessCardView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BusinessCardView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline Outlook::ViewFont* BusinessCardView::HeadingsFont() const
{
    Outlook::ViewFont* qax_pointer = 0;
    qRegisterMetaType<Outlook::ViewFont*>("ViewFont*", &qax_pointer);
    qRegisterMetaType<Outlook::ViewFont>("ViewFont", qax_pointer);
    QVariant qax_result = property("HeadingsFont");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::ViewFont**)qax_result.constData();
}

inline QString BusinessCardView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BusinessCardView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool BusinessCardView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void BusinessCardView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString BusinessCardView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BusinessCardView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* BusinessCardView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption BusinessCardView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* BusinessCardView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* BusinessCardView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool BusinessCardView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType BusinessCardView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString BusinessCardView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void BusinessCardView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void BusinessCardView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* BusinessCardView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* BusinessCardView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void BusinessCardView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void BusinessCardView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void BusinessCardView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void BusinessCardView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline void FormRegionStartup::BeforeFormRegionShow(Outlook::FormRegion* FormRegion)
{
    void *_a[] = {0, (void*)&FormRegion};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QVariant FormRegionStartup::GetFormRegionIcon(const QString& FormRegionName, int LCID, Outlook::OlFormRegionIcon Icon)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&LCID, (void*)&Icon};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QVariant FormRegionStartup::GetFormRegionManifest(const QString& FormRegionName, int LCID)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&LCID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline QVariant FormRegionStartup::GetFormRegionStorage(const QString& FormRegionName, IDispatch* Item, int LCID, Outlook::OlFormRegionMode FormRegionMode, Outlook::OlFormRegionSize FormRegionSize)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&FormRegionName, (void*)&Item, (void*)&LCID, (void*)&FormRegionMode, (void*)&FormRegionSize};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}


inline Outlook::_Application* TimeZone::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline int TimeZone::Bias() const
{
    QVariant qax_result = property("Bias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline Outlook::OlObjectClass TimeZone::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline int TimeZone::DaylightBias() const
{
    QVariant qax_result = property("DaylightBias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime TimeZone::DaylightDate() const
{
    QVariant qax_result = property("DaylightDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString TimeZone::DaylightDesignation() const
{
    QVariant qax_result = property("DaylightDesignation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TimeZone::ID() const
{
    QVariant qax_result = property("ID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString TimeZone::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* TimeZone::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* TimeZone::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline int TimeZone::StandardBias() const
{
    QVariant qax_result = property("StandardBias");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}

inline QDateTime TimeZone::StandardDate() const
{
    QVariant qax_result = property("StandardDate");
    Q_ASSERT(qax_result.isValid());
    return *(QDateTime*)qax_result.constData();
}

inline QString TimeZone::StandardDesignation() const
{
    QVariant qax_result = property("StandardDesignation");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}


inline Outlook::_Application* SolutionsModule::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass SolutionsModule::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString SolutionsModule::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline Outlook::OlNavigationModuleType SolutionsModule::NavigationModuleType() const
{
    QVariant qax_result = property("NavigationModuleType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlNavigationModuleType*)qax_result.constData();
}

inline IDispatch* SolutionsModule::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline int SolutionsModule::Position() const
{
    QVariant qax_result = property("Position");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void SolutionsModule::SetPosition(int value){ setProperty("Position", QVariant(value)); }

inline Outlook::_NameSpace* SolutionsModule::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool SolutionsModule::Visible() const
{
    QVariant qax_result = property("Visible");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void SolutionsModule::SetVisible(bool value){ setProperty("Visible", QVariant(value)); }

inline void SolutionsModule::AddSolution(Outlook::MAPIFolder* Solution, Outlook::OlSolutionScope Scope)
{
    void *_a[] = {0, (void*)&Solution, (void*)&Scope};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}


inline Outlook::_Application* Conversation::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass Conversation::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString Conversation::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* Conversation::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* Conversation::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline void Conversation::ClearAlwaysAssignCategories(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QString Conversation::GetAlwaysAssignCategories(Outlook::_Store* Store)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline OlAlwaysDeleteConversation Conversation::GetAlwaysDelete(Outlook::_Store* Store)
{
    OlAlwaysDeleteConversation qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline Outlook::MAPIFolder* Conversation::GetAlwaysMoveToFolder(Outlook::_Store* Store)
{
    Outlook::MAPIFolder* qax_result = 0;
    qRegisterMetaType<Outlook::MAPIFolder*>("MAPIFolder*", &qax_result);
    qRegisterMetaType<Outlook::MAPIFolder>("MAPIFolder", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline Outlook::SimpleItems* Conversation::GetChildren(IDispatch* Item)
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline IDispatch* Conversation::GetParent(IDispatch* Item)
{
    IDispatch* qax_result = 0;
    void *_a[] = {(void*)&qax_result, (void*)&Item};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline Outlook::SimpleItems* Conversation::GetRootItems()
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline Outlook::Table* Conversation::GetTable()
{
    Outlook::Table* qax_result = 0;
    qRegisterMetaType<Outlook::Table*>("Table*", &qax_result);
    qRegisterMetaType<Outlook::Table>("Table", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline void Conversation::MarkAsRead()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void Conversation::MarkAsUnread()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void Conversation::SetAlwaysAssignCategories(const QString& Categories, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Categories, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void Conversation::SetAlwaysDelete(Outlook::OlAlwaysDeleteConversation AlwaysDelete, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&AlwaysDelete, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void Conversation::SetAlwaysMoveToFolder(Outlook::MAPIFolder* MoveToFolder, Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&MoveToFolder, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void Conversation::StopAlwaysDelete(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void Conversation::StopAlwaysMoveToFolder(Outlook::_Store* Store)
{
    void *_a[] = {0, (void*)&Store};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}


inline Outlook::_Application* AccountSelector::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass AccountSelector::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* AccountSelector::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_Account* AccountSelector::SelectedAccount() const
{
    Outlook::_Account* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Account*>("_Account*", &qax_pointer);
    qRegisterMetaType<Outlook::_Account>("_Account", qax_pointer);
    QVariant qax_result = property("SelectedAccount");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Account**)qax_result.constData();
}

inline Outlook::_NameSpace* AccountSelector::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}


inline Outlook::_Application* ConversationHeader::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ConversationHeader::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ConversationHeader::ConversationID() const
{
    QVariant qax_result = property("ConversationID");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline QString ConversationHeader::ConversationTopic() const
{
    QVariant qax_result = property("ConversationTopic");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}

inline IDispatch* ConversationHeader::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* ConversationHeader::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::_Conversation* ConversationHeader::GetConversation()
{
    Outlook::_Conversation* qax_result = 0;
    qRegisterMetaType<Outlook::_Conversation*>("_Conversation*", &qax_result);
    qRegisterMetaType<Outlook::_Conversation>("_Conversation", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline Outlook::SimpleItems* ConversationHeader::GetItems()
{
    Outlook::SimpleItems* qax_result = 0;
    qRegisterMetaType<Outlook::SimpleItems*>("SimpleItems*", &qax_result);
    qRegisterMetaType<Outlook::SimpleItems>("SimpleItems", qax_result);
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline Outlook::_Application* PeopleView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PeopleView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString PeopleView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PeopleView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString PeopleView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PeopleView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool PeopleView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void PeopleView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString PeopleView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PeopleView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* PeopleView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption PeopleView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* PeopleView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline Outlook::OrderFields* PeopleView::SortFields() const
{
    Outlook::OrderFields* qax_pointer = 0;
    qRegisterMetaType<Outlook::OrderFields*>("OrderFields*", &qax_pointer);
    qRegisterMetaType<Outlook::OrderFields>("OrderFields", qax_pointer);
    QVariant qax_result = property("SortFields");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OrderFields**)qax_result.constData();
}

inline bool PeopleView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType PeopleView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString PeopleView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void PeopleView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void PeopleView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* PeopleView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* PeopleView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void PeopleView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void PeopleView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void PeopleView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void PeopleView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* ThreadView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass ThreadView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString ThreadView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ThreadView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString ThreadView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ThreadView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool ThreadView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void ThreadView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString ThreadView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ThreadView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* ThreadView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption ThreadView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* ThreadView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool ThreadView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType ThreadView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString ThreadView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void ThreadView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void ThreadView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* ThreadView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* ThreadView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void ThreadView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void ThreadView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void ThreadView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void ThreadView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}


inline Outlook::_Application* PreviewPane::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass PreviewPane::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline IDispatch* PreviewPane::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::_NameSpace* PreviewPane::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline IDispatch* PreviewPane::WordEditor() const
{
    QVariant qax_result = property("WordEditor");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}


inline Outlook::_Application* MessageListView::Application() const
{
    Outlook::_Application* qax_pointer = 0;
    qRegisterMetaType<Outlook::_Application*>("_Application*", &qax_pointer);
    qRegisterMetaType<Outlook::_Application>("_Application", qax_pointer);
    QVariant qax_result = property("Application");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_Application**)qax_result.constData();
}

inline Outlook::OlObjectClass MessageListView::Class() const
{
    QVariant qax_result = property("Class");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlObjectClass*)qax_result.constData();
}

inline QString MessageListView::Filter() const
{
    QVariant qax_result = property("Filter");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MessageListView::SetFilter(const QString& value){ setProperty("Filter", QVariant(value)); }

inline QString MessageListView::Language() const
{
    QVariant qax_result = property("Language");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MessageListView::SetLanguage(const QString& value){ setProperty("Language", QVariant(value)); }

inline bool MessageListView::LockUserChanges() const
{
    QVariant qax_result = property("LockUserChanges");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MessageListView::SetLockUserChanges(bool value){ setProperty("LockUserChanges", QVariant(value)); }

inline QString MessageListView::Name() const
{
    QVariant qax_result = property("Name");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MessageListView::SetName(const QString& value){ setProperty("Name", QVariant(value)); }

inline IDispatch* MessageListView::Parent() const
{
    QVariant qax_result = property("Parent");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(IDispatch**)qax_result.constData();
}

inline Outlook::OlViewSaveOption MessageListView::SaveOption() const
{
    QVariant qax_result = property("SaveOption");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewSaveOption*)qax_result.constData();
}

inline Outlook::_NameSpace* MessageListView::Session() const
{
    Outlook::_NameSpace* qax_pointer = 0;
    qRegisterMetaType<Outlook::_NameSpace*>("_NameSpace*", &qax_pointer);
    qRegisterMetaType<Outlook::_NameSpace>("_NameSpace", qax_pointer);
    QVariant qax_result = property("Session");
    if (!qax_result.constData()) return 0;
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::_NameSpace**)qax_result.constData();
}

inline bool MessageListView::Standard() const
{
    QVariant qax_result = property("Standard");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}

inline Outlook::OlViewType MessageListView::ViewType() const
{
    QVariant qax_result = property("ViewType");
    Q_ASSERT(qax_result.isValid());
    return *(Outlook::OlViewType*)qax_result.constData();
}

inline QString MessageListView::XML() const
{
    QVariant qax_result = property("XML");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MessageListView::SetXML(const QString& value){ setProperty("XML", QVariant(value)); }

inline void MessageListView::Apply()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline Outlook::View* MessageListView::Copy(const QString& Name)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline Outlook::View* MessageListView::Copy(const QString& Name, Outlook::OlViewSaveOption SaveOption)
{
    Outlook::View* qax_result = 0;
    qRegisterMetaType<Outlook::View*>("View*", &qax_result);
    qRegisterMetaType<Outlook::View>("View", qax_result);
    void *_a[] = {(void*)&qax_result, (void*)&Name, (void*)&SaveOption};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void MessageListView::Delete()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void MessageListView::GoToDate(const QDateTime& Date)
{
    void *_a[] = {0, (void*)&Date};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void MessageListView::Reset()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void MessageListView::Save()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<Outlook::_DRecipientControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_DRecipientControl*>(t)->Outlook::_DRecipientControl::~_DRecipientControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_DRecipientControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_DRecipientControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_DRecipientControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RecipientControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RecipientControl*>(t)->Outlook::_RecipientControl::~_RecipientControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RecipientControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RecipientControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RecipientControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_DDocSiteControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_DDocSiteControl*>(t)->Outlook::_DDocSiteControl::~_DDocSiteControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_DDocSiteControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_DDocSiteControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_DDocSiteControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_DocSiteControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_DocSiteControl*>(t)->Outlook::_DocSiteControl::~_DocSiteControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_DocSiteControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_DocSiteControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_DocSiteControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkControl*>(t)->Outlook::OlkControl::~OlkControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkTextBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkTextBox*>(t)->Outlook::_OlkTextBox::~_OlkTextBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkTextBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkTextBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkTextBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkTextBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkTextBox*>(t)->Outlook::OlkTextBox::~OlkTextBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkTextBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkTextBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkTextBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkLabel, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkLabel*>(t)->Outlook::_OlkLabel::~_OlkLabel();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkLabel;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkLabel*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkLabel*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkLabel, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkLabel*>(t)->Outlook::OlkLabel::~OlkLabel();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkLabel;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkLabel*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkLabel*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkCommandButton, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkCommandButton*>(t)->Outlook::_OlkCommandButton::~_OlkCommandButton();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkCommandButton;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkCommandButton*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkCommandButton*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkCommandButton, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkCommandButton*>(t)->Outlook::OlkCommandButton::~OlkCommandButton();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkCommandButton;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkCommandButton*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkCommandButton*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkCheckBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkCheckBox*>(t)->Outlook::_OlkCheckBox::~_OlkCheckBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkCheckBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkCheckBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkCheckBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkCheckBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkCheckBox*>(t)->Outlook::OlkCheckBox::~OlkCheckBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkCheckBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkCheckBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkCheckBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkOptionButton, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkOptionButton*>(t)->Outlook::_OlkOptionButton::~_OlkOptionButton();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkOptionButton;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkOptionButton*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkOptionButton*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkOptionButton, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkOptionButton*>(t)->Outlook::OlkOptionButton::~OlkOptionButton();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkOptionButton;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkOptionButton*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkOptionButton*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkComboBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkComboBox*>(t)->Outlook::_OlkComboBox::~_OlkComboBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkComboBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkComboBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkComboBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkComboBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkComboBox*>(t)->Outlook::OlkComboBox::~OlkComboBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkComboBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkComboBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkComboBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkListBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkListBox*>(t)->Outlook::_OlkListBox::~_OlkListBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkListBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkListBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkListBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkListBox, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkListBox*>(t)->Outlook::OlkListBox::~OlkListBox();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkListBox;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkListBox*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkListBox*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkInfoBar, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkInfoBar*>(t)->Outlook::_OlkInfoBar::~_OlkInfoBar();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkInfoBar;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkInfoBar*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkInfoBar*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkInfoBar, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkInfoBar*>(t)->Outlook::OlkInfoBar::~OlkInfoBar();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkInfoBar;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkInfoBar*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkInfoBar*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkContactPhoto, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkContactPhoto*>(t)->Outlook::_OlkContactPhoto::~_OlkContactPhoto();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkContactPhoto;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkContactPhoto*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkContactPhoto*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkContactPhoto, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkContactPhoto*>(t)->Outlook::OlkContactPhoto::~OlkContactPhoto();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkContactPhoto;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkContactPhoto*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkContactPhoto*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkBusinessCardControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkBusinessCardControl*>(t)->Outlook::_OlkBusinessCardControl::~_OlkBusinessCardControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkBusinessCardControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkBusinessCardControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkBusinessCardControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkBusinessCardControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkBusinessCardControl*>(t)->Outlook::OlkBusinessCardControl::~OlkBusinessCardControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkBusinessCardControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkBusinessCardControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkBusinessCardControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkPageControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkPageControl*>(t)->Outlook::_OlkPageControl::~_OlkPageControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkPageControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkPageControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkPageControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkPageControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkPageControl*>(t)->Outlook::OlkPageControl::~OlkPageControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkPageControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkPageControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkPageControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkDateControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkDateControl*>(t)->Outlook::_OlkDateControl::~_OlkDateControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkDateControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkDateControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkDateControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkDateControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkDateControl*>(t)->Outlook::OlkDateControl::~OlkDateControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkDateControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkDateControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkDateControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkTimeControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkTimeControl*>(t)->Outlook::_OlkTimeControl::~_OlkTimeControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkTimeControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkTimeControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkTimeControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkTimeControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkTimeControl*>(t)->Outlook::OlkTimeControl::~OlkTimeControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkTimeControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkTimeControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkTimeControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkCategory, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkCategory*>(t)->Outlook::_OlkCategory::~_OlkCategory();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkCategory;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkCategory*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkCategory*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkCategory, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkCategory*>(t)->Outlook::OlkCategory::~OlkCategory();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkCategory;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkCategory*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkCategory*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkFrameHeader, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkFrameHeader*>(t)->Outlook::_OlkFrameHeader::~_OlkFrameHeader();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkFrameHeader;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkFrameHeader*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkFrameHeader*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkFrameHeader, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkFrameHeader*>(t)->Outlook::OlkFrameHeader::~OlkFrameHeader();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkFrameHeader;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkFrameHeader*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkFrameHeader*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkSenderPhoto, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkSenderPhoto*>(t)->Outlook::_OlkSenderPhoto::~_OlkSenderPhoto();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkSenderPhoto;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkSenderPhoto*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkSenderPhoto*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkSenderPhoto, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkSenderPhoto*>(t)->Outlook::OlkSenderPhoto::~OlkSenderPhoto();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkSenderPhoto;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkSenderPhoto*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkSenderPhoto*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TimeZone, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TimeZone*>(t)->Outlook::_TimeZone::~_TimeZone();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TimeZone;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TimeZone*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TimeZone*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Application, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Application*>(t)->Outlook::_Application::~_Application();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Application;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Application*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Application*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NameSpace, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NameSpace*>(t)->Outlook::_NameSpace::~_NameSpace();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NameSpace;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NameSpace*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NameSpace*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Recipient, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Recipient*>(t)->Outlook::Recipient::~Recipient();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Recipient;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Recipient*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Recipient*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AddressEntry, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AddressEntry*>(t)->Outlook::AddressEntry::~AddressEntry();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AddressEntry;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AddressEntry*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AddressEntry*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AddressEntries, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AddressEntries*>(t)->Outlook::AddressEntries::~AddressEntries();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AddressEntries;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AddressEntries*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AddressEntries*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ContactItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ContactItem*>(t)->Outlook::_ContactItem::~_ContactItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ContactItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ContactItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ContactItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Actions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Actions*>(t)->Outlook::Actions::~Actions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Actions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Actions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Actions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Action, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Action*>(t)->Outlook::Action::~Action();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Action;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Action*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Action*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Attachments, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Attachments*>(t)->Outlook::Attachments::~Attachments();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Attachments;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Attachments*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Attachments*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Attachment, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Attachment*>(t)->Outlook::Attachment::~Attachment();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Attachment;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Attachment*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Attachment*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PropertyAccessor, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PropertyAccessor*>(t)->Outlook::PropertyAccessor::~PropertyAccessor();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PropertyAccessor;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PropertyAccessor*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PropertyAccessor*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_PropertyAccessor, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_PropertyAccessor*>(t)->Outlook::_PropertyAccessor::~_PropertyAccessor();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_PropertyAccessor;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_PropertyAccessor*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_PropertyAccessor*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::FormDescription, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::FormDescription*>(t)->Outlook::FormDescription::~FormDescription();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::FormDescription;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::FormDescription*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::FormDescription*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Inspector, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Inspector*>(t)->Outlook::_Inspector::~_Inspector();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Inspector;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Inspector*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Inspector*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AttachmentSelection, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AttachmentSelection*>(t)->Outlook::_AttachmentSelection::~_AttachmentSelection();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AttachmentSelection;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AttachmentSelection*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AttachmentSelection*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Selection, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Selection*>(t)->Outlook::Selection::~Selection();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Selection;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Selection*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Selection*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::UserProperties, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::UserProperties*>(t)->Outlook::UserProperties::~UserProperties();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::UserProperties;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::UserProperties*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::UserProperties*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::UserProperty, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::UserProperty*>(t)->Outlook::UserProperty::~UserProperty();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::UserProperty;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::UserProperty*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::UserProperty*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MAPIFolder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MAPIFolder*>(t)->Outlook::MAPIFolder::~MAPIFolder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MAPIFolder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MAPIFolder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MAPIFolder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Folders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Folders*>(t)->Outlook::_Folders::~_Folders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Folders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Folders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Folders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Items, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Items*>(t)->Outlook::_Items::~_Items();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Items;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Items*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Items*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Explorer, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Explorer*>(t)->Outlook::_Explorer::~_Explorer();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Explorer;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Explorer*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Explorer*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Panes, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Panes*>(t)->Outlook::Panes::~Panes();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Panes;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Panes*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Panes*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationPane*>(t)->Outlook::_NavigationPane::~_NavigationPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationModule*>(t)->Outlook::NavigationModule::~NavigationModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationModule*>(t)->Outlook::_NavigationModule::~_NavigationModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationModules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationModules*>(t)->Outlook::NavigationModules::~NavigationModules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationModules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationModules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationModules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationModules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationModules*>(t)->Outlook::_NavigationModules::~_NavigationModules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationModules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationModules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationModules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AccountSelector, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AccountSelector*>(t)->Outlook::_AccountSelector::~_AccountSelector();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AccountSelector;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AccountSelector*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AccountSelector*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Account, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Account*>(t)->Outlook::_Account::~_Account();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Account;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Account*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Account*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Store, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Store*>(t)->Outlook::Store::~Store();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Store;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Store*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Store*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Store, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Store*>(t)->Outlook::_Store::~_Store();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Store;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Store*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Store*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Rules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Rules*>(t)->Outlook::Rules::~Rules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Rules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Rules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Rules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Rules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Rules*>(t)->Outlook::_Rules::~_Rules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Rules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Rules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Rules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Rule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Rule*>(t)->Outlook::_Rule::~_Rule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Rule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Rule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Rule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RuleActions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RuleActions*>(t)->Outlook::RuleActions::~RuleActions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RuleActions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RuleActions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RuleActions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RuleActions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RuleActions*>(t)->Outlook::_RuleActions::~_RuleActions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RuleActions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RuleActions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RuleActions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RuleAction*>(t)->Outlook::_RuleAction::~_RuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MoveOrCopyRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MoveOrCopyRuleAction*>(t)->Outlook::MoveOrCopyRuleAction::~MoveOrCopyRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MoveOrCopyRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MoveOrCopyRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MoveOrCopyRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MoveOrCopyRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MoveOrCopyRuleAction*>(t)->Outlook::_MoveOrCopyRuleAction::~_MoveOrCopyRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MoveOrCopyRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MoveOrCopyRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MoveOrCopyRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RuleAction*>(t)->Outlook::RuleAction::~RuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SendRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SendRuleAction*>(t)->Outlook::SendRuleAction::~SendRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SendRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SendRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SendRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SendRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SendRuleAction*>(t)->Outlook::_SendRuleAction::~_SendRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SendRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SendRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SendRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Recipients, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Recipients*>(t)->Outlook::Recipients::~Recipients();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Recipients;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Recipients*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Recipients*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AssignToCategoryRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AssignToCategoryRuleAction*>(t)->Outlook::AssignToCategoryRuleAction::~AssignToCategoryRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AssignToCategoryRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AssignToCategoryRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AssignToCategoryRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AssignToCategoryRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AssignToCategoryRuleAction*>(t)->Outlook::_AssignToCategoryRuleAction::~_AssignToCategoryRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AssignToCategoryRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AssignToCategoryRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AssignToCategoryRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PlaySoundRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PlaySoundRuleAction*>(t)->Outlook::PlaySoundRuleAction::~PlaySoundRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PlaySoundRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PlaySoundRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PlaySoundRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_PlaySoundRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_PlaySoundRuleAction*>(t)->Outlook::_PlaySoundRuleAction::~_PlaySoundRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_PlaySoundRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_PlaySoundRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_PlaySoundRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MarkAsTaskRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MarkAsTaskRuleAction*>(t)->Outlook::MarkAsTaskRuleAction::~MarkAsTaskRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MarkAsTaskRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MarkAsTaskRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MarkAsTaskRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MarkAsTaskRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MarkAsTaskRuleAction*>(t)->Outlook::_MarkAsTaskRuleAction::~_MarkAsTaskRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MarkAsTaskRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MarkAsTaskRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MarkAsTaskRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NewItemAlertRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NewItemAlertRuleAction*>(t)->Outlook::NewItemAlertRuleAction::~NewItemAlertRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NewItemAlertRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NewItemAlertRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NewItemAlertRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NewItemAlertRuleAction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NewItemAlertRuleAction*>(t)->Outlook::_NewItemAlertRuleAction::~_NewItemAlertRuleAction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NewItemAlertRuleAction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NewItemAlertRuleAction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NewItemAlertRuleAction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RuleConditions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RuleConditions*>(t)->Outlook::RuleConditions::~RuleConditions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RuleConditions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RuleConditions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RuleConditions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RuleConditions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RuleConditions*>(t)->Outlook::_RuleConditions::~_RuleConditions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RuleConditions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RuleConditions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RuleConditions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RuleCondition*>(t)->Outlook::_RuleCondition::~_RuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RuleCondition*>(t)->Outlook::RuleCondition::~RuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ImportanceRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ImportanceRuleCondition*>(t)->Outlook::ImportanceRuleCondition::~ImportanceRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ImportanceRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ImportanceRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ImportanceRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ImportanceRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ImportanceRuleCondition*>(t)->Outlook::_ImportanceRuleCondition::~_ImportanceRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ImportanceRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ImportanceRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ImportanceRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AccountRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AccountRuleCondition*>(t)->Outlook::AccountRuleCondition::~AccountRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AccountRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AccountRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AccountRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AccountRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AccountRuleCondition*>(t)->Outlook::_AccountRuleCondition::~_AccountRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AccountRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AccountRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AccountRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Account, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Account*>(t)->Outlook::Account::~Account();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Account;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Account*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Account*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TextRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TextRuleCondition*>(t)->Outlook::TextRuleCondition::~TextRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TextRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TextRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TextRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TextRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TextRuleCondition*>(t)->Outlook::_TextRuleCondition::~_TextRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TextRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TextRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TextRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::CategoryRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::CategoryRuleCondition*>(t)->Outlook::CategoryRuleCondition::~CategoryRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::CategoryRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::CategoryRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::CategoryRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_CategoryRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_CategoryRuleCondition*>(t)->Outlook::_CategoryRuleCondition::~_CategoryRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_CategoryRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_CategoryRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_CategoryRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::FormNameRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::FormNameRuleCondition*>(t)->Outlook::FormNameRuleCondition::~FormNameRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::FormNameRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::FormNameRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::FormNameRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_FormNameRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_FormNameRuleCondition*>(t)->Outlook::_FormNameRuleCondition::~_FormNameRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_FormNameRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_FormNameRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_FormNameRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ToOrFromRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ToOrFromRuleCondition*>(t)->Outlook::ToOrFromRuleCondition::~ToOrFromRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ToOrFromRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ToOrFromRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ToOrFromRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ToOrFromRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ToOrFromRuleCondition*>(t)->Outlook::_ToOrFromRuleCondition::~_ToOrFromRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ToOrFromRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ToOrFromRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ToOrFromRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AddressRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AddressRuleCondition*>(t)->Outlook::AddressRuleCondition::~AddressRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AddressRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AddressRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AddressRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AddressRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AddressRuleCondition*>(t)->Outlook::_AddressRuleCondition::~_AddressRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AddressRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AddressRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AddressRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SenderInAddressListRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SenderInAddressListRuleCondition*>(t)->Outlook::SenderInAddressListRuleCondition::~SenderInAddressListRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SenderInAddressListRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SenderInAddressListRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SenderInAddressListRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SenderInAddressListRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SenderInAddressListRuleCondition*>(t)->Outlook::_SenderInAddressListRuleCondition::~_SenderInAddressListRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SenderInAddressListRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SenderInAddressListRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SenderInAddressListRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AddressList, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AddressList*>(t)->Outlook::AddressList::~AddressList();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AddressList;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AddressList*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AddressList*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::FromRssFeedRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::FromRssFeedRuleCondition*>(t)->Outlook::FromRssFeedRuleCondition::~FromRssFeedRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::FromRssFeedRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::FromRssFeedRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::FromRssFeedRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_FromRssFeedRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_FromRssFeedRuleCondition*>(t)->Outlook::_FromRssFeedRuleCondition::~_FromRssFeedRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_FromRssFeedRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_FromRssFeedRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_FromRssFeedRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SensitivityRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SensitivityRuleCondition*>(t)->Outlook::SensitivityRuleCondition::~SensitivityRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SensitivityRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SensitivityRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SensitivityRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SensitivityRuleCondition, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SensitivityRuleCondition*>(t)->Outlook::_SensitivityRuleCondition::~_SensitivityRuleCondition();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SensitivityRuleCondition;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SensitivityRuleCondition*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SensitivityRuleCondition*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Rule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Rule*>(t)->Outlook::Rule::~Rule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Rule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Rule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Rule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Categories, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Categories*>(t)->Outlook::Categories::~Categories();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Categories;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Categories*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Categories*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Categories, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Categories*>(t)->Outlook::_Categories::~_Categories();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Categories;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Categories*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Categories*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Category, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Category*>(t)->Outlook::_Category::~_Category();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Category;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Category*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Category*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Category, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Category*>(t)->Outlook::Category::~Category();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Category;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Category*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Category*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_PreviewPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_PreviewPane*>(t)->Outlook::_PreviewPane::~_PreviewPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_PreviewPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_PreviewPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_PreviewPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::View, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::View*>(t)->Outlook::View::~View();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::View;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::View*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::View*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Views, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Views*>(t)->Outlook::_Views::~_Views();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Views;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Views*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Views*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_StorageItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_StorageItem*>(t)->Outlook::_StorageItem::~_StorageItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_StorageItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_StorageItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_StorageItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Table, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Table*>(t)->Outlook::Table::~Table();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Table;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Table*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Table*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Table, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Table*>(t)->Outlook::_Table::~_Table();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Table;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Table*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Table*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Row, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Row*>(t)->Outlook::Row::~Row();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Row;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Row*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Row*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Row, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Row*>(t)->Outlook::_Row::~_Row();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Row;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Row*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Row*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Columns, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Columns*>(t)->Outlook::Columns::~Columns();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Columns;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Columns*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Columns*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Columns, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Columns*>(t)->Outlook::_Columns::~_Columns();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Columns;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Columns*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Columns*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Column, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Column*>(t)->Outlook::_Column::~_Column();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Column;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Column*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Column*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Column, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Column*>(t)->Outlook::Column::~Column();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Column;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Column*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Column*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::CalendarSharing, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::CalendarSharing*>(t)->Outlook::CalendarSharing::~CalendarSharing();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::CalendarSharing;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::CalendarSharing*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::CalendarSharing*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_CalendarSharing, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_CalendarSharing*>(t)->Outlook::_CalendarSharing::~_CalendarSharing();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_CalendarSharing;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_CalendarSharing*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_CalendarSharing*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MailItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MailItem*>(t)->Outlook::MailItem::~MailItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MailItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MailItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MailItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MailItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MailItem*>(t)->Outlook::_MailItem::~_MailItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MailItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MailItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MailItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Links, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Links*>(t)->Outlook::Links::~Links();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Links;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Links*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Links*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Link, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Link*>(t)->Outlook::Link::~Link();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Link;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Link*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Link*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ItemProperties, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ItemProperties*>(t)->Outlook::ItemProperties::~ItemProperties();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ItemProperties;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ItemProperties*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ItemProperties*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ItemProperty, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ItemProperty*>(t)->Outlook::ItemProperty::~ItemProperty();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ItemProperty;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ItemProperty*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ItemProperty*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Conflicts, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Conflicts*>(t)->Outlook::Conflicts::~Conflicts();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Conflicts;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Conflicts*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Conflicts*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Conflict, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Conflict*>(t)->Outlook::Conflict::~Conflict();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Conflict;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Conflict*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Conflict*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ContactItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ContactItem*>(t)->Outlook::ContactItem::~ContactItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ContactItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ContactItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ContactItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Conversation, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Conversation*>(t)->Outlook::_Conversation::~_Conversation();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Conversation;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Conversation*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Conversation*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SimpleItems, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SimpleItems*>(t)->Outlook::SimpleItems::~SimpleItems();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SimpleItems;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SimpleItems*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SimpleItems*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SimpleItems, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SimpleItems*>(t)->Outlook::_SimpleItems::~_SimpleItems();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SimpleItems;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SimpleItems*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SimpleItems*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::UserDefinedProperties, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::UserDefinedProperties*>(t)->Outlook::UserDefinedProperties::~UserDefinedProperties();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::UserDefinedProperties;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::UserDefinedProperties*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::UserDefinedProperties*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_UserDefinedProperties, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_UserDefinedProperties*>(t)->Outlook::_UserDefinedProperties::~_UserDefinedProperties();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_UserDefinedProperties;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_UserDefinedProperties*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_UserDefinedProperties*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_UserDefinedProperty, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_UserDefinedProperty*>(t)->Outlook::_UserDefinedProperty::~_UserDefinedProperty();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_UserDefinedProperty;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_UserDefinedProperty*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_UserDefinedProperty*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::UserDefinedProperty, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::UserDefinedProperty*>(t)->Outlook::UserDefinedProperty::~UserDefinedProperty();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::UserDefinedProperty;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::UserDefinedProperty*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::UserDefinedProperty*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ExchangeUser, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ExchangeUser*>(t)->Outlook::ExchangeUser::~ExchangeUser();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ExchangeUser;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ExchangeUser*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ExchangeUser*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ExchangeUser, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ExchangeUser*>(t)->Outlook::_ExchangeUser::~_ExchangeUser();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ExchangeUser;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ExchangeUser*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ExchangeUser*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ExchangeDistributionList, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ExchangeDistributionList*>(t)->Outlook::ExchangeDistributionList::~ExchangeDistributionList();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ExchangeDistributionList;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ExchangeDistributionList*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ExchangeDistributionList*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ExchangeDistributionList, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ExchangeDistributionList*>(t)->Outlook::_ExchangeDistributionList::~_ExchangeDistributionList();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ExchangeDistributionList;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ExchangeDistributionList*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ExchangeDistributionList*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AddressLists, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AddressLists*>(t)->Outlook::AddressLists::~AddressLists();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AddressLists;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AddressLists*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AddressLists*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SyncObjects, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SyncObjects*>(t)->Outlook::SyncObjects::~SyncObjects();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SyncObjects;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SyncObjects*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SyncObjects*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SyncObject, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SyncObject*>(t)->Outlook::SyncObject::~SyncObject();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SyncObject;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SyncObject*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SyncObject*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SyncObject, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SyncObject*>(t)->Outlook::_SyncObject::~_SyncObject();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SyncObject;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SyncObject*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SyncObject*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Accounts, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Accounts*>(t)->Outlook::Accounts::~Accounts();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Accounts;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Accounts*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Accounts*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Accounts, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Accounts*>(t)->Outlook::_Accounts::~_Accounts();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Accounts;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Accounts*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Accounts*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Stores, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Stores*>(t)->Outlook::Stores::~Stores();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Stores;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Stores*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Stores*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Stores, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Stores*>(t)->Outlook::_Stores::~_Stores();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Stores;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Stores*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Stores*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SelectNamesDialog, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SelectNamesDialog*>(t)->Outlook::SelectNamesDialog::~SelectNamesDialog();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SelectNamesDialog;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SelectNamesDialog*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SelectNamesDialog*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SelectNamesDialog, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SelectNamesDialog*>(t)->Outlook::_SelectNamesDialog::~_SelectNamesDialog();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SelectNamesDialog;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SelectNamesDialog*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SelectNamesDialog*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SharingItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SharingItem*>(t)->Outlook::SharingItem::~SharingItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SharingItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SharingItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SharingItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SharingItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SharingItem*>(t)->Outlook::_SharingItem::~_SharingItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SharingItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SharingItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SharingItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Explorers, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Explorers*>(t)->Outlook::_Explorers::~_Explorers();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Explorers;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Explorers*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Explorers*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Explorer, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Explorer*>(t)->Outlook::Explorer::~Explorer();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Explorer;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Explorer*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Explorer*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Inspectors, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Inspectors*>(t)->Outlook::_Inspectors::~_Inspectors();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Inspectors;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Inspectors*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Inspectors*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Inspector, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Inspector*>(t)->Outlook::Inspector::~Inspector();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Inspector;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Inspector*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Inspector*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Search, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Search*>(t)->Outlook::Search::~Search();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Search;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Search*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Search*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Results, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Results*>(t)->Outlook::_Results::~_Results();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Results;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Results*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Results*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Reminders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Reminders*>(t)->Outlook::_Reminders::~_Reminders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Reminders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Reminders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Reminders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_Reminder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_Reminder*>(t)->Outlook::_Reminder::~_Reminder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_Reminder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_Reminder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_Reminder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TimeZones, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TimeZones*>(t)->Outlook::TimeZones::~TimeZones();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TimeZones;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TimeZones*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TimeZones*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TimeZones, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TimeZones*>(t)->Outlook::_TimeZones::~_TimeZones();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TimeZones;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TimeZones*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TimeZones*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OlkTimeZoneControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OlkTimeZoneControl*>(t)->Outlook::_OlkTimeZoneControl::~_OlkTimeZoneControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OlkTimeZoneControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OlkTimeZoneControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OlkTimeZoneControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OlkTimeZoneControl, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OlkTimeZoneControl*>(t)->Outlook::OlkTimeZoneControl::~OlkTimeZoneControl();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OlkTimeZoneControl;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OlkTimeZoneControl*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OlkTimeZoneControl*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PropertyPages, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PropertyPages*>(t)->Outlook::PropertyPages::~PropertyPages();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PropertyPages;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PropertyPages*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PropertyPages*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RecurrencePattern, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RecurrencePattern*>(t)->Outlook::RecurrencePattern::~RecurrencePattern();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RecurrencePattern;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RecurrencePattern*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RecurrencePattern*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Exceptions, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Exceptions*>(t)->Outlook::Exceptions::~Exceptions();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Exceptions;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Exceptions*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Exceptions*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Exception, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Exception*>(t)->Outlook::Exception::~Exception();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Exception;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Exception*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Exception*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AppointmentItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AppointmentItem*>(t)->Outlook::AppointmentItem::~AppointmentItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AppointmentItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AppointmentItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AppointmentItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AppointmentItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AppointmentItem*>(t)->Outlook::_AppointmentItem::~_AppointmentItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AppointmentItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AppointmentItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AppointmentItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MeetingItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MeetingItem*>(t)->Outlook::MeetingItem::~MeetingItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MeetingItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MeetingItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MeetingItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MeetingItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MeetingItem*>(t)->Outlook::_MeetingItem::~_MeetingItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MeetingItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MeetingItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MeetingItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarGroup, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarGroup*>(t)->Outlook::OutlookBarGroup::~OutlookBarGroup();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarGroup;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarGroup*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarGroup*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OutlookBarShortcuts, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OutlookBarShortcuts*>(t)->Outlook::_OutlookBarShortcuts::~_OutlookBarShortcuts();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OutlookBarShortcuts;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OutlookBarShortcuts*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OutlookBarShortcuts*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarShortcut, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarShortcut*>(t)->Outlook::OutlookBarShortcut::~OutlookBarShortcut();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarShortcut;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarShortcut*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarShortcut*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OutlookBarGroups, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OutlookBarGroups*>(t)->Outlook::_OutlookBarGroups::~_OutlookBarGroups();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OutlookBarGroups;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OutlookBarGroups*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OutlookBarGroups*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OutlookBarPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OutlookBarPane*>(t)->Outlook::_OutlookBarPane::~_OutlookBarPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OutlookBarPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OutlookBarPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OutlookBarPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarStorage, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarStorage*>(t)->Outlook::OutlookBarStorage::~OutlookBarStorage();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarStorage;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarStorage*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarStorage*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PropertyPageSite, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PropertyPageSite*>(t)->Outlook::PropertyPageSite::~PropertyPageSite();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PropertyPageSite;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PropertyPageSite*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PropertyPageSite*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Pages, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Pages*>(t)->Outlook::Pages::~Pages();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Pages;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Pages*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Pages*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AttachmentSelection, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AttachmentSelection*>(t)->Outlook::AttachmentSelection::~AttachmentSelection();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AttachmentSelection;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AttachmentSelection*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AttachmentSelection*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Folder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Folder*>(t)->Outlook::Folder::~Folder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Folder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Folder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Folder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_DocumentItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_DocumentItem*>(t)->Outlook::_DocumentItem::~_DocumentItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_DocumentItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_DocumentItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_DocumentItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NoteItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NoteItem*>(t)->Outlook::_NoteItem::~_NoteItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NoteItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NoteItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NoteItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ViewField, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ViewField*>(t)->Outlook::_ViewField::~_ViewField();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ViewField;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ViewField*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ViewField*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ColumnFormat, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ColumnFormat*>(t)->Outlook::ColumnFormat::~ColumnFormat();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ColumnFormat;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ColumnFormat*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ColumnFormat*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ColumnFormat, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ColumnFormat*>(t)->Outlook::_ColumnFormat::~_ColumnFormat();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ColumnFormat;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ColumnFormat*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ColumnFormat*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ViewFields, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ViewFields*>(t)->Outlook::_ViewFields::~_ViewFields();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ViewFields;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ViewFields*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ViewFields*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ViewField, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ViewField*>(t)->Outlook::ViewField::~ViewField();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ViewField;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ViewField*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ViewField*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_IconView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_IconView*>(t)->Outlook::_IconView::~_IconView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_IconView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_IconView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_IconView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OrderFields, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OrderFields*>(t)->Outlook::OrderFields::~OrderFields();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OrderFields;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OrderFields*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OrderFields*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OrderFields, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OrderFields*>(t)->Outlook::_OrderFields::~_OrderFields();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OrderFields;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OrderFields*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OrderFields*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_OrderField, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_OrderField*>(t)->Outlook::_OrderField::~_OrderField();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_OrderField;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_OrderField*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_OrderField*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OrderField, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OrderField*>(t)->Outlook::OrderField::~OrderField();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OrderField;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OrderField*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OrderField*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_CardView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_CardView*>(t)->Outlook::_CardView::~_CardView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_CardView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_CardView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_CardView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ViewFields, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ViewFields*>(t)->Outlook::ViewFields::~ViewFields();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ViewFields;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ViewFields*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ViewFields*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ViewFont, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ViewFont*>(t)->Outlook::ViewFont::~ViewFont();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ViewFont;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ViewFont*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ViewFont*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ViewFont, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ViewFont*>(t)->Outlook::_ViewFont::~_ViewFont();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ViewFont;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ViewFont*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ViewFont*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AutoFormatRules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AutoFormatRules*>(t)->Outlook::AutoFormatRules::~AutoFormatRules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AutoFormatRules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AutoFormatRules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AutoFormatRules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AutoFormatRules, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AutoFormatRules*>(t)->Outlook::_AutoFormatRules::~_AutoFormatRules();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AutoFormatRules;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AutoFormatRules*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AutoFormatRules*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AutoFormatRule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AutoFormatRule*>(t)->Outlook::AutoFormatRule::~AutoFormatRule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AutoFormatRule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AutoFormatRule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AutoFormatRule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_AutoFormatRule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_AutoFormatRule*>(t)->Outlook::_AutoFormatRule::~_AutoFormatRule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_AutoFormatRule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_AutoFormatRule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_AutoFormatRule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TimelineView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TimelineView*>(t)->Outlook::_TimelineView::~_TimelineView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TimelineView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TimelineView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TimelineView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MailModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MailModule*>(t)->Outlook::_MailModule::~_MailModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MailModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MailModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MailModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationGroups, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationGroups*>(t)->Outlook::_NavigationGroups::~_NavigationGroups();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationGroups;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationGroups*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationGroups*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationGroup, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationGroup*>(t)->Outlook::_NavigationGroup::~_NavigationGroup();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationGroup;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationGroup*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationGroup*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationFolders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationFolders*>(t)->Outlook::NavigationFolders::~NavigationFolders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationFolders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationFolders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationFolders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationFolders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationFolders*>(t)->Outlook::_NavigationFolders::~_NavigationFolders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationFolders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationFolders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationFolders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NavigationFolder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NavigationFolder*>(t)->Outlook::_NavigationFolder::~_NavigationFolder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NavigationFolder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NavigationFolder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NavigationFolder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationFolder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationFolder*>(t)->Outlook::NavigationFolder::~NavigationFolder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationFolder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationFolder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationFolder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationGroup, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationGroup*>(t)->Outlook::NavigationGroup::~NavigationGroup();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationGroup;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationGroup*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationGroup*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_CalendarModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_CalendarModule*>(t)->Outlook::_CalendarModule::~_CalendarModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_CalendarModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_CalendarModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_CalendarModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ContactsModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ContactsModule*>(t)->Outlook::_ContactsModule::~_ContactsModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ContactsModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ContactsModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ContactsModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TasksModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TasksModule*>(t)->Outlook::_TasksModule::~_TasksModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TasksModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TasksModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TasksModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_JournalModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_JournalModule*>(t)->Outlook::_JournalModule::~_JournalModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_JournalModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_JournalModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_JournalModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_NotesModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_NotesModule*>(t)->Outlook::_NotesModule::~_NotesModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_NotesModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_NotesModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_NotesModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_BusinessCardView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_BusinessCardView*>(t)->Outlook::_BusinessCardView::~_BusinessCardView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_BusinessCardView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_BusinessCardView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_BusinessCardView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_FormRegionStartup, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_FormRegionStartup*>(t)->Outlook::_FormRegionStartup::~_FormRegionStartup();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_FormRegionStartup;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_FormRegionStartup*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_FormRegionStartup*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::FormRegion, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::FormRegion*>(t)->Outlook::FormRegion::~FormRegion();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::FormRegion;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::FormRegion*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::FormRegion*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_FormRegion, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_FormRegion*>(t)->Outlook::_FormRegion::~_FormRegion();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_FormRegion;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_FormRegion*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_FormRegion*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_SolutionsModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_SolutionsModule*>(t)->Outlook::_SolutionsModule::~_SolutionsModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_SolutionsModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_SolutionsModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_SolutionsModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_CalendarView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_CalendarView*>(t)->Outlook::_CalendarView::~_CalendarView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_CalendarView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_CalendarView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_CalendarView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TableView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TableView*>(t)->Outlook::_TableView::~_TableView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TableView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TableView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TableView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MobileItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MobileItem*>(t)->Outlook::_MobileItem::~_MobileItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MobileItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MobileItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MobileItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MobileItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MobileItem*>(t)->Outlook::MobileItem::~MobileItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MobileItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MobileItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MobileItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_JournalItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_JournalItem*>(t)->Outlook::_JournalItem::~_JournalItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_JournalItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_JournalItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_JournalItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_PostItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_PostItem*>(t)->Outlook::_PostItem::~_PostItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_PostItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_PostItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_PostItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TaskItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TaskItem*>(t)->Outlook::_TaskItem::~_TaskItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TaskItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TaskItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TaskItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TaskItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TaskItem*>(t)->Outlook::TaskItem::~TaskItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TaskItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TaskItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TaskItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_DistListItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_DistListItem*>(t)->Outlook::_DistListItem::~_DistListItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_DistListItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_DistListItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_DistListItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ReportItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ReportItem*>(t)->Outlook::_ReportItem::~_ReportItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ReportItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ReportItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ReportItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_RemoteItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_RemoteItem*>(t)->Outlook::_RemoteItem::~_RemoteItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_RemoteItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_RemoteItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_RemoteItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TaskRequestItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TaskRequestItem*>(t)->Outlook::_TaskRequestItem::~_TaskRequestItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TaskRequestItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TaskRequestItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TaskRequestItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TaskRequestAcceptItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TaskRequestAcceptItem*>(t)->Outlook::_TaskRequestAcceptItem::~_TaskRequestAcceptItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TaskRequestAcceptItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TaskRequestAcceptItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TaskRequestAcceptItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TaskRequestDeclineItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TaskRequestDeclineItem*>(t)->Outlook::_TaskRequestDeclineItem::~_TaskRequestDeclineItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TaskRequestDeclineItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TaskRequestDeclineItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TaskRequestDeclineItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_TaskRequestUpdateItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_TaskRequestUpdateItem*>(t)->Outlook::_TaskRequestUpdateItem::~_TaskRequestUpdateItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_TaskRequestUpdateItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_TaskRequestUpdateItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_TaskRequestUpdateItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ConversationHeader, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ConversationHeader*>(t)->Outlook::_ConversationHeader::~_ConversationHeader();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ConversationHeader;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ConversationHeader*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ConversationHeader*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_PeopleView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_PeopleView*>(t)->Outlook::_PeopleView::~_PeopleView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_PeopleView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_PeopleView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_PeopleView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_ThreadView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_ThreadView*>(t)->Outlook::_ThreadView::~_ThreadView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_ThreadView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_ThreadView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_ThreadView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::_MessageListView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::_MessageListView*>(t)->Outlook::_MessageListView::~_MessageListView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::_MessageListView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::_MessageListView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::_MessageListView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Application, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Application*>(t)->Outlook::Application::~Application();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Application;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Application*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Application*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::DistListItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::DistListItem*>(t)->Outlook::DistListItem::~DistListItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::DistListItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::DistListItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::DistListItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::DocumentItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::DocumentItem*>(t)->Outlook::DocumentItem::~DocumentItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::DocumentItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::DocumentItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::DocumentItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Explorers, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Explorers*>(t)->Outlook::Explorers::~Explorers();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Explorers;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Explorers*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Explorers*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Inspectors, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Inspectors*>(t)->Outlook::Inspectors::~Inspectors();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Inspectors;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Inspectors*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Inspectors*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Folders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Folders*>(t)->Outlook::Folders::~Folders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Folders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Folders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Folders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Items, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Items*>(t)->Outlook::Items::~Items();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Items;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Items*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Items*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::JournalItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::JournalItem*>(t)->Outlook::JournalItem::~JournalItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::JournalItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::JournalItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::JournalItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NameSpace, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NameSpace*>(t)->Outlook::NameSpace::~NameSpace();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NameSpace;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NameSpace*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NameSpace*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NoteItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NoteItem*>(t)->Outlook::NoteItem::~NoteItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NoteItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NoteItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NoteItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarGroups, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarGroups*>(t)->Outlook::OutlookBarGroups::~OutlookBarGroups();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarGroups;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarGroups*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarGroups*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarPane*>(t)->Outlook::OutlookBarPane::~OutlookBarPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::OutlookBarShortcuts, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::OutlookBarShortcuts*>(t)->Outlook::OutlookBarShortcuts::~OutlookBarShortcuts();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::OutlookBarShortcuts;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::OutlookBarShortcuts*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::OutlookBarShortcuts*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PostItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PostItem*>(t)->Outlook::PostItem::~PostItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PostItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PostItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PostItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::RemoteItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::RemoteItem*>(t)->Outlook::RemoteItem::~RemoteItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::RemoteItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::RemoteItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::RemoteItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ReportItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ReportItem*>(t)->Outlook::ReportItem::~ReportItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ReportItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ReportItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ReportItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TaskRequestAcceptItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TaskRequestAcceptItem*>(t)->Outlook::TaskRequestAcceptItem::~TaskRequestAcceptItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TaskRequestAcceptItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TaskRequestAcceptItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TaskRequestAcceptItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TaskRequestDeclineItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TaskRequestDeclineItem*>(t)->Outlook::TaskRequestDeclineItem::~TaskRequestDeclineItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TaskRequestDeclineItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TaskRequestDeclineItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TaskRequestDeclineItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TaskRequestItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TaskRequestItem*>(t)->Outlook::TaskRequestItem::~TaskRequestItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TaskRequestItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TaskRequestItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TaskRequestItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TaskRequestUpdateItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TaskRequestUpdateItem*>(t)->Outlook::TaskRequestUpdateItem::~TaskRequestUpdateItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TaskRequestUpdateItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TaskRequestUpdateItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TaskRequestUpdateItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Results, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Results*>(t)->Outlook::Results::~Results();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Results;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Results*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Results*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Views, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Views*>(t)->Outlook::Views::~Views();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Views;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Views*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Views*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Reminder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Reminder*>(t)->Outlook::Reminder::~Reminder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Reminder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Reminder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Reminder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Reminders, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Reminders*>(t)->Outlook::Reminders::~Reminders();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Reminders;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Reminders*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Reminders*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::StorageItem, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::StorageItem*>(t)->Outlook::StorageItem::~StorageItem();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::StorageItem;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::StorageItem*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::StorageItem*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationPane*>(t)->Outlook::NavigationPane::~NavigationPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NavigationGroups, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NavigationGroups*>(t)->Outlook::NavigationGroups::~NavigationGroups();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NavigationGroups;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NavigationGroups*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NavigationGroups*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::DoNotUseMeFolder, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::DoNotUseMeFolder*>(t)->Outlook::DoNotUseMeFolder::~DoNotUseMeFolder();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::DoNotUseMeFolder;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::DoNotUseMeFolder*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::DoNotUseMeFolder*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TimelineView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TimelineView*>(t)->Outlook::TimelineView::~TimelineView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TimelineView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TimelineView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TimelineView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MailModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MailModule*>(t)->Outlook::MailModule::~MailModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MailModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MailModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MailModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::CalendarModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::CalendarModule*>(t)->Outlook::CalendarModule::~CalendarModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::CalendarModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::CalendarModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::CalendarModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ContactsModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ContactsModule*>(t)->Outlook::ContactsModule::~ContactsModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ContactsModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ContactsModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ContactsModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TasksModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TasksModule*>(t)->Outlook::TasksModule::~TasksModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TasksModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TasksModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TasksModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::JournalModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::JournalModule*>(t)->Outlook::JournalModule::~JournalModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::JournalModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::JournalModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::JournalModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::NotesModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::NotesModule*>(t)->Outlook::NotesModule::~NotesModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::NotesModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::NotesModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::NotesModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TableView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TableView*>(t)->Outlook::TableView::~TableView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TableView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TableView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TableView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::IconView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::IconView*>(t)->Outlook::IconView::~IconView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::IconView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::IconView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::IconView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::CardView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::CardView*>(t)->Outlook::CardView::~CardView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::CardView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::CardView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::CardView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::CalendarView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::CalendarView*>(t)->Outlook::CalendarView::~CalendarView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::CalendarView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::CalendarView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::CalendarView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::BusinessCardView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::BusinessCardView*>(t)->Outlook::BusinessCardView::~BusinessCardView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::BusinessCardView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::BusinessCardView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::BusinessCardView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::FormRegionStartup, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::FormRegionStartup*>(t)->Outlook::FormRegionStartup::~FormRegionStartup();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::FormRegionStartup;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::FormRegionStartup*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::FormRegionStartup*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::TimeZone, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::TimeZone*>(t)->Outlook::TimeZone::~TimeZone();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::TimeZone;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::TimeZone*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::TimeZone*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::SolutionsModule, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::SolutionsModule*>(t)->Outlook::SolutionsModule::~SolutionsModule();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::SolutionsModule;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::SolutionsModule*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::SolutionsModule*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::Conversation, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::Conversation*>(t)->Outlook::Conversation::~Conversation();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::Conversation;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::Conversation*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::Conversation*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::AccountSelector, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::AccountSelector*>(t)->Outlook::AccountSelector::~AccountSelector();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::AccountSelector;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::AccountSelector*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::AccountSelector*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ConversationHeader, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ConversationHeader*>(t)->Outlook::ConversationHeader::~ConversationHeader();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ConversationHeader;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ConversationHeader*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ConversationHeader*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PeopleView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PeopleView*>(t)->Outlook::PeopleView::~PeopleView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PeopleView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PeopleView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PeopleView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::ThreadView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::ThreadView*>(t)->Outlook::ThreadView::~ThreadView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::ThreadView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::ThreadView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::ThreadView*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::PreviewPane, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::PreviewPane*>(t)->Outlook::PreviewPane::~PreviewPane();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::PreviewPane;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::PreviewPane*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::PreviewPane*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Outlook::MessageListView, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Outlook::MessageListView*>(t)->Outlook::MessageListView::~MessageListView();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Outlook::MessageListView;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Outlook::MessageListView*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Outlook::MessageListView*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

